{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/common.js"],"sourcesContent":["/**\n * common.js: Internal helper and utility functions for winston.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst { format } = require('util');\n\n/**\n * Set of simple deprecation notices and a way to expose them for a set of\n * properties.\n * @type {Object}\n * @private\n */\nexports.warn = {\n  deprecated(prop) {\n    return () => {\n      throw new Error(format('{ %s } was removed in winston@3.0.0.', prop));\n    };\n  },\n  useFormat(prop) {\n    return () => {\n      throw new Error([\n        format('{ %s } was removed in winston@3.0.0.', prop),\n        'Use a custom winston.format = winston.format(function) instead.'\n      ].join('\\n'));\n    };\n  },\n  forFunctions(obj, type, props) {\n    props.forEach(prop => {\n      obj[prop] = exports.warn[type](prop);\n    });\n  },\n  forProperties(obj, type, props) {\n    props.forEach(prop => {\n      const notice = exports.warn[type](prop);\n      Object.defineProperty(obj, prop, {\n        get: notice,\n        set: notice\n      });\n    });\n  }\n};\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;AAEA,MAAM,EAAE,MAAM,EAAE;AAEhB;;;;;CAKC,GACD,QAAQ,IAAI,GAAG;IACb,YAAW,IAAI;QACb,OAAO;YACL,MAAM,IAAI,MAAM,OAAO,wCAAwC;QACjE;IACF;IACA,WAAU,IAAI;QACZ,OAAO;YACL,MAAM,IAAI,MAAM;gBACd,OAAO,wCAAwC;gBAC/C;aACD,CAAC,IAAI,CAAC;QACT;IACF;IACA,cAAa,GAAG,EAAE,IAAI,EAAE,KAAK;QAC3B,MAAM,OAAO,CAAC,CAAA;YACZ,GAAG,CAAC,KAAK,GAAG,QAAQ,IAAI,CAAC,KAAK,CAAC;QACjC;IACF;IACA,eAAc,GAAG,EAAE,IAAI,EAAE,KAAK;QAC5B,MAAM,OAAO,CAAC,CAAA;YACZ,MAAM,SAAS,QAAQ,IAAI,CAAC,KAAK,CAAC;YAClC,OAAO,cAAc,CAAC,KAAK,MAAM;gBAC/B,KAAK;gBACL,KAAK;YACP;QACF;IACF;AACF"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/transports/console.js"],"sourcesContent":["/* eslint-disable no-console */\n/*\n * console.js: Transport for outputting to the console.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst os = require('os');\nconst { LEVEL, MESSAGE } = require('triple-beam');\nconst TransportStream = require('winston-transport');\n\n/**\n * Transport for outputting to the console.\n * @type {Console}\n * @extends {TransportStream}\n */\nmodule.exports = class Console extends TransportStream {\n  /**\n   * Constructor function for the Console transport object responsible for\n   * persisting log messages and metadata to a terminal or TTY.\n   * @param {!Object} [options={}] - Options for this instance.\n   */\n  constructor(options = {}) {\n    super(options);\n\n    // Expose the name of this Transport on the prototype\n    this.name = options.name || 'console';\n    this.stderrLevels = this._stringArrayToSet(options.stderrLevels);\n    this.consoleWarnLevels = this._stringArrayToSet(options.consoleWarnLevels);\n    this.eol = typeof options.eol === 'string' ? options.eol : os.EOL;\n    this.forceConsole = options.forceConsole || false;\n\n    // Keep a reference to the log, warn, and error console methods\n    // in case they get redirected to this transport after the logger is\n    // instantiated. This prevents a circular reference issue.\n    this._consoleLog = console.log.bind(console);\n    this._consoleWarn = console.warn.bind(console);\n    this._consoleError = console.error.bind(console);\n\n    this.setMaxListeners(30);\n  }\n\n  /**\n   * Core logging method exposed to Winston.\n   * @param {Object} info - TODO: add param description.\n   * @param {Function} callback - TODO: add param description.\n   * @returns {undefined}\n   */\n  log(info, callback) {\n    setImmediate(() => this.emit('logged', info));\n\n    // Remark: what if there is no raw...?\n    if (this.stderrLevels[info[LEVEL]]) {\n      if (console._stderr && !this.forceConsole) {\n        // Node.js maps `process.stderr` to `console._stderr`.\n        console._stderr.write(`${info[MESSAGE]}${this.eol}`);\n      } else {\n        // console.error adds a newline\n        this._consoleError(info[MESSAGE]);\n      }\n\n      if (callback) {\n        callback(); // eslint-disable-line callback-return\n      }\n      return;\n    } else if (this.consoleWarnLevels[info[LEVEL]]) {\n      if (console._stderr && !this.forceConsole) {\n        // Node.js maps `process.stderr` to `console._stderr`.\n        // in Node.js console.warn is an alias for console.error\n        console._stderr.write(`${info[MESSAGE]}${this.eol}`);\n      } else {\n        // console.warn adds a newline\n        this._consoleWarn(info[MESSAGE]);\n      }\n\n      if (callback) {\n        callback(); // eslint-disable-line callback-return\n      }\n      return;\n    }\n\n    if (console._stdout && !this.forceConsole) {\n      // Node.js maps `process.stdout` to `console._stdout`.\n      console._stdout.write(`${info[MESSAGE]}${this.eol}`);\n    } else {\n      // console.log adds a newline.\n      this._consoleLog(info[MESSAGE]);\n    }\n\n    if (callback) {\n      callback(); // eslint-disable-line callback-return\n    }\n  }\n\n  /**\n   * Returns a Set-like object with strArray's elements as keys (each with the\n   * value true).\n   * @param {Array} strArray - Array of Set-elements as strings.\n   * @param {?string} [errMsg] - Custom error message thrown on invalid input.\n   * @returns {Object} - TODO: add return description.\n   * @private\n   */\n  _stringArrayToSet(strArray, errMsg) {\n    if (!strArray) return {};\n\n    errMsg =\n      errMsg || 'Cannot make set from type other than Array of string elements';\n\n    if (!Array.isArray(strArray)) {\n      throw new Error(errMsg);\n    }\n\n    return strArray.reduce((set, el) => {\n      if (typeof el !== 'string') {\n        throw new Error(errMsg);\n      }\n      set[el] = true;\n\n      return set;\n    }, {});\n  }\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/tail-file.js"],"sourcesContent":["/**\n * tail-file.js: TODO: add file header description.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst fs = require('fs');\nconst { StringDecoder } = require('string_decoder');\nconst { Stream } = require('readable-stream');\n\n/**\n * Simple no-op function.\n * @returns {undefined}\n */\nfunction noop() {}\n\n/**\n * TODO: add function description.\n * @param {Object} options - Options for tail.\n * @param {function} iter - Iterator function to execute on every line.\n* `tail -f` a file. Options must include file.\n * @returns {mixed} - TODO: add return description.\n */\nmodule.exports = (options, iter) => {\n  const buffer = Buffer.alloc(64 * 1024);\n  const decode = new StringDecoder('utf8');\n  const stream = new Stream();\n  let buff = '';\n  let pos = 0;\n  let row = 0;\n\n  if (options.start === -1) {\n    delete options.start;\n  }\n\n  stream.readable = true;\n  stream.destroy = () => {\n    stream.destroyed = true;\n    stream.emit('end');\n    stream.emit('close');\n  };\n\n  fs.open(options.file, 'a+', '0644', (err, fd) => {\n    if (err) {\n      if (!iter) {\n        stream.emit('error', err);\n      } else {\n        iter(err);\n      }\n      stream.destroy();\n      return;\n    }\n\n    (function read() {\n      if (stream.destroyed) {\n        fs.close(fd, noop);\n        return;\n      }\n\n      return fs.read(fd, buffer, 0, buffer.length, pos, (error, bytes) => {\n        if (error) {\n          if (!iter) {\n            stream.emit('error', error);\n          } else {\n            iter(error);\n          }\n          stream.destroy();\n          return;\n        }\n\n        if (!bytes) {\n          if (buff) {\n            // eslint-disable-next-line eqeqeq\n            if (options.start == null || row > options.start) {\n              if (!iter) {\n                stream.emit('line', buff);\n              } else {\n                iter(null, buff);\n              }\n            }\n            row++;\n            buff = '';\n          }\n          return setTimeout(read, 1000);\n        }\n\n        let data = decode.write(buffer.slice(0, bytes));\n        if (!iter) {\n          stream.emit('data', data);\n        }\n\n        data = (buff + data).split(/\\n+/);\n\n        const l = data.length - 1;\n        let i = 0;\n\n        for (; i < l; i++) {\n          // eslint-disable-next-line eqeqeq\n          if (options.start == null || row > options.start) {\n            if (!iter) {\n              stream.emit('line', data[i]);\n            } else {\n              iter(null, data[i]);\n            }\n          }\n          row++;\n        }\n\n        buff = data[l];\n        pos += bytes;\n        return read();\n      });\n    }());\n  });\n\n  if (!iter) {\n    return stream;\n  }\n\n  return stream.destroy;\n};\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;AAEA,MAAM;AACN,MAAM,EAAE,aAAa,EAAE;AACvB,MAAM,EAAE,MAAM,EAAE;AAEhB;;;CAGC,GACD,SAAS,QAAQ;AAEjB;;;;;;CAMC,GACD,OAAO,OAAO,GAAG,CAAC,SAAS;IACzB,MAAM,SAAS,OAAO,KAAK,CAAC,KAAK;IACjC,MAAM,SAAS,IAAI,cAAc;IACjC,MAAM,SAAS,IAAI;IACnB,IAAI,OAAO;IACX,IAAI,MAAM;IACV,IAAI,MAAM;IAEV,IAAI,QAAQ,KAAK,KAAK,CAAC,GAAG;QACxB,OAAO,QAAQ,KAAK;IACtB;IAEA,OAAO,QAAQ,GAAG;IAClB,OAAO,OAAO,GAAG;QACf,OAAO,SAAS,GAAG;QACnB,OAAO,IAAI,CAAC;QACZ,OAAO,IAAI,CAAC;IACd;IAEA,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,MAAM,QAAQ,CAAC,KAAK;QACxC,IAAI,KAAK;YACP,IAAI,CAAC,MAAM;gBACT,OAAO,IAAI,CAAC,SAAS;YACvB,OAAO;gBACL,KAAK;YACP;YACA,OAAO,OAAO;YACd;QACF;QAEC,CAAA,SAAS;YACR,IAAI,OAAO,SAAS,EAAE;gBACpB,GAAG,KAAK,CAAC,IAAI;gBACb;YACF;YAEA,OAAO,GAAG,IAAI,CAAC,IAAI,QAAQ,GAAG,OAAO,MAAM,EAAE,KAAK,CAAC,OAAO;gBACxD,IAAI,OAAO;oBACT,IAAI,CAAC,MAAM;wBACT,OAAO,IAAI,CAAC,SAAS;oBACvB,OAAO;wBACL,KAAK;oBACP;oBACA,OAAO,OAAO;oBACd;gBACF;gBAEA,IAAI,CAAC,OAAO;oBACV,IAAI,MAAM;wBACR,kCAAkC;wBAClC,IAAI,QAAQ,KAAK,IAAI,QAAQ,MAAM,QAAQ,KAAK,EAAE;4BAChD,IAAI,CAAC,MAAM;gCACT,OAAO,IAAI,CAAC,QAAQ;4BACtB,OAAO;gCACL,KAAK,MAAM;4BACb;wBACF;wBACA;wBACA,OAAO;oBACT;oBACA,OAAO,WAAW,MAAM;gBAC1B;gBAEA,IAAI,OAAO,OAAO,KAAK,CAAC,OAAO,KAAK,CAAC,GAAG;gBACxC,IAAI,CAAC,MAAM;oBACT,OAAO,IAAI,CAAC,QAAQ;gBACtB;gBAEA,OAAO,CAAC,OAAO,IAAI,EAAE,KAAK,CAAC;gBAE3B,MAAM,IAAI,KAAK,MAAM,GAAG;gBACxB,IAAI,IAAI;gBAER,MAAO,IAAI,GAAG,IAAK;oBACjB,kCAAkC;oBAClC,IAAI,QAAQ,KAAK,IAAI,QAAQ,MAAM,QAAQ,KAAK,EAAE;wBAChD,IAAI,CAAC,MAAM;4BACT,OAAO,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;wBAC7B,OAAO;4BACL,KAAK,MAAM,IAAI,CAAC,EAAE;wBACpB;oBACF;oBACA;gBACF;gBAEA,OAAO,IAAI,CAAC,EAAE;gBACd,OAAO;gBACP,OAAO;YACT;QACF,CAAA;IACF;IAEA,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,OAAO,OAAO,OAAO;AACvB"}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/transports/file.js"],"sourcesContent":["/* eslint-disable complexity,max-statements */\n/**\n * file.js: Transport for outputting to a local log file.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst asyncSeries = require('async/series');\nconst zlib = require('zlib');\nconst { MESSAGE } = require('triple-beam');\nconst { Stream, PassThrough } = require('readable-stream');\nconst TransportStream = require('winston-transport');\nconst debug = require('@dabh/diagnostics')('winston:file');\nconst os = require('os');\nconst tailFile = require('../tail-file');\n\n/**\n * Transport for outputting to a local log file.\n * @type {File}\n * @extends {TransportStream}\n */\nmodule.exports = class File extends TransportStream {\n  /**\n   * Constructor function for the File transport object responsible for\n   * persisting log messages and metadata to one or more files.\n   * @param {Object} options - Options for this instance.\n   */\n  constructor(options = {}) {\n    super(options);\n\n    // Expose the name of this Transport on the prototype.\n    this.name = options.name || 'file';\n\n    // Helper function which throws an `Error` in the event that any of the\n    // rest of the arguments is present in `options`.\n    function throwIf(target, ...args) {\n      args.slice(1).forEach(name => {\n        if (options[name]) {\n          throw new Error(`Cannot set ${name} and ${target} together`);\n        }\n      });\n    }\n\n    // Setup the base stream that always gets piped to to handle buffering.\n    this._stream = new PassThrough();\n    this._stream.setMaxListeners(30);\n\n    // Bind this context for listener methods.\n    this._onError = this._onError.bind(this);\n\n    if (options.filename || options.dirname) {\n      throwIf('filename or dirname', 'stream');\n      this._basename = this.filename = options.filename\n        ? path.basename(options.filename)\n        : 'winston.log';\n\n      this.dirname = options.dirname || path.dirname(options.filename);\n      this.options = options.options || { flags: 'a' };\n    } else if (options.stream) {\n      // eslint-disable-next-line no-console\n      console.warn('options.stream will be removed in winston@4. Use winston.transports.Stream');\n      throwIf('stream', 'filename', 'maxsize');\n      this._dest = this._stream.pipe(this._setupStream(options.stream));\n      this.dirname = path.dirname(this._dest.path);\n      // We need to listen for drain events when write() returns false. This\n      // can make node mad at times.\n    } else {\n      throw new Error('Cannot log to file without filename or stream.');\n    }\n\n    this.maxsize = options.maxsize || null;\n    this.rotationFormat = options.rotationFormat || false;\n    this.zippedArchive = options.zippedArchive || false;\n    this.maxFiles = options.maxFiles || null;\n    this.eol = (typeof options.eol === 'string') ? options.eol : os.EOL;\n    this.tailable = options.tailable || false;\n    this.lazy = options.lazy || false;\n\n    // Internal state variables representing the number of files this instance\n    // has created and the current size (in bytes) of the current logfile.\n    this._size = 0;\n    this._pendingSize = 0;\n    this._created = 0;\n    this._drain = false;\n    this._opening = false;\n    this._ending = false;\n    this._fileExist = false;\n\n    if (this.dirname) this._createLogDirIfNotExist(this.dirname);\n    if (!this.lazy) this.open();\n  }\n\n  finishIfEnding() {\n    if (this._ending) {\n      if (this._opening) {\n        this.once('open', () => {\n          this._stream.once('finish', () => this.emit('finish'));\n          setImmediate(() => this._stream.end());\n        });\n      } else {\n        this._stream.once('finish', () => this.emit('finish'));\n        setImmediate(() => this._stream.end());\n      }\n    }\n  }\n\n  /**\n   * Core logging method exposed to Winston. Metadata is optional.\n   * @param {Object} info - TODO: add param description.\n   * @param {Function} callback - TODO: add param description.\n   * @returns {undefined}\n   */\n  log(info, callback = () => { }) {\n    // Remark: (jcrugzz) What is necessary about this callback(null, true) now\n    // when thinking about 3.x? Should silent be handled in the base\n    // TransportStream _write method?\n    if (this.silent) {\n      callback();\n      return true;\n    }\n\n\n    // Output stream buffer is full and has asked us to wait for the drain event\n    if (this._drain) {\n      this._stream.once('drain', () => {\n        this._drain = false;\n        this.log(info, callback);\n      });\n      return;\n    }\n    if (this._rotate) {\n      this._stream.once('rotate', () => {\n        this._rotate = false;\n        this.log(info, callback);\n      });\n      return;\n    }\n    if (this.lazy) {\n      if (!this._fileExist) {\n        if (!this._opening) {\n          this.open();\n        }\n        this.once('open', () => {\n          this._fileExist = true;\n          this.log(info, callback);\n          return;\n        });\n        return;\n      }\n      if (this._needsNewFile(this._pendingSize)) {\n        this._dest.once('close', () => {\n          if (!this._opening) {\n            this.open();\n          }\n          this.once('open', () => {\n            this.log(info, callback);\n            return;\n          });\n          return;\n        });\n        return;\n      }\n    }\n\n    // Grab the raw string and append the expected EOL.\n    const output = `${info[MESSAGE]}${this.eol}`;\n    const bytes = Buffer.byteLength(output);\n\n    // After we have written to the PassThrough check to see if we need\n    // to rotate to the next file.\n    //\n    // Remark: This gets called too early and does not depict when data\n    // has been actually flushed to disk.\n    function logged() {\n      this._size += bytes;\n      this._pendingSize -= bytes;\n\n      debug('logged %s %s', this._size, output);\n      this.emit('logged', info);\n\n      // Do not attempt to rotate files while rotating\n      if (this._rotate) {\n        return;\n      }\n\n      // Do not attempt to rotate files while opening\n      if (this._opening) {\n        return;\n      }\n\n      // Check to see if we need to end the stream and create a new one.\n      if (!this._needsNewFile()) {\n        return;\n      }\n      if (this.lazy) {\n        this._endStream(() => {this.emit('fileclosed');});\n        return;\n      }\n\n      // End the current stream, ensure it flushes and create a new one.\n      // This could potentially be optimized to not run a stat call but its\n      // the safest way since we are supporting `maxFiles`.\n      this._rotate = true;\n      this._endStream(() => this._rotateFile());\n    }\n\n    // Keep track of the pending bytes being written while files are opening\n    // in order to properly rotate the PassThrough this._stream when the file\n    // eventually does open.\n    this._pendingSize += bytes;\n    if (this._opening\n      && !this.rotatedWhileOpening\n      && this._needsNewFile(this._size + this._pendingSize)) {\n      this.rotatedWhileOpening = true;\n    }\n\n    const written = this._stream.write(output, logged.bind(this));\n    if (!written) {\n      this._drain = true;\n      this._stream.once('drain', () => {\n        this._drain = false;\n        callback();\n      });\n    } else {\n      callback(); // eslint-disable-line callback-return\n    }\n\n    debug('written', written, this._drain);\n\n    this.finishIfEnding();\n\n    return written;\n  }\n\n  /**\n   * Query the transport. Options object is optional.\n   * @param {Object} options - Loggly-like query options for this instance.\n   * @param {function} callback - Continuation to respond to when complete.\n   * TODO: Refactor me.\n   */\n  query(options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    options = normalizeQuery(options);\n    const file = path.join(this.dirname, this.filename);\n    let buff = '';\n    let results = [];\n    let row = 0;\n\n    const stream = fs.createReadStream(file, {\n      encoding: 'utf8'\n    });\n\n    stream.on('error', err => {\n      if (stream.readable) {\n        stream.destroy();\n      }\n      if (!callback) {\n        return;\n      }\n\n      return err.code !== 'ENOENT' ? callback(err) : callback(null, results);\n    });\n\n    stream.on('data', data => {\n      data = (buff + data).split(/\\n+/);\n      const l = data.length - 1;\n      let i = 0;\n\n      for (; i < l; i++) {\n        if (!options.start || row >= options.start) {\n          add(data[i]);\n        }\n        row++;\n      }\n\n      buff = data[l];\n    });\n\n    stream.on('close', () => {\n      if (buff) {\n        add(buff, true);\n      }\n      if (options.order === 'desc') {\n        results = results.reverse();\n      }\n\n      // eslint-disable-next-line callback-return\n      if (callback) callback(null, results);\n    });\n\n    function add(buff, attempt) {\n      try {\n        const log = JSON.parse(buff);\n        if (check(log)) {\n          push(log);\n        }\n      } catch (e) {\n        if (!attempt) {\n          stream.emit('error', e);\n        }\n      }\n    }\n\n    function push(log) {\n      if (\n        options.rows &&\n        results.length >= options.rows &&\n        options.order !== 'desc'\n      ) {\n        if (stream.readable) {\n          stream.destroy();\n        }\n        return;\n      }\n\n      if (options.fields) {\n        log = options.fields.reduce((obj, key) => {\n          obj[key] = log[key];\n          return obj;\n        }, {});\n      }\n\n      if (options.order === 'desc') {\n        if (results.length >= options.rows) {\n          results.shift();\n        }\n      }\n      results.push(log);\n    }\n\n    function check(log) {\n      if (!log) {\n        return;\n      }\n\n      if (typeof log !== 'object') {\n        return;\n      }\n\n      const time = new Date(log.timestamp);\n      if (\n        (options.from && time < options.from) ||\n        (options.until && time > options.until) ||\n        (options.level && options.level !== log.level)\n      ) {\n        return;\n      }\n\n      return true;\n    }\n\n    function normalizeQuery(options) {\n      options = options || {};\n\n      // limit\n      options.rows = options.rows || options.limit || 10;\n\n      // starting row offset\n      options.start = options.start || 0;\n\n      // now\n      options.until = options.until || new Date();\n      if (typeof options.until !== 'object') {\n        options.until = new Date(options.until);\n      }\n\n      // now - 24\n      options.from = options.from || (options.until - (24 * 60 * 60 * 1000));\n      if (typeof options.from !== 'object') {\n        options.from = new Date(options.from);\n      }\n\n      // 'asc' or 'desc'\n      options.order = options.order || 'desc';\n\n      return options;\n    }\n  }\n\n  /**\n   * Returns a log stream for this transport. Options object is optional.\n   * @param {Object} options - Stream options for this instance.\n   * @returns {Stream} - TODO: add return description.\n   * TODO: Refactor me.\n   */\n  stream(options = {}) {\n    const file = path.join(this.dirname, this.filename);\n    const stream = new Stream();\n    const tail = {\n      file,\n      start: options.start\n    };\n\n    stream.destroy = tailFile(tail, (err, line) => {\n      if (err) {\n        return stream.emit('error', err);\n      }\n\n      try {\n        stream.emit('data', line);\n        line = JSON.parse(line);\n        stream.emit('log', line);\n      } catch (e) {\n        stream.emit('error', e);\n      }\n    });\n\n    return stream;\n  }\n\n  /**\n   * Checks to see the filesize of.\n   * @returns {undefined}\n   */\n  open() {\n    // If we do not have a filename then we were passed a stream and\n    // don't need to keep track of size.\n    if (!this.filename) return;\n    if (this._opening) return;\n\n    this._opening = true;\n\n    // Stat the target file to get the size and create the stream.\n    this.stat((err, size) => {\n      if (err) {\n        return this.emit('error', err);\n      }\n      debug('stat done: %s { size: %s }', this.filename, size);\n      this._size = size;\n      this._dest = this._createStream(this._stream);\n      this._opening = false;\n      this.once('open', () => {\n        if (!this._stream.emit('rotate')) {\n          this._rotate = false;\n        }\n      });\n    });\n  }\n\n  /**\n   * Stat the file and assess information in order to create the proper stream.\n   * @param {function} callback - TODO: add param description.\n   * @returns {undefined}\n   */\n  stat(callback) {\n    const target = this._getFile();\n    const fullpath = path.join(this.dirname, target);\n\n    fs.stat(fullpath, (err, stat) => {\n      if (err && err.code === 'ENOENT') {\n        debug('ENOENT ok', fullpath);\n        // Update internally tracked filename with the new target name.\n        this.filename = target;\n        return callback(null, 0);\n      }\n\n      if (err) {\n        debug(`err ${err.code} ${fullpath}`);\n        return callback(err);\n      }\n\n      if (!stat || this._needsNewFile(stat.size)) {\n        // If `stats.size` is greater than the `maxsize` for this\n        // instance then try again.\n        return this._incFile(() => this.stat(callback));\n      }\n\n      // Once we have figured out what the filename is, set it\n      // and return the size.\n      this.filename = target;\n      callback(null, stat.size);\n    });\n  }\n\n  /**\n   * Closes the stream associated with this instance.\n   * @param {function} cb - TODO: add param description.\n   * @returns {undefined}\n   */\n  close(cb) {\n    if (!this._stream) {\n      return;\n    }\n\n    this._stream.end(() => {\n      if (cb) {\n        cb(); // eslint-disable-line callback-return\n      }\n      this.emit('flush');\n      this.emit('closed');\n    });\n  }\n\n  /**\n   * TODO: add method description.\n   * @param {number} size - TODO: add param description.\n   * @returns {undefined}\n   */\n  _needsNewFile(size) {\n    size = size || this._size;\n    return this.maxsize && size >= this.maxsize;\n  }\n\n  /**\n   * TODO: add method description.\n   * @param {Error} err - TODO: add param description.\n   * @returns {undefined}\n   */\n  _onError(err) {\n    this.emit('error', err);\n  }\n\n  /**\n   * TODO: add method description.\n   * @param {Stream} stream - TODO: add param description.\n   * @returns {mixed} - TODO: add return description.\n   */\n  _setupStream(stream) {\n    stream.on('error', this._onError);\n\n    return stream;\n  }\n\n  /**\n   * TODO: add method description.\n   * @param {Stream} stream - TODO: add param description.\n   * @returns {mixed} - TODO: add return description.\n   */\n  _cleanupStream(stream) {\n    stream.removeListener('error', this._onError);\n    stream.destroy();\n    return stream;\n  }\n\n  /**\n   * TODO: add method description.\n   */\n  _rotateFile() {\n    this._incFile(() => this.open());\n  }\n\n  /**\n   * Unpipe from the stream that has been marked as full and end it so it\n   * flushes to disk.\n   *\n   * @param {function} callback - Callback for when the current file has closed.\n   * @private\n   */\n  _endStream(callback = () => { }) {\n    if (this._dest) {\n      this._stream.unpipe(this._dest);\n      this._dest.end(() => {\n        this._cleanupStream(this._dest);\n        callback();\n      });\n    } else {\n      callback(); // eslint-disable-line callback-return\n    }\n  }\n\n  /**\n   * Returns the WritableStream for the active file on this instance. If we\n   * should gzip the file then a zlib stream is returned.\n   *\n   * @param {ReadableStream} source –PassThrough to pipe to the file when open.\n   * @returns {WritableStream} Stream that writes to disk for the active file.\n   */\n  _createStream(source) {\n    const fullpath = path.join(this.dirname, this.filename);\n\n    debug('create stream start', fullpath, this.options);\n    const dest = fs.createWriteStream(fullpath, this.options)\n      // TODO: What should we do with errors here?\n      .on('error', err => debug(err))\n      .on('close', () => debug('close', dest.path, dest.bytesWritten))\n      .on('open', () => {\n        debug('file open ok', fullpath);\n        this.emit('open', fullpath);\n        source.pipe(dest);\n\n        // If rotation occured during the open operation then we immediately\n        // start writing to a new PassThrough, begin opening the next file\n        // and cleanup the previous source and dest once the source has drained.\n        if (this.rotatedWhileOpening) {\n          this._stream = new PassThrough();\n          this._stream.setMaxListeners(30);\n          this._rotateFile();\n          this.rotatedWhileOpening = false;\n          this._cleanupStream(dest);\n          source.end();\n        }\n      });\n\n    debug('create stream ok', fullpath);\n    return dest;\n  }\n\n  /**\n   * TODO: add method description.\n   * @param {function} callback - TODO: add param description.\n   * @returns {undefined}\n   */\n  _incFile(callback) {\n    debug('_incFile', this.filename);\n    const ext = path.extname(this._basename);\n    const basename = path.basename(this._basename, ext);\n    const tasks = [];\n\n    if (this.zippedArchive) {\n      tasks.push(\n        function (cb) {\n          const num = this._created > 0 && !this.tailable ? this._created : '';\n          this._compressFile(\n            path.join(this.dirname, `${basename}${num}${ext}`),\n            path.join(this.dirname, `${basename}${num}${ext}.gz`),\n            cb\n          );\n        }.bind(this)\n      );\n    }\n\n    tasks.push(\n      function (cb) {\n        if (!this.tailable) {\n          this._created += 1;\n          this._checkMaxFilesIncrementing(ext, basename, cb);\n        } else {\n          this._checkMaxFilesTailable(ext, basename, cb);\n        }\n      }.bind(this)\n    );\n\n    asyncSeries(tasks, callback);\n  }\n\n  /**\n   * Gets the next filename to use for this instance in the case that log\n   * filesizes are being capped.\n   * @returns {string} - TODO: add return description.\n   * @private\n   */\n  _getFile() {\n    const ext = path.extname(this._basename);\n    const basename = path.basename(this._basename, ext);\n    const isRotation = this.rotationFormat\n      ? this.rotationFormat()\n      : this._created;\n\n    // Caveat emptor (indexzero): rotationFormat() was broken by design When\n    // combined with max files because the set of files to unlink is never\n    // stored.\n    return !this.tailable && this._created\n      ? `${basename}${isRotation}${ext}`\n      : `${basename}${ext}`;\n  }\n\n  /**\n   * Increment the number of files created or checked by this instance.\n   * @param {mixed} ext - TODO: add param description.\n   * @param {mixed} basename - TODO: add param description.\n   * @param {mixed} callback - TODO: add param description.\n   * @returns {undefined}\n   * @private\n   */\n  _checkMaxFilesIncrementing(ext, basename, callback) {\n    // Check for maxFiles option and delete file.\n    if (!this.maxFiles || this._created < this.maxFiles) {\n      return setImmediate(callback);\n    }\n\n    const oldest = this._created - this.maxFiles;\n    const isOldest = oldest !== 0 ? oldest : '';\n    const isZipped = this.zippedArchive ? '.gz' : '';\n    const filePath = `${basename}${isOldest}${ext}${isZipped}`;\n    const target = path.join(this.dirname, filePath);\n\n    fs.unlink(target, callback);\n  }\n\n  /**\n   * Roll files forward based on integer, up to maxFiles. e.g. if base if\n   * file.log and it becomes oversized, roll to file1.log, and allow file.log\n   * to be re-used. If file is oversized again, roll file1.log to file2.log,\n   * roll file.log to file1.log, and so on.\n   * @param {mixed} ext - TODO: add param description.\n   * @param {mixed} basename - TODO: add param description.\n   * @param {mixed} callback - TODO: add param description.\n   * @returns {undefined}\n   * @private\n   */\n  _checkMaxFilesTailable(ext, basename, callback) {\n    const tasks = [];\n    if (!this.maxFiles) {\n      return;\n    }\n\n    // const isZipped = this.zippedArchive ? '.gz' : '';\n    const isZipped = this.zippedArchive ? '.gz' : '';\n    for (let x = this.maxFiles - 1; x > 1; x--) {\n      tasks.push(function (i, cb) {\n        let fileName = `${basename}${(i - 1)}${ext}${isZipped}`;\n        const tmppath = path.join(this.dirname, fileName);\n\n        fs.exists(tmppath, exists => {\n          if (!exists) {\n            return cb(null);\n          }\n\n          fileName = `${basename}${i}${ext}${isZipped}`;\n          fs.rename(tmppath, path.join(this.dirname, fileName), cb);\n        });\n      }.bind(this, x));\n    }\n\n    asyncSeries(tasks, () => {\n      fs.rename(\n        path.join(this.dirname, `${basename}${ext}${isZipped}`),\n        path.join(this.dirname, `${basename}1${ext}${isZipped}`),\n        callback\n      );\n    });\n  }\n\n  /**\n   * Compresses src to dest with gzip and unlinks src\n   * @param {string} src - path to source file.\n   * @param {string} dest - path to zipped destination file.\n   * @param {Function} callback - callback called after file has been compressed.\n   * @returns {undefined}\n   * @private\n   */\n  _compressFile(src, dest, callback) {\n    fs.access(src, fs.F_OK, (err) => {\n      if (err) {\n        return callback();\n      }\n      var gzip = zlib.createGzip();\n      var inp = fs.createReadStream(src);\n      var out = fs.createWriteStream(dest);\n      out.on('finish', () => {\n        fs.unlink(src, callback);\n      });\n      inp.pipe(gzip).pipe(out);\n    });\n  }\n\n  _createLogDirIfNotExist(dirPath) {\n    /* eslint-disable no-sync */\n    if (!fs.existsSync(dirPath)) {\n      fs.mkdirSync(dirPath, { recursive: true });\n    }\n    /* eslint-enable no-sync */\n  }\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 886, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/transports/http.js"],"sourcesContent":["/**\n * http.js: Transport for outputting to a json-rpcserver.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst http = require('http');\nconst https = require('https');\nconst { Stream } = require('readable-stream');\nconst TransportStream = require('winston-transport');\nconst { configure } = require('safe-stable-stringify');\n\n/**\n * Transport for outputting to a json-rpc server.\n * @type {Stream}\n * @extends {TransportStream}\n */\nmodule.exports = class Http extends TransportStream {\n  /**\n   * Constructor function for the Http transport object responsible for\n   * persisting log messages and metadata to a terminal or TTY.\n   * @param {!Object} [options={}] - Options for this instance.\n   */\n  // eslint-disable-next-line max-statements\n  constructor(options = {}) {\n    super(options);\n\n    this.options = options;\n    this.name = options.name || 'http';\n    this.ssl = !!options.ssl;\n    this.host = options.host || 'localhost';\n    this.port = options.port;\n    this.auth = options.auth;\n    this.path = options.path || '';\n    this.maximumDepth = options.maximumDepth;\n    this.agent = options.agent;\n    this.headers = options.headers || {};\n    this.headers['content-type'] = 'application/json';\n    this.batch = options.batch || false;\n    this.batchInterval = options.batchInterval || 5000;\n    this.batchCount = options.batchCount || 10;\n    this.batchOptions = [];\n    this.batchTimeoutID = -1;\n    this.batchCallback = {};\n\n    if (!this.port) {\n      this.port = this.ssl ? 443 : 80;\n    }\n  }\n\n  /**\n   * Core logging method exposed to Winston.\n   * @param {Object} info - TODO: add param description.\n   * @param {function} callback - TODO: add param description.\n   * @returns {undefined}\n   */\n  log(info, callback) {\n    this._request(info, null, null, (err, res) => {\n      if (res && res.statusCode !== 200) {\n        err = new Error(`Invalid HTTP Status Code: ${res.statusCode}`);\n      }\n\n      if (err) {\n        this.emit('warn', err);\n      } else {\n        this.emit('logged', info);\n      }\n    });\n\n    // Remark: (jcrugzz) Fire and forget here so requests dont cause buffering\n    // and block more requests from happening?\n    if (callback) {\n      setImmediate(callback);\n    }\n  }\n\n  /**\n   * Query the transport. Options object is optional.\n   * @param {Object} options -  Loggly-like query options for this instance.\n   * @param {function} callback - Continuation to respond to when complete.\n   * @returns {undefined}\n   */\n  query(options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    options = {\n      method: 'query',\n      params: this.normalizeQuery(options)\n    };\n\n    const auth = options.params.auth || null;\n    delete options.params.auth;\n\n    const path = options.params.path || null;\n    delete options.params.path;\n\n    this._request(options, auth, path, (err, res, body) => {\n      if (res && res.statusCode !== 200) {\n        err = new Error(`Invalid HTTP Status Code: ${res.statusCode}`);\n      }\n\n      if (err) {\n        return callback(err);\n      }\n\n      if (typeof body === 'string') {\n        try {\n          body = JSON.parse(body);\n        } catch (e) {\n          return callback(e);\n        }\n      }\n\n      callback(null, body);\n    });\n  }\n\n  /**\n   * Returns a log stream for this transport. Options object is optional.\n   * @param {Object} options - Stream options for this instance.\n   * @returns {Stream} - TODO: add return description\n   */\n  stream(options = {}) {\n    const stream = new Stream();\n    options = {\n      method: 'stream',\n      params: options\n    };\n\n    const path = options.params.path || null;\n    delete options.params.path;\n\n    const auth = options.params.auth || null;\n    delete options.params.auth;\n\n    let buff = '';\n    const req = this._request(options, auth, path);\n\n    stream.destroy = () => req.destroy();\n    req.on('data', data => {\n      data = (buff + data).split(/\\n+/);\n      const l = data.length - 1;\n\n      let i = 0;\n      for (; i < l; i++) {\n        try {\n          stream.emit('log', JSON.parse(data[i]));\n        } catch (e) {\n          stream.emit('error', e);\n        }\n      }\n\n      buff = data[l];\n    });\n    req.on('error', err => stream.emit('error', err));\n\n    return stream;\n  }\n\n  /**\n   * Make a request to a winstond server or any http server which can\n   * handle json-rpc.\n   * @param {function} options - Options to sent the request.\n   * @param {Object?} auth - authentication options\n   * @param {string} path - request path\n   * @param {function} callback - Continuation to respond to when complete.\n   */\n  _request(options, auth, path, callback) {\n    options = options || {};\n\n    auth = auth || this.auth;\n    path = path || this.path || '';\n\n    if (this.batch) {\n      this._doBatch(options, callback, auth, path);\n    } else {\n      this._doRequest(options, callback, auth, path);\n    }\n  }\n\n  /**\n   * Send or memorize the options according to batch configuration\n   * @param {function} options - Options to sent the request.\n   * @param {function} callback - Continuation to respond to when complete.\n   * @param {Object?} auth - authentication options\n   * @param {string} path - request path\n   */\n  _doBatch(options, callback, auth, path) {\n    this.batchOptions.push(options);\n    if (this.batchOptions.length === 1) {\n      // First message stored, it's time to start the timeout!\n      const me = this;\n      this.batchCallback = callback;\n      this.batchTimeoutID = setTimeout(function () {\n        // timeout is reached, send all messages to endpoint\n        me.batchTimeoutID = -1;\n        me._doBatchRequest(me.batchCallback, auth, path);\n      }, this.batchInterval);\n    }\n    if (this.batchOptions.length === this.batchCount) {\n      // max batch count is reached, send all messages to endpoint\n      this._doBatchRequest(this.batchCallback, auth, path);\n    }\n  }\n\n  /**\n   * Initiate a request with the memorized batch options, stop the batch timeout\n   * @param {function} callback - Continuation to respond to when complete.\n   * @param {Object?} auth - authentication options\n   * @param {string} path - request path\n   */\n  _doBatchRequest(callback, auth, path) {\n    if (this.batchTimeoutID > 0) {\n      clearTimeout(this.batchTimeoutID);\n      this.batchTimeoutID = -1;\n    }\n    const batchOptionsCopy = this.batchOptions.slice();\n    this.batchOptions = [];\n    this._doRequest(batchOptionsCopy, callback, auth, path);\n  }\n\n  /**\n   * Make a request to a winstond server or any http server which can\n   * handle json-rpc.\n   * @param {function} options - Options to sent the request.\n   * @param {function} callback - Continuation to respond to when complete.\n   * @param {Object?} auth - authentication options\n   * @param {string} path - request path\n   */\n  _doRequest(options, callback, auth, path) {\n    // Prepare options for outgoing HTTP request\n    const headers = Object.assign({}, this.headers);\n    if (auth && auth.bearer) {\n      headers.Authorization = `Bearer ${auth.bearer}`;\n    }\n    const req = (this.ssl ? https : http).request({\n      ...this.options,\n      method: 'POST',\n      host: this.host,\n      port: this.port,\n      path: `/${path.replace(/^\\//, '')}`,\n      headers: headers,\n      auth: (auth && auth.username && auth.password) ? (`${auth.username}:${auth.password}`) : '',\n      agent: this.agent\n    });\n\n    req.on('error', callback);\n    req.on('response', res => (\n      res.on('end', () => callback(null, res)).resume()\n    ));\n    const jsonStringify = configure({\n      ...(this.maximumDepth && { maximumDepth: this.maximumDepth })\n    });\n    req.end(Buffer.from(jsonStringify(options, this.options.replacer), 'utf8'));\n  }\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1115, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/transports/stream.js"],"sourcesContent":["/**\n * stream.js: Transport for outputting to any arbitrary stream.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst isStream = require('is-stream');\nconst { MESSAGE } = require('triple-beam');\nconst os = require('os');\nconst TransportStream = require('winston-transport');\n\n/**\n * Transport for outputting to any arbitrary stream.\n * @type {Stream}\n * @extends {TransportStream}\n */\nmodule.exports = class Stream extends TransportStream {\n  /**\n   * Constructor function for the Console transport object responsible for\n   * persisting log messages and metadata to a terminal or TTY.\n   * @param {!Object} [options={}] - Options for this instance.\n   */\n  constructor(options = {}) {\n    super(options);\n\n    if (!options.stream || !isStream(options.stream)) {\n      throw new Error('options.stream is required.');\n    }\n\n    // We need to listen for drain events when write() returns false. This can\n    // make node mad at times.\n    this._stream = options.stream;\n    this._stream.setMaxListeners(Infinity);\n    this.isObjectMode = options.stream._writableState.objectMode;\n    this.eol = (typeof options.eol === 'string') ? options.eol : os.EOL;\n  }\n\n  /**\n   * Core logging method exposed to Winston.\n   * @param {Object} info - TODO: add param description.\n   * @param {Function} callback - TODO: add param description.\n   * @returns {undefined}\n   */\n  log(info, callback) {\n    setImmediate(() => this.emit('logged', info));\n    if (this.isObjectMode) {\n      this._stream.write(info);\n      if (callback) {\n        callback(); // eslint-disable-line callback-return\n      }\n      return;\n    }\n\n    this._stream.write(`${info[MESSAGE]}${this.eol}`);\n    if (callback) {\n      callback(); // eslint-disable-line callback-return\n    }\n    return;\n  }\n};\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;AAEA,MAAM;AACN,MAAM,EAAE,OAAO,EAAE;AACjB,MAAM;AACN,MAAM;AAEN;;;;CAIC,GACD,OAAO,OAAO,GAAG,MAAM,eAAe;IACpC;;;;GAIC,GACD,YAAY,UAAU,CAAC,CAAC,CAAE;QACxB,KAAK,CAAC;QAEN,IAAI,CAAC,QAAQ,MAAM,IAAI,CAAC,SAAS,QAAQ,MAAM,GAAG;YAChD,MAAM,IAAI,MAAM;QAClB;QAEA,0EAA0E;QAC1E,0BAA0B;QAC1B,IAAI,CAAC,OAAO,GAAG,QAAQ,MAAM;QAC7B,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,QAAQ,MAAM,CAAC,cAAc,CAAC,UAAU;QAC5D,IAAI,CAAC,GAAG,GAAG,AAAC,OAAO,QAAQ,GAAG,KAAK,WAAY,QAAQ,GAAG,GAAG,GAAG,GAAG;IACrE;IAEA;;;;;GAKC,GACD,IAAI,IAAI,EAAE,QAAQ,EAAE;QAClB,aAAa,IAAM,IAAI,CAAC,IAAI,CAAC,UAAU;QACvC,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YACnB,IAAI,UAAU;gBACZ,YAAY,sCAAsC;YACpD;YACA;QACF;QAEA,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAChD,IAAI,UAAU;YACZ,YAAY,sCAAsC;QACpD;QACA;IACF;AACF"}},
    {"offset": {"line": 1167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1171, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/transports/index.js"],"sourcesContent":["/**\n * transports.js: Set of all transports Winston knows about.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\n/**\n * TODO: add property description.\n * @type {Console}\n */\nObject.defineProperty(exports, 'Console', {\n  configurable: true,\n  enumerable: true,\n  get() {\n    return require('./console');\n  }\n});\n\n/**\n * TODO: add property description.\n * @type {File}\n */\nObject.defineProperty(exports, 'File', {\n  configurable: true,\n  enumerable: true,\n  get() {\n    return require('./file');\n  }\n});\n\n/**\n * TODO: add property description.\n * @type {Http}\n */\nObject.defineProperty(exports, 'Http', {\n  configurable: true,\n  enumerable: true,\n  get() {\n    return require('./http');\n  }\n});\n\n/**\n * TODO: add property description.\n * @type {Stream}\n */\nObject.defineProperty(exports, 'Stream', {\n  configurable: true,\n  enumerable: true,\n  get() {\n    return require('./stream');\n  }\n});\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;AAEA;;;CAGC,GACD,OAAO,cAAc,CAAC,SAAS,WAAW;IACxC,cAAc;IACd,YAAY;IACZ;QACE;IACF;AACF;AAEA;;;CAGC,GACD,OAAO,cAAc,CAAC,SAAS,QAAQ;IACrC,cAAc;IACd,YAAY;IACZ;QACE;IACF;AACF;AAEA;;;CAGC,GACD,OAAO,cAAc,CAAC,SAAS,QAAQ;IACrC,cAAc;IACd,YAAY;IACZ;QACE;IACF;AACF;AAEA;;;CAGC,GACD,OAAO,cAAc,CAAC,SAAS,UAAU;IACvC,cAAc;IACd,YAAY;IACZ;QACE;IACF;AACF"}},
    {"offset": {"line": 1217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1221, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/config/index.js"],"sourcesContent":["/**\n * index.js: Default settings for all levels that winston knows about.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst logform = require('logform');\nconst { configs } = require('triple-beam');\n\n/**\n * Export config set for the CLI.\n * @type {Object}\n */\nexports.cli = logform.levels(configs.cli);\n\n/**\n * Export config set for npm.\n * @type {Object}\n */\nexports.npm = logform.levels(configs.npm);\n\n/**\n * Export config set for the syslog.\n * @type {Object}\n */\nexports.syslog = logform.levels(configs.syslog);\n\n/**\n * Hoist addColors from logform where it was refactored into in winston@3.\n * @type {Object}\n */\nexports.addColors = logform.levels;\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;AAEA,MAAM;AACN,MAAM,EAAE,OAAO,EAAE;AAEjB;;;CAGC,GACD,QAAQ,GAAG,GAAG,QAAQ,MAAM,CAAC,QAAQ,GAAG;AAExC;;;CAGC,GACD,QAAQ,GAAG,GAAG,QAAQ,MAAM,CAAC,QAAQ,GAAG;AAExC;;;CAGC,GACD,QAAQ,MAAM,GAAG,QAAQ,MAAM,CAAC,QAAQ,MAAM;AAE9C;;;CAGC,GACD,QAAQ,SAAS,GAAG,QAAQ,MAAM"}},
    {"offset": {"line": 1245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1249, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/exception-stream.js"],"sourcesContent":["/**\n * exception-stream.js: TODO: add file header handler.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst { Writable } = require('readable-stream');\n\n/**\n * TODO: add class description.\n * @type {ExceptionStream}\n * @extends {Writable}\n */\nmodule.exports = class ExceptionStream extends Writable {\n  /**\n   * Constructor function for the ExceptionStream responsible for wrapping a\n   * TransportStream; only allowing writes of `info` objects with\n   * `info.exception` set to true.\n   * @param {!TransportStream} transport - Stream to filter to exceptions\n   */\n  constructor(transport) {\n    super({ objectMode: true });\n\n    if (!transport) {\n      throw new Error('ExceptionStream requires a TransportStream instance.');\n    }\n\n    // Remark (indexzero): we set `handleExceptions` here because it's the\n    // predicate checked in ExceptionHandler.prototype.__getExceptionHandlers\n    this.handleExceptions = true;\n    this.transport = transport;\n  }\n\n  /**\n   * Writes the info object to our transport instance if (and only if) the\n   * `exception` property is set on the info.\n   * @param {mixed} info - TODO: add param description.\n   * @param {mixed} enc - TODO: add param description.\n   * @param {mixed} callback - TODO: add param description.\n   * @returns {mixed} - TODO: add return description.\n   * @private\n   */\n  _write(info, enc, callback) {\n    if (info.exception) {\n      return this.transport.log(info, callback);\n    }\n\n    callback();\n    return true;\n  }\n};\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;AAEA,MAAM,EAAE,QAAQ,EAAE;AAElB;;;;CAIC,GACD,OAAO,OAAO,GAAG,MAAM,wBAAwB;IAC7C;;;;;GAKC,GACD,YAAY,SAAS,CAAE;QACrB,KAAK,CAAC;YAAE,YAAY;QAAK;QAEzB,IAAI,CAAC,WAAW;YACd,MAAM,IAAI,MAAM;QAClB;QAEA,sEAAsE;QACtE,yEAAyE;QACzE,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,SAAS,GAAG;IACnB;IAEA;;;;;;;;GAQC,GACD,OAAO,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE;QAC1B,IAAI,KAAK,SAAS,EAAE;YAClB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM;QAClC;QAEA;QACA,OAAO;IACT;AACF"}},
    {"offset": {"line": 1294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1298, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/exception-handler.js"],"sourcesContent":["/**\n * exception-handler.js: Object for handling uncaughtException events.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst os = require('os');\nconst asyncForEach = require('async/forEach');\nconst debug = require('@dabh/diagnostics')('winston:exception');\nconst once = require('one-time');\nconst stackTrace = require('stack-trace');\nconst ExceptionStream = require('./exception-stream');\n\n/**\n * Object for handling uncaughtException events.\n * @type {ExceptionHandler}\n */\nmodule.exports = class ExceptionHandler {\n  /**\n   * TODO: add contructor description\n   * @param {!Logger} logger - TODO: add param description\n   */\n  constructor(logger) {\n    if (!logger) {\n      throw new Error('Logger is required to handle exceptions');\n    }\n\n    this.logger = logger;\n    this.handlers = new Map();\n  }\n\n  /**\n   * Handles `uncaughtException` events for the current process by adding any\n   * handlers passed in.\n   * @returns {undefined}\n   */\n  handle(...args) {\n    args.forEach(arg => {\n      if (Array.isArray(arg)) {\n        return arg.forEach(handler => this._addHandler(handler));\n      }\n\n      this._addHandler(arg);\n    });\n\n    if (!this.catcher) {\n      this.catcher = this._uncaughtException.bind(this);\n      process.on('uncaughtException', this.catcher);\n    }\n  }\n\n  /**\n   * Removes any handlers to `uncaughtException` events for the current\n   * process. This does not modify the state of the `this.handlers` set.\n   * @returns {undefined}\n   */\n  unhandle() {\n    if (this.catcher) {\n      process.removeListener('uncaughtException', this.catcher);\n      this.catcher = false;\n\n      Array.from(this.handlers.values())\n        .forEach(wrapper => this.logger.unpipe(wrapper));\n    }\n  }\n\n  /**\n   * TODO: add method description\n   * @param {Error} err - Error to get information about.\n   * @returns {mixed} - TODO: add return description.\n   */\n  getAllInfo(err) {\n    let message = null;\n    if (err) {\n      message = typeof err === 'string' ? err : err.message;\n    }\n\n    return {\n      error: err,\n      // TODO (indexzero): how do we configure this?\n      level: 'error',\n      message: [\n        `uncaughtException: ${(message || '(no error message)')}`,\n        err && err.stack || '  No stack trace'\n      ].join('\\n'),\n      stack: err && err.stack,\n      exception: true,\n      date: new Date().toString(),\n      process: this.getProcessInfo(),\n      os: this.getOsInfo(),\n      trace: this.getTrace(err)\n    };\n  }\n\n  /**\n   * Gets all relevant process information for the currently running process.\n   * @returns {mixed} - TODO: add return description.\n   */\n  getProcessInfo() {\n    return {\n      pid: process.pid,\n      uid: process.getuid ? process.getuid() : null,\n      gid: process.getgid ? process.getgid() : null,\n      cwd: process.cwd(),\n      execPath: process.execPath,\n      version: process.version,\n      argv: process.argv,\n      memoryUsage: process.memoryUsage()\n    };\n  }\n\n  /**\n   * Gets all relevant OS information for the currently running process.\n   * @returns {mixed} - TODO: add return description.\n   */\n  getOsInfo() {\n    return {\n      loadavg: os.loadavg(),\n      uptime: os.uptime()\n    };\n  }\n\n  /**\n   * Gets a stack trace for the specified error.\n   * @param {mixed} err - TODO: add param description.\n   * @returns {mixed} - TODO: add return description.\n   */\n  getTrace(err) {\n    const trace = err ? stackTrace.parse(err) : stackTrace.get();\n    return trace.map(site => {\n      return {\n        column: site.getColumnNumber(),\n        file: site.getFileName(),\n        function: site.getFunctionName(),\n        line: site.getLineNumber(),\n        method: site.getMethodName(),\n        native: site.isNative()\n      };\n    });\n  }\n\n  /**\n   * Helper method to add a transport as an exception handler.\n   * @param {Transport} handler - The transport to add as an exception handler.\n   * @returns {void}\n   */\n  _addHandler(handler) {\n    if (!this.handlers.has(handler)) {\n      handler.handleExceptions = true;\n      const wrapper = new ExceptionStream(handler);\n      this.handlers.set(handler, wrapper);\n      this.logger.pipe(wrapper);\n    }\n  }\n\n  /**\n   * Logs all relevant information around the `err` and exits the current\n   * process.\n   * @param {Error} err - Error to handle\n   * @returns {mixed} - TODO: add return description.\n   * @private\n   */\n  _uncaughtException(err) {\n    const info = this.getAllInfo(err);\n    const handlers = this._getExceptionHandlers();\n    // Calculate if we should exit on this error\n    let doExit = typeof this.logger.exitOnError === 'function'\n      ? this.logger.exitOnError(err)\n      : this.logger.exitOnError;\n    let timeout;\n\n    if (!handlers.length && doExit) {\n      // eslint-disable-next-line no-console\n      console.warn('winston: exitOnError cannot be true with no exception handlers.');\n      // eslint-disable-next-line no-console\n      console.warn('winston: not exiting process.');\n      doExit = false;\n    }\n\n    function gracefulExit() {\n      debug('doExit', doExit);\n      debug('process._exiting', process._exiting);\n\n      if (doExit && !process._exiting) {\n        // Remark: Currently ignoring any exceptions from transports when\n        // catching uncaught exceptions.\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n        // eslint-disable-next-line no-process-exit\n        process.exit(1);\n      }\n    }\n\n    if (!handlers || handlers.length === 0) {\n      return process.nextTick(gracefulExit);\n    }\n\n    // Log to all transports attempting to listen for when they are completed.\n    asyncForEach(handlers, (handler, next) => {\n      const done = once(next);\n      const transport = handler.transport || handler;\n\n      // Debug wrapping so that we can inspect what's going on under the covers.\n      function onDone(event) {\n        return () => {\n          debug(event);\n          done();\n        };\n      }\n\n      transport._ending = true;\n      transport.once('finish', onDone('finished'));\n      transport.once('error', onDone('error'));\n    }, () => doExit && gracefulExit());\n\n    this.logger.log(info);\n\n    // If exitOnError is true, then only allow the logging of exceptions to\n    // take up to `3000ms`.\n    if (doExit) {\n      timeout = setTimeout(gracefulExit, 3000);\n    }\n  }\n\n  /**\n   * Returns the list of transports and exceptionHandlers for this instance.\n   * @returns {Array} - List of transports and exceptionHandlers for this\n   * instance.\n   * @private\n   */\n  _getExceptionHandlers() {\n    // Remark (indexzero): since `logger.transports` returns all of the pipes\n    // from the _readableState of the stream we actually get the join of the\n    // explicit handlers and the implicit transports with\n    // `handleExceptions: true`\n    return this.logger.transports.filter(wrap => {\n      const transport = wrap.transport || wrap;\n      return transport.handleExceptions;\n    });\n  }\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1502, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1506, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/rejection-stream.js"],"sourcesContent":["/**\n * rejection-stream.js: TODO: add file header handler.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst { Writable } = require('readable-stream');\n\n/**\n * TODO: add class description.\n * @type {RejectionStream}\n * @extends {Writable}\n */\nmodule.exports = class RejectionStream extends Writable {\n  /**\n   * Constructor function for the RejectionStream responsible for wrapping a\n   * TransportStream; only allowing writes of `info` objects with\n   * `info.rejection` set to true.\n   * @param {!TransportStream} transport - Stream to filter to rejections\n   */\n  constructor(transport) {\n    super({ objectMode: true });\n\n    if (!transport) {\n      throw new Error('RejectionStream requires a TransportStream instance.');\n    }\n\n    this.handleRejections = true;\n    this.transport = transport;\n  }\n\n  /**\n   * Writes the info object to our transport instance if (and only if) the\n   * `rejection` property is set on the info.\n   * @param {mixed} info - TODO: add param description.\n   * @param {mixed} enc - TODO: add param description.\n   * @param {mixed} callback - TODO: add param description.\n   * @returns {mixed} - TODO: add return description.\n   * @private\n   */\n  _write(info, enc, callback) {\n    if (info.rejection) {\n      return this.transport.log(info, callback);\n    }\n\n    callback();\n    return true;\n  }\n};\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;AAEA,MAAM,EAAE,QAAQ,EAAE;AAElB;;;;CAIC,GACD,OAAO,OAAO,GAAG,MAAM,wBAAwB;IAC7C;;;;;GAKC,GACD,YAAY,SAAS,CAAE;QACrB,KAAK,CAAC;YAAE,YAAY;QAAK;QAEzB,IAAI,CAAC,WAAW;YACd,MAAM,IAAI,MAAM;QAClB;QAEA,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,SAAS,GAAG;IACnB;IAEA;;;;;;;;GAQC,GACD,OAAO,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE;QAC1B,IAAI,KAAK,SAAS,EAAE;YAClB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM;QAClC;QAEA;QACA,OAAO;IACT;AACF"}},
    {"offset": {"line": 1549, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1553, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/rejection-handler.js"],"sourcesContent":["/**\n * exception-handler.js: Object for handling uncaughtException events.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst os = require('os');\nconst asyncForEach = require('async/forEach');\nconst debug = require('@dabh/diagnostics')('winston:rejection');\nconst once = require('one-time');\nconst stackTrace = require('stack-trace');\nconst RejectionStream = require('./rejection-stream');\n\n/**\n * Object for handling unhandledRejection events.\n * @type {RejectionHandler}\n */\nmodule.exports = class RejectionHandler {\n  /**\n   * TODO: add contructor description\n   * @param {!Logger} logger - TODO: add param description\n   */\n  constructor(logger) {\n    if (!logger) {\n      throw new Error('Logger is required to handle rejections');\n    }\n\n    this.logger = logger;\n    this.handlers = new Map();\n  }\n\n  /**\n   * Handles `unhandledRejection` events for the current process by adding any\n   * handlers passed in.\n   * @returns {undefined}\n   */\n  handle(...args) {\n    args.forEach(arg => {\n      if (Array.isArray(arg)) {\n        return arg.forEach(handler => this._addHandler(handler));\n      }\n\n      this._addHandler(arg);\n    });\n\n    if (!this.catcher) {\n      this.catcher = this._unhandledRejection.bind(this);\n      process.on('unhandledRejection', this.catcher);\n    }\n  }\n\n  /**\n   * Removes any handlers to `unhandledRejection` events for the current\n   * process. This does not modify the state of the `this.handlers` set.\n   * @returns {undefined}\n   */\n  unhandle() {\n    if (this.catcher) {\n      process.removeListener('unhandledRejection', this.catcher);\n      this.catcher = false;\n\n      Array.from(this.handlers.values()).forEach(wrapper =>\n        this.logger.unpipe(wrapper)\n      );\n    }\n  }\n\n  /**\n   * TODO: add method description\n   * @param {Error} err - Error to get information about.\n   * @returns {mixed} - TODO: add return description.\n   */\n  getAllInfo(err) {\n    let message = null;\n    if (err) {\n      message = typeof err === 'string' ? err : err.message;\n    }\n\n    return {\n      error: err,\n      // TODO (indexzero): how do we configure this?\n      level: 'error',\n      message: [\n        `unhandledRejection: ${message || '(no error message)'}`,\n        err && err.stack || '  No stack trace'\n      ].join('\\n'),\n      stack: err && err.stack,\n      rejection: true,\n      date: new Date().toString(),\n      process: this.getProcessInfo(),\n      os: this.getOsInfo(),\n      trace: this.getTrace(err)\n    };\n  }\n\n  /**\n   * Gets all relevant process information for the currently running process.\n   * @returns {mixed} - TODO: add return description.\n   */\n  getProcessInfo() {\n    return {\n      pid: process.pid,\n      uid: process.getuid ? process.getuid() : null,\n      gid: process.getgid ? process.getgid() : null,\n      cwd: process.cwd(),\n      execPath: process.execPath,\n      version: process.version,\n      argv: process.argv,\n      memoryUsage: process.memoryUsage()\n    };\n  }\n\n  /**\n   * Gets all relevant OS information for the currently running process.\n   * @returns {mixed} - TODO: add return description.\n   */\n  getOsInfo() {\n    return {\n      loadavg: os.loadavg(),\n      uptime: os.uptime()\n    };\n  }\n\n  /**\n   * Gets a stack trace for the specified error.\n   * @param {mixed} err - TODO: add param description.\n   * @returns {mixed} - TODO: add return description.\n   */\n  getTrace(err) {\n    const trace = err ? stackTrace.parse(err) : stackTrace.get();\n    return trace.map(site => {\n      return {\n        column: site.getColumnNumber(),\n        file: site.getFileName(),\n        function: site.getFunctionName(),\n        line: site.getLineNumber(),\n        method: site.getMethodName(),\n        native: site.isNative()\n      };\n    });\n  }\n\n  /**\n   * Helper method to add a transport as an exception handler.\n   * @param {Transport} handler - The transport to add as an exception handler.\n   * @returns {void}\n   */\n  _addHandler(handler) {\n    if (!this.handlers.has(handler)) {\n      handler.handleRejections = true;\n      const wrapper = new RejectionStream(handler);\n      this.handlers.set(handler, wrapper);\n      this.logger.pipe(wrapper);\n    }\n  }\n\n  /**\n   * Logs all relevant information around the `err` and exits the current\n   * process.\n   * @param {Error} err - Error to handle\n   * @returns {mixed} - TODO: add return description.\n   * @private\n   */\n  _unhandledRejection(err) {\n    const info = this.getAllInfo(err);\n    const handlers = this._getRejectionHandlers();\n    // Calculate if we should exit on this error\n    let doExit =\n      typeof this.logger.exitOnError === 'function'\n        ? this.logger.exitOnError(err)\n        : this.logger.exitOnError;\n    let timeout;\n\n    if (!handlers.length && doExit) {\n      // eslint-disable-next-line no-console\n      console.warn('winston: exitOnError cannot be true with no rejection handlers.');\n      // eslint-disable-next-line no-console\n      console.warn('winston: not exiting process.');\n      doExit = false;\n    }\n\n    function gracefulExit() {\n      debug('doExit', doExit);\n      debug('process._exiting', process._exiting);\n\n      if (doExit && !process._exiting) {\n        // Remark: Currently ignoring any rejections from transports when\n        // catching unhandled rejections.\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n        // eslint-disable-next-line no-process-exit\n        process.exit(1);\n      }\n    }\n\n    if (!handlers || handlers.length === 0) {\n      return process.nextTick(gracefulExit);\n    }\n\n    // Log to all transports attempting to listen for when they are completed.\n    asyncForEach(\n      handlers,\n      (handler, next) => {\n        const done = once(next);\n        const transport = handler.transport || handler;\n\n        // Debug wrapping so that we can inspect what's going on under the covers.\n        function onDone(event) {\n          return () => {\n            debug(event);\n            done();\n          };\n        }\n\n        transport._ending = true;\n        transport.once('finish', onDone('finished'));\n        transport.once('error', onDone('error'));\n      },\n      () => doExit && gracefulExit()\n    );\n\n    this.logger.log(info);\n\n    // If exitOnError is true, then only allow the logging of exceptions to\n    // take up to `3000ms`.\n    if (doExit) {\n      timeout = setTimeout(gracefulExit, 3000);\n    }\n  }\n\n  /**\n   * Returns the list of transports and exceptionHandlers for this instance.\n   * @returns {Array} - List of transports and exceptionHandlers for this\n   * instance.\n   * @private\n   */\n  _getRejectionHandlers() {\n    // Remark (indexzero): since `logger.transports` returns all of the pipes\n    // from the _readableState of the stream we actually get the join of the\n    // explicit handlers and the implicit transports with\n    // `handleRejections: true`\n    return this.logger.transports.filter(wrap => {\n      const transport = wrap.transport || wrap;\n      return transport.handleRejections;\n    });\n  }\n};\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;AAEA,MAAM;AACN,MAAM;AACN,MAAM,QAAQ,yGAA6B;AAC3C,MAAM;AACN,MAAM;AACN,MAAM;AAEN;;;CAGC,GACD,OAAO,OAAO,GAAG,MAAM;IACrB;;;GAGC,GACD,YAAY,MAAM,CAAE;QAClB,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM;QAClB;QAEA,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,QAAQ,GAAG,IAAI;IACtB;IAEA;;;;GAIC,GACD,OAAO,GAAG,IAAI,EAAE;QACd,KAAK,OAAO,CAAC,CAAA;YACX,IAAI,MAAM,OAAO,CAAC,MAAM;gBACtB,OAAO,IAAI,OAAO,CAAC,CAAA,UAAW,IAAI,CAAC,WAAW,CAAC;YACjD;YAEA,IAAI,CAAC,WAAW,CAAC;QACnB;QAEA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI;YACjD,QAAQ,EAAE,CAAC,sBAAsB,IAAI,CAAC,OAAO;QAC/C;IACF;IAEA;;;;GAIC,GACD,WAAW;QACT,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,QAAQ,cAAc,CAAC,sBAAsB,IAAI,CAAC,OAAO;YACzD,IAAI,CAAC,OAAO,GAAG;YAEf,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,OAAO,CAAC,CAAA,UACzC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAEvB;IACF;IAEA;;;;GAIC,GACD,WAAW,GAAG,EAAE;QACd,IAAI,UAAU;QACd,IAAI,KAAK;YACP,UAAU,OAAO,QAAQ,WAAW,MAAM,IAAI,OAAO;QACvD;QAEA,OAAO;YACL,OAAO;YACP,8CAA8C;YAC9C,OAAO;YACP,SAAS;gBACP,CAAC,oBAAoB,EAAE,WAAW,qBAAqB,CAAC;gBACxD,OAAO,IAAI,KAAK,IAAI;aACrB,CAAC,IAAI,CAAC;YACP,OAAO,OAAO,IAAI,KAAK;YACvB,WAAW;YACX,MAAM,IAAI,OAAO,QAAQ;YACzB,SAAS,IAAI,CAAC,cAAc;YAC5B,IAAI,IAAI,CAAC,SAAS;YAClB,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB;IACF;IAEA;;;GAGC,GACD,iBAAiB;QACf,OAAO;YACL,KAAK,QAAQ,GAAG;YAChB,KAAK,QAAQ,MAAM,GAAG,QAAQ,MAAM,KAAK;YACzC,KAAK,QAAQ,MAAM,GAAG,QAAQ,MAAM,KAAK;YACzC,KAAK,QAAQ,GAAG;YAChB,UAAU,QAAQ,QAAQ;YAC1B,SAAS,QAAQ,OAAO;YACxB,MAAM,QAAQ,IAAI;YAClB,aAAa,QAAQ,WAAW;QAClC;IACF;IAEA;;;GAGC,GACD,YAAY;QACV,OAAO;YACL,SAAS,GAAG,OAAO;YACnB,QAAQ,GAAG,MAAM;QACnB;IACF;IAEA;;;;GAIC,GACD,SAAS,GAAG,EAAE;QACZ,MAAM,QAAQ,MAAM,WAAW,KAAK,CAAC,OAAO,WAAW,GAAG;QAC1D,OAAO,MAAM,GAAG,CAAC,CAAA;YACf,OAAO;gBACL,QAAQ,KAAK,eAAe;gBAC5B,MAAM,KAAK,WAAW;gBACtB,UAAU,KAAK,eAAe;gBAC9B,MAAM,KAAK,aAAa;gBACxB,QAAQ,KAAK,aAAa;gBAC1B,QAAQ,KAAK,QAAQ;YACvB;QACF;IACF;IAEA;;;;GAIC,GACD,YAAY,OAAO,EAAE;QACnB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU;YAC/B,QAAQ,gBAAgB,GAAG;YAC3B,MAAM,UAAU,IAAI,gBAAgB;YACpC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS;YAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QACnB;IACF;IAEA;;;;;;GAMC,GACD,oBAAoB,GAAG,EAAE;QACvB,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC;QAC7B,MAAM,WAAW,IAAI,CAAC,qBAAqB;QAC3C,4CAA4C;QAC5C,IAAI,SACF,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,aAC/B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OACxB,IAAI,CAAC,MAAM,CAAC,WAAW;QAC7B,IAAI;QAEJ,IAAI,CAAC,SAAS,MAAM,IAAI,QAAQ;YAC9B,sCAAsC;YACtC,QAAQ,IAAI,CAAC;YACb,sCAAsC;YACtC,QAAQ,IAAI,CAAC;YACb,SAAS;QACX;QAEA,SAAS;YACP,MAAM,UAAU;YAChB,MAAM,oBAAoB,QAAQ,QAAQ;YAE1C,IAAI,UAAU,CAAC,QAAQ,QAAQ,EAAE;gBAC/B,iEAAiE;gBACjE,iCAAiC;gBACjC,IAAI,SAAS;oBACX,aAAa;gBACf;gBACA,2CAA2C;gBAC3C,QAAQ,IAAI,CAAC;YACf;QACF;QAEA,IAAI,CAAC,YAAY,SAAS,MAAM,KAAK,GAAG;YACtC,OAAO,QAAQ,QAAQ,CAAC;QAC1B;QAEA,0EAA0E;QAC1E,aACE,UACA,CAAC,SAAS;YACR,MAAM,OAAO,KAAK;YAClB,MAAM,YAAY,QAAQ,SAAS,IAAI;YAEvC,0EAA0E;YAC1E,SAAS,OAAO,KAAK;gBACnB,OAAO;oBACL,MAAM;oBACN;gBACF;YACF;YAEA,UAAU,OAAO,GAAG;YACpB,UAAU,IAAI,CAAC,UAAU,OAAO;YAChC,UAAU,IAAI,CAAC,SAAS,OAAO;QACjC,GACA,IAAM,UAAU;QAGlB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QAEhB,uEAAuE;QACvE,uBAAuB;QACvB,IAAI,QAAQ;YACV,UAAU,WAAW,cAAc;QACrC;IACF;IAEA;;;;;GAKC,GACD,wBAAwB;QACtB,yEAAyE;QACzE,wEAAwE;QACxE,qDAAqD;QACrD,2BAA2B;QAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;YACnC,MAAM,YAAY,KAAK,SAAS,IAAI;YACpC,OAAO,UAAU,gBAAgB;QACnC;IACF;AACF"}},
    {"offset": {"line": 1757, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1761, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/profiler.js"],"sourcesContent":["/**\n * profiler.js: TODO: add file header description.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n/**\n * TODO: add class description.\n * @type {Profiler}\n * @private\n */\nclass Profiler {\n  /**\n   * Constructor function for the Profiler instance used by\n   * `Logger.prototype.startTimer`. When done is called the timer will finish\n   * and log the duration.\n   * @param {!Logger} logger - TODO: add param description.\n   * @private\n   */\n  constructor(logger) {\n    const Logger = require('./logger');\n    if (typeof logger !== 'object' || Array.isArray(logger) || !(logger instanceof Logger)) {\n      throw new Error('Logger is required for profiling');\n    } else {\n      this.logger = logger;\n      this.start = Date.now();\n    }\n  }\n\n  /**\n   * Ends the current timer (i.e. Profiler) instance and logs the `msg` along\n   * with the duration since creation.\n   * @returns {mixed} - TODO: add return description.\n   * @private\n   */\n  done(...args) {\n    if (typeof args[args.length - 1] === 'function') {\n      // eslint-disable-next-line no-console\n      console.warn('Callback function no longer supported as of winston@3.0.0');\n      args.pop();\n    }\n\n    const info = typeof args[args.length - 1] === 'object' ? args.pop() : {};\n    info.level = info.level || 'info';\n    info.durationMs = (Date.now()) - this.start;\n\n    return this.logger.write(info);\n  }\n};\n\nmodule.exports = Profiler;\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;AACA;;;;CAIC,GACD,MAAM;IACJ;;;;;;GAMC,GACD,YAAY,MAAM,CAAE;QAClB,MAAM;QACN,IAAI,OAAO,WAAW,YAAY,MAAM,OAAO,CAAC,WAAW,CAAC,CAAC,kBAAkB,MAAM,GAAG;YACtF,MAAM,IAAI,MAAM;QAClB,OAAO;YACL,IAAI,CAAC,MAAM,GAAG;YACd,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG;QACvB;IACF;IAEA;;;;;GAKC,GACD,KAAK,GAAG,IAAI,EAAE;QACZ,IAAI,OAAO,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE,KAAK,YAAY;YAC/C,sCAAsC;YACtC,QAAQ,IAAI,CAAC;YACb,KAAK,GAAG;QACV;QAEA,MAAM,OAAO,OAAO,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE,KAAK,WAAW,KAAK,GAAG,KAAK,CAAC;QACvE,KAAK,KAAK,GAAG,KAAK,KAAK,IAAI;QAC3B,KAAK,UAAU,GAAG,AAAC,KAAK,GAAG,KAAM,IAAI,CAAC,KAAK;QAE3C,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IAC3B;AACF;;AAEA,OAAO,OAAO,GAAG"}},
    {"offset": {"line": 1806, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1810, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/logger.js"],"sourcesContent":["/**\n * logger.js: TODO: add file header description.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst { Stream, Transform } = require('readable-stream');\nconst asyncForEach = require('async/forEach');\nconst { LEVEL, SPLAT } = require('triple-beam');\nconst isStream = require('is-stream');\nconst ExceptionHandler = require('./exception-handler');\nconst RejectionHandler = require('./rejection-handler');\nconst LegacyTransportStream = require('winston-transport/legacy');\nconst Profiler = require('./profiler');\nconst { warn } = require('./common');\nconst config = require('./config');\n\n/**\n * Captures the number of format (i.e. %s strings) in a given string.\n * Based on `util.format`, see Node.js source:\n * https://github.com/nodejs/node/blob/b1c8f15c5f169e021f7c46eb7b219de95fe97603/lib/util.js#L201-L230\n * @type {RegExp}\n */\nconst formatRegExp = /%[scdjifoO%]/g;\n\n/**\n * TODO: add class description.\n * @type {Logger}\n * @extends {Transform}\n */\nclass Logger extends Transform {\n  /**\n   * Constructor function for the Logger object responsible for persisting log\n   * messages and metadata to one or more transports.\n   * @param {!Object} options - foo\n   */\n  constructor(options) {\n    super({ objectMode: true });\n    this.configure(options);\n  }\n\n  child(defaultRequestMetadata) {\n    const logger = this;\n    return Object.create(logger, {\n      write: {\n        value: function (info) {\n          const infoClone = Object.assign(\n            {},\n            defaultRequestMetadata,\n            info\n          );\n\n          // Object.assign doesn't copy inherited Error\n          // properties so we have to do that explicitly\n          //\n          // Remark (indexzero): we should remove this\n          // since the errors format will handle this case.\n          //\n          if (info instanceof Error) {\n            infoClone.stack = info.stack;\n            infoClone.message = info.message;\n          }\n\n          logger.write(infoClone);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will wholesale reconfigure this instance by:\n   * 1. Resetting all transports. Older transports will be removed implicitly.\n   * 2. Set all other options including levels, colors, rewriters, filters,\n   *    exceptionHandlers, etc.\n   * @param {!Object} options - TODO: add param description.\n   * @returns {undefined}\n   */\n  configure({\n    silent,\n    format,\n    defaultMeta,\n    levels,\n    level = 'info',\n    exitOnError = true,\n    transports,\n    colors,\n    emitErrs,\n    formatters,\n    padLevels,\n    rewriters,\n    stripColors,\n    exceptionHandlers,\n    rejectionHandlers\n  } = {}) {\n    // Reset transports if we already have them\n    if (this.transports.length) {\n      this.clear();\n    }\n\n    this.silent = silent;\n    this.format = format || this.format || require('logform/json')();\n\n    this.defaultMeta = defaultMeta || null;\n    // Hoist other options onto this instance.\n    this.levels = levels || this.levels || config.npm.levels;\n    this.level = level;\n    if (this.exceptions) {\n      this.exceptions.unhandle();\n    }\n    if (this.rejections) {\n      this.rejections.unhandle();\n    }\n    this.exceptions = new ExceptionHandler(this);\n    this.rejections = new RejectionHandler(this);\n    this.profilers = {};\n    this.exitOnError = exitOnError;\n\n    // Add all transports we have been provided.\n    if (transports) {\n      transports = Array.isArray(transports) ? transports : [transports];\n      transports.forEach(transport => this.add(transport));\n    }\n\n    if (\n      colors ||\n      emitErrs ||\n      formatters ||\n      padLevels ||\n      rewriters ||\n      stripColors\n    ) {\n      throw new Error(\n        [\n          '{ colors, emitErrs, formatters, padLevels, rewriters, stripColors } were removed in winston@3.0.0.',\n          'Use a custom winston.format(function) instead.',\n          'See: https://github.com/winstonjs/winston/tree/master/UPGRADE-3.0.md'\n        ].join('\\n')\n      );\n    }\n\n    if (exceptionHandlers) {\n      this.exceptions.handle(exceptionHandlers);\n    }\n    if (rejectionHandlers) {\n      this.rejections.handle(rejectionHandlers);\n    }\n  }\n\n  isLevelEnabled(level) {\n    const givenLevelValue = getLevelValue(this.levels, level);\n    if (givenLevelValue === null) {\n      return false;\n    }\n\n    const configuredLevelValue = getLevelValue(this.levels, this.level);\n    if (configuredLevelValue === null) {\n      return false;\n    }\n\n    if (!this.transports || this.transports.length === 0) {\n      return configuredLevelValue >= givenLevelValue;\n    }\n\n    const index = this.transports.findIndex(transport => {\n      let transportLevelValue = getLevelValue(this.levels, transport.level);\n      if (transportLevelValue === null) {\n        transportLevelValue = configuredLevelValue;\n      }\n      return transportLevelValue >= givenLevelValue;\n    });\n    return index !== -1;\n  }\n\n  /* eslint-disable valid-jsdoc */\n  /**\n   * Ensure backwards compatibility with a `log` method\n   * @param {mixed} level - Level the log message is written at.\n   * @param {mixed} msg - TODO: add param description.\n   * @param {mixed} meta - TODO: add param description.\n   * @returns {Logger} - TODO: add return description.\n   *\n   * @example\n   *    // Supports the existing API:\n   *    logger.log('info', 'Hello world', { custom: true });\n   *    logger.log('info', new Error('Yo, it\\'s on fire'));\n   *\n   *    // Requires winston.format.splat()\n   *    logger.log('info', '%s %d%%', 'A string', 50, { thisIsMeta: true });\n   *\n   *    // And the new API with a single JSON literal:\n   *    logger.log({ level: 'info', message: 'Hello world', custom: true });\n   *    logger.log({ level: 'info', message: new Error('Yo, it\\'s on fire') });\n   *\n   *    // Also requires winston.format.splat()\n   *    logger.log({\n   *      level: 'info',\n   *      message: '%s %d%%',\n   *      [SPLAT]: ['A string', 50],\n   *      meta: { thisIsMeta: true }\n   *    });\n   *\n   */\n  /* eslint-enable valid-jsdoc */\n  log(level, msg, ...splat) {\n    // eslint-disable-line max-params\n    // Optimize for the hotpath of logging JSON literals\n    if (arguments.length === 1) {\n      // Yo dawg, I heard you like levels ... seriously ...\n      // In this context the LHS `level` here is actually the `info` so read\n      // this as: info[LEVEL] = info.level;\n      level[LEVEL] = level.level;\n      this._addDefaultMeta(level);\n      this.write(level);\n      return this;\n    }\n\n    // Slightly less hotpath, but worth optimizing for.\n    if (arguments.length === 2) {\n      if (msg && typeof msg === 'object') {\n        msg[LEVEL] = msg.level = level;\n        this._addDefaultMeta(msg);\n        this.write(msg);\n        return this;\n      }\n\n      msg = { [LEVEL]: level, level, message: msg };\n      this._addDefaultMeta(msg);\n      this.write(msg);\n      return this;\n    }\n\n    const [meta] = splat;\n    if (typeof meta === 'object' && meta !== null) {\n      // Extract tokens, if none available default to empty array to\n      // ensure consistancy in expected results\n      const tokens = msg && msg.match && msg.match(formatRegExp);\n\n      if (!tokens) {\n        const info = Object.assign({}, this.defaultMeta, meta, {\n          [LEVEL]: level,\n          [SPLAT]: splat,\n          level,\n          message: msg\n        });\n\n        if (meta.message) info.message = `${info.message} ${meta.message}`;\n        if (meta.stack) info.stack = meta.stack;\n        if (meta.cause) info.cause = meta.cause;\n\n        this.write(info);\n        return this;\n      }\n    }\n\n    this.write(Object.assign({}, this.defaultMeta, {\n      [LEVEL]: level,\n      [SPLAT]: splat,\n      level,\n      message: msg\n    }));\n\n    return this;\n  }\n\n  /**\n   * Pushes data so that it can be picked up by all of our pipe targets.\n   * @param {mixed} info - TODO: add param description.\n   * @param {mixed} enc - TODO: add param description.\n   * @param {mixed} callback - Continues stream processing.\n   * @returns {undefined}\n   * @private\n   */\n  _transform(info, enc, callback) {\n    if (this.silent) {\n      return callback();\n    }\n\n    // [LEVEL] is only soft guaranteed to be set here since we are a proper\n    // stream. It is likely that `info` came in through `.log(info)` or\n    // `.info(info)`. If it is not defined, however, define it.\n    // This LEVEL symbol is provided by `triple-beam` and also used in:\n    // - logform\n    // - winston-transport\n    // - abstract-winston-transport\n    if (!info[LEVEL]) {\n      info[LEVEL] = info.level;\n    }\n\n    // Remark: really not sure what to do here, but this has been reported as\n    // very confusing by pre winston@2.0.0 users as quite confusing when using\n    // custom levels.\n    if (!this.levels[info[LEVEL]] && this.levels[info[LEVEL]] !== 0) {\n      // eslint-disable-next-line no-console\n      console.error('[winston] Unknown logger level: %s', info[LEVEL]);\n    }\n\n    // Remark: not sure if we should simply error here.\n    if (!this._readableState.pipes) {\n      // eslint-disable-next-line no-console\n      console.error(\n        '[winston] Attempt to write logs with no transports, which can increase memory usage: %j',\n        info\n      );\n    }\n\n    // Here we write to the `format` pipe-chain, which on `readable` above will\n    // push the formatted `info` Object onto the buffer for this instance. We trap\n    // (and re-throw) any errors generated by the user-provided format, but also\n    // guarantee that the streams callback is invoked so that we can continue flowing.\n    try {\n      this.push(this.format.transform(info, this.format.options));\n    } finally {\n      this._writableState.sync = false;\n      // eslint-disable-next-line callback-return\n      callback();\n    }\n  }\n\n  /**\n   * Delays the 'finish' event until all transport pipe targets have\n   * also emitted 'finish' or are already finished.\n   * @param {mixed} callback - Continues stream processing.\n   */\n  _final(callback) {\n    const transports = this.transports.slice();\n    asyncForEach(\n      transports,\n      (transport, next) => {\n        if (!transport || transport.finished) return setImmediate(next);\n        transport.once('finish', next);\n        transport.end();\n      },\n      callback\n    );\n  }\n\n  /**\n   * Adds the transport to this logger instance by piping to it.\n   * @param {mixed} transport - TODO: add param description.\n   * @returns {Logger} - TODO: add return description.\n   */\n  add(transport) {\n    // Support backwards compatibility with all existing `winston < 3.x.x`\n    // transports which meet one of two criteria:\n    // 1. They inherit from winston.Transport in  < 3.x.x which is NOT a stream.\n    // 2. They expose a log method which has a length greater than 2 (i.e. more then\n    //    just `log(info, callback)`.\n    const target =\n      !isStream(transport) || transport.log.length > 2\n        ? new LegacyTransportStream({ transport })\n        : transport;\n\n    if (!target._writableState || !target._writableState.objectMode) {\n      throw new Error(\n        'Transports must WritableStreams in objectMode. Set { objectMode: true }.'\n      );\n    }\n\n    // Listen for the `error` event and the `warn` event on the new Transport.\n    this._onEvent('error', target);\n    this._onEvent('warn', target);\n    this.pipe(target);\n\n    if (transport.handleExceptions) {\n      this.exceptions.handle();\n    }\n\n    if (transport.handleRejections) {\n      this.rejections.handle();\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes the transport from this logger instance by unpiping from it.\n   * @param {mixed} transport - TODO: add param description.\n   * @returns {Logger} - TODO: add return description.\n   */\n  remove(transport) {\n    if (!transport) return this;\n    let target = transport;\n    if (!isStream(transport) || transport.log.length > 2) {\n      target = this.transports.filter(\n        match => match.transport === transport\n      )[0];\n    }\n\n    if (target) {\n      this.unpipe(target);\n    }\n    return this;\n  }\n\n  /**\n   * Removes all transports from this logger instance.\n   * @returns {Logger} - TODO: add return description.\n   */\n  clear() {\n    this.unpipe();\n    return this;\n  }\n\n  /**\n   * Cleans up resources (streams, event listeners) for all transports\n   * associated with this instance (if necessary).\n   * @returns {Logger} - TODO: add return description.\n   */\n  close() {\n    this.exceptions.unhandle();\n    this.rejections.unhandle();\n    this.clear();\n    this.emit('close');\n    return this;\n  }\n\n  /**\n   * Sets the `target` levels specified on this instance.\n   * @param {Object} Target levels to use on this instance.\n   */\n  setLevels() {\n    warn.deprecated('setLevels');\n  }\n\n  /**\n   * Queries the all transports for this instance with the specified `options`.\n   * This will aggregate each transport's results into one object containing\n   * a property per transport.\n   * @param {Object} options - Query options for this instance.\n   * @param {function} callback - Continuation to respond to when complete.\n   */\n  query(options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    options = options || {};\n    const results = {};\n    const queryObject = Object.assign({}, options.query || {});\n\n    // Helper function to query a single transport\n    function queryTransport(transport, next) {\n      if (options.query && typeof transport.formatQuery === 'function') {\n        options.query = transport.formatQuery(queryObject);\n      }\n\n      transport.query(options, (err, res) => {\n        if (err) {\n          return next(err);\n        }\n\n        if (typeof transport.formatResults === 'function') {\n          res = transport.formatResults(res, options.format);\n        }\n\n        next(null, res);\n      });\n    }\n\n    // Helper function to accumulate the results from `queryTransport` into\n    // the `results`.\n    function addResults(transport, next) {\n      queryTransport(transport, (err, result) => {\n        // queryTransport could potentially invoke the callback multiple times\n        // since Transport code can be unpredictable.\n        if (next) {\n          result = err || result;\n          if (result) {\n            results[transport.name] = result;\n          }\n\n          // eslint-disable-next-line callback-return\n          next();\n        }\n\n        next = null;\n      });\n    }\n\n    // Iterate over the transports in parallel setting the appropriate key in\n    // the `results`.\n    asyncForEach(\n      this.transports.filter(transport => !!transport.query),\n      addResults,\n      () => callback(null, results)\n    );\n  }\n\n  /**\n   * Returns a log stream for all transports. Options object is optional.\n   * @param{Object} options={} - Stream options for this instance.\n   * @returns {Stream} - TODO: add return description.\n   */\n  stream(options = {}) {\n    const out = new Stream();\n    const streams = [];\n\n    out._streams = streams;\n    out.destroy = () => {\n      let i = streams.length;\n      while (i--) {\n        streams[i].destroy();\n      }\n    };\n\n    // Create a list of all transports for this instance.\n    this.transports\n      .filter(transport => !!transport.stream)\n      .forEach(transport => {\n        const str = transport.stream(options);\n        if (!str) {\n          return;\n        }\n\n        streams.push(str);\n\n        str.on('log', log => {\n          log.transport = log.transport || [];\n          log.transport.push(transport.name);\n          out.emit('log', log);\n        });\n\n        str.on('error', err => {\n          err.transport = err.transport || [];\n          err.transport.push(transport.name);\n          out.emit('error', err);\n        });\n      });\n\n    return out;\n  }\n\n  /**\n   * Returns an object corresponding to a specific timing. When done is called\n   * the timer will finish and log the duration. e.g.:\n   * @returns {Profile} - TODO: add return description.\n   * @example\n   *    const timer = winston.startTimer()\n   *    setTimeout(() => {\n   *      timer.done({\n   *        message: 'Logging message'\n   *      });\n   *    }, 1000);\n   */\n  startTimer() {\n    return new Profiler(this);\n  }\n\n  /**\n   * Tracks the time inbetween subsequent calls to this method with the same\n   * `id` parameter. The second call to this method will log the difference in\n   * milliseconds along with the message.\n   * @param {string} id Unique id of the profiler\n   * @returns {Logger} - TODO: add return description.\n   */\n  profile(id, ...args) {\n    const time = Date.now();\n    if (this.profilers[id]) {\n      const timeEnd = this.profilers[id];\n      delete this.profilers[id];\n\n      // Attempt to be kind to users if they are still using older APIs.\n      if (typeof args[args.length - 2] === 'function') {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Callback function no longer supported as of winston@3.0.0'\n        );\n        args.pop();\n      }\n\n      // Set the duration property of the metadata\n      const info = typeof args[args.length - 1] === 'object' ? args.pop() : {};\n      info.level = info.level || 'info';\n      info.durationMs = time - timeEnd;\n      info.message = info.message || id;\n      return this.write(info);\n    }\n\n    this.profilers[id] = time;\n    return this;\n  }\n\n  /**\n   * Backwards compatibility to `exceptions.handle` in winston < 3.0.0.\n   * @returns {undefined}\n   * @deprecated\n   */\n  handleExceptions(...args) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'Deprecated: .handleExceptions() will be removed in winston@4. Use .exceptions.handle()'\n    );\n    this.exceptions.handle(...args);\n  }\n\n  /**\n   * Backwards compatibility to `exceptions.handle` in winston < 3.0.0.\n   * @returns {undefined}\n   * @deprecated\n   */\n  unhandleExceptions(...args) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'Deprecated: .unhandleExceptions() will be removed in winston@4. Use .exceptions.unhandle()'\n    );\n    this.exceptions.unhandle(...args);\n  }\n\n  /**\n   * Throw a more meaningful deprecation notice\n   * @throws {Error} - TODO: add throws description.\n   */\n  cli() {\n    throw new Error(\n      [\n        'Logger.cli() was removed in winston@3.0.0',\n        'Use a custom winston.formats.cli() instead.',\n        'See: https://github.com/winstonjs/winston/tree/master/UPGRADE-3.0.md'\n      ].join('\\n')\n    );\n  }\n\n  /**\n   * Bubbles the `event` that occured on the specified `transport` up\n   * from this instance.\n   * @param {string} event - The event that occured\n   * @param {Object} transport - Transport on which the event occured\n   * @private\n   */\n  _onEvent(event, transport) {\n    function transportEvent(err) {\n      // https://github.com/winstonjs/winston/issues/1364\n      if (event === 'error' && !this.transports.includes(transport)) {\n        this.add(transport);\n      }\n      this.emit(event, err, transport);\n    }\n\n    if (!transport['__winston' + event]) {\n      transport['__winston' + event] = transportEvent.bind(this);\n      transport.on(event, transport['__winston' + event]);\n    }\n  }\n\n  _addDefaultMeta(msg) {\n    if (this.defaultMeta) {\n      Object.assign(msg, this.defaultMeta);\n    }\n  }\n}\n\nfunction getLevelValue(levels, level) {\n  const value = levels[level];\n  if (!value && value !== 0) {\n    return null;\n  }\n  return value;\n}\n\n/**\n * Represents the current readableState pipe targets for this Logger instance.\n * @type {Array|Object}\n */\nObject.defineProperty(Logger.prototype, 'transports', {\n  configurable: false,\n  enumerable: true,\n  get() {\n    const { pipes } = this._readableState;\n    return !Array.isArray(pipes) ? [pipes].filter(Boolean) : pipes;\n  }\n});\n\nmodule.exports = Logger;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2344, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2348, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/create-logger.js"],"sourcesContent":["/**\n * create-logger.js: Logger factory for winston logger instances.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst { LEVEL } = require('triple-beam');\nconst config = require('./config');\nconst Logger = require('./logger');\nconst debug = require('@dabh/diagnostics')('winston:create-logger');\n\nfunction isLevelEnabledFunctionName(level) {\n  return 'is' + level.charAt(0).toUpperCase() + level.slice(1) + 'Enabled';\n}\n\n/**\n * Create a new instance of a winston Logger. Creates a new\n * prototype for each instance.\n * @param {!Object} opts - Options for the created logger.\n * @returns {Logger} - A newly created logger instance.\n */\nmodule.exports = function (opts = {}) {\n  //\n  // Default levels: npm\n  //\n  opts.levels = opts.levels || config.npm.levels;\n\n  /**\n   * DerivedLogger to attach the logs level methods.\n   * @type {DerivedLogger}\n   * @extends {Logger}\n   */\n  class DerivedLogger extends Logger {\n    /**\n     * Create a new class derived logger for which the levels can be attached to\n     * the prototype of. This is a V8 optimization that is well know to increase\n     * performance of prototype functions.\n     * @param {!Object} options - Options for the created logger.\n     */\n    constructor(options) {\n      super(options);\n    }\n  }\n\n  const logger = new DerivedLogger(opts);\n\n  //\n  // Create the log level methods for the derived logger.\n  //\n  Object.keys(opts.levels).forEach(function (level) {\n    debug('Define prototype method for \"%s\"', level);\n    if (level === 'log') {\n      // eslint-disable-next-line no-console\n      console.warn('Level \"log\" not defined: conflicts with the method \"log\". Use a different level name.');\n      return;\n    }\n\n    //\n    // Define prototype methods for each log level e.g.:\n    // logger.log('info', msg) implies these methods are defined:\n    // - logger.info(msg)\n    // - logger.isInfoEnabled()\n    //\n    // Remark: to support logger.child this **MUST** be a function\n    // so it'll always be called on the instance instead of a fixed\n    // place in the prototype chain.\n    //\n    DerivedLogger.prototype[level] = function (...args) {\n      // Prefer any instance scope, but default to \"root\" logger\n      const self = this || logger;\n\n      // Optimize the hot-path which is the single object.\n      if (args.length === 1) {\n        const [msg] = args;\n        const info = msg && msg.message && msg || { message: msg };\n        info.level = info[LEVEL] = level;\n        self._addDefaultMeta(info);\n        self.write(info);\n        return (this || logger);\n      }\n\n      // When provided nothing assume the empty string\n      if (args.length === 0) {\n        self.log(level, '');\n        return self;\n      }\n\n      // Otherwise build argument list which could potentially conform to\n      // either:\n      // . v3 API: log(obj)\n      // 2. v1/v2 API: log(level, msg, ... [string interpolate], [{metadata}], [callback])\n      return self.log(level, ...args);\n    };\n\n    DerivedLogger.prototype[isLevelEnabledFunctionName(level)] = function () {\n      return (this || logger).isLevelEnabled(level);\n    };\n  });\n\n  return logger;\n};\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;AAEA,MAAM,EAAE,KAAK,EAAE;AACf,MAAM;AACN,MAAM;AACN,MAAM,QAAQ,yGAA6B;AAE3C,SAAS,2BAA2B,KAAK;IACvC,OAAO,OAAO,MAAM,MAAM,CAAC,GAAG,WAAW,KAAK,MAAM,KAAK,CAAC,KAAK;AACjE;AAEA;;;;;CAKC,GACD,OAAO,OAAO,GAAG,SAAU,OAAO,CAAC,CAAC;IAClC,EAAE;IACF,sBAAsB;IACtB,EAAE;IACF,KAAK,MAAM,GAAG,KAAK,MAAM,IAAI,OAAO,GAAG,CAAC,MAAM;IAE9C;;;;GAIC,GACD,MAAM,sBAAsB;QAC1B;;;;;KAKC,GACD,YAAY,OAAO,CAAE;YACnB,KAAK,CAAC;QACR;IACF;IAEA,MAAM,SAAS,IAAI,cAAc;IAEjC,EAAE;IACF,uDAAuD;IACvD,EAAE;IACF,OAAO,IAAI,CAAC,KAAK,MAAM,EAAE,OAAO,CAAC,SAAU,KAAK;QAC9C,MAAM,oCAAoC;QAC1C,IAAI,UAAU,OAAO;YACnB,sCAAsC;YACtC,QAAQ,IAAI,CAAC;YACb;QACF;QAEA,EAAE;QACF,oDAAoD;QACpD,6DAA6D;QAC7D,qBAAqB;QACrB,2BAA2B;QAC3B,EAAE;QACF,8DAA8D;QAC9D,+DAA+D;QAC/D,gCAAgC;QAChC,EAAE;QACF,cAAc,SAAS,CAAC,MAAM,GAAG,SAAU,GAAG,IAAI;YAChD,0DAA0D;YAC1D,MAAM,OAAO,IAAI,IAAI;YAErB,oDAAoD;YACpD,IAAI,KAAK,MAAM,KAAK,GAAG;gBACrB,MAAM,CAAC,IAAI,GAAG;gBACd,MAAM,OAAO,OAAO,IAAI,OAAO,IAAI,OAAO;oBAAE,SAAS;gBAAI;gBACzD,KAAK,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG;gBAC3B,KAAK,eAAe,CAAC;gBACrB,KAAK,KAAK,CAAC;gBACX,OAAQ,IAAI,IAAI;YAClB;YAEA,gDAAgD;YAChD,IAAI,KAAK,MAAM,KAAK,GAAG;gBACrB,KAAK,GAAG,CAAC,OAAO;gBAChB,OAAO;YACT;YAEA,mEAAmE;YACnE,UAAU;YACV,qBAAqB;YACrB,oFAAoF;YACpF,OAAO,KAAK,GAAG,CAAC,UAAU;QAC5B;QAEA,cAAc,SAAS,CAAC,2BAA2B,OAAO,GAAG;YAC3D,OAAO,CAAC,IAAI,IAAI,MAAM,EAAE,cAAc,CAAC;QACzC;IACF;IAEA,OAAO;AACT"}},
    {"offset": {"line": 2437, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2441, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston/container.js"],"sourcesContent":["/**\n * container.js: Inversion of control container for winston logger instances.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst createLogger = require('./create-logger');\n\n/**\n * Inversion of control container for winston logger instances.\n * @type {Container}\n */\nmodule.exports = class Container {\n  /**\n   * Constructor function for the Container object responsible for managing a\n   * set of `winston.Logger` instances based on string ids.\n   * @param {!Object} [options={}] - Default pass-thru options for Loggers.\n   */\n  constructor(options = {}) {\n    this.loggers = new Map();\n    this.options = options;\n  }\n\n  /**\n   * Retrieves a `winston.Logger` instance for the specified `id`. If an\n   * instance does not exist, one is created.\n   * @param {!string} id - The id of the Logger to get.\n   * @param {?Object} [options] - Options for the Logger instance.\n   * @returns {Logger} - A configured Logger instance with a specified id.\n   */\n  add(id, options) {\n    if (!this.loggers.has(id)) {\n      // Remark: Simple shallow clone for configuration options in case we pass\n      // in instantiated protoypal objects\n      options = Object.assign({}, options || this.options);\n      const existing = options.transports || this.options.transports;\n\n      // Remark: Make sure if we have an array of transports we slice it to\n      // make copies of those references.\n      if (existing) {\n        options.transports = Array.isArray(existing) ? existing.slice() : [existing];\n      } else {\n        options.transports = [];\n      }\n\n      const logger = createLogger(options);\n      logger.on('close', () => this._delete(id));\n      this.loggers.set(id, logger);\n    }\n\n    return this.loggers.get(id);\n  }\n\n  /**\n   * Retreives a `winston.Logger` instance for the specified `id`. If\n   * an instance does not exist, one is created.\n   * @param {!string} id - The id of the Logger to get.\n   * @param {?Object} [options] - Options for the Logger instance.\n   * @returns {Logger} - A configured Logger instance with a specified id.\n   */\n  get(id, options) {\n    return this.add(id, options);\n  }\n\n  /**\n   * Check if the container has a logger with the id.\n   * @param {?string} id - The id of the Logger instance to find.\n   * @returns {boolean} - Boolean value indicating if this instance has a\n   * logger with the specified `id`.\n   */\n  has(id) {\n    return !!this.loggers.has(id);\n  }\n\n  /**\n   * Closes a `Logger` instance with the specified `id` if it exists.\n   * If no `id` is supplied then all Loggers are closed.\n   * @param {?string} id - The id of the Logger instance to close.\n   * @returns {undefined}\n   */\n  close(id) {\n    if (id) {\n      return this._removeLogger(id);\n    }\n\n    this.loggers.forEach((val, key) => this._removeLogger(key));\n  }\n\n  /**\n   * Remove a logger based on the id.\n   * @param {!string} id - The id of the logger to remove.\n   * @returns {undefined}\n   * @private\n   */\n  _removeLogger(id) {\n    if (!this.loggers.has(id)) {\n      return;\n    }\n\n    const logger = this.loggers.get(id);\n    logger.close();\n    this._delete(id);\n  }\n\n  /**\n   * Deletes a `Logger` instance with the specified `id`.\n   * @param {!string} id - The id of the Logger instance to delete from\n   * container.\n   * @returns {undefined}\n   * @private\n   */\n  _delete(id) {\n    this.loggers.delete(id);\n  }\n};\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;AAEA,MAAM;AAEN;;;CAGC,GACD,OAAO,OAAO,GAAG,MAAM;IACrB;;;;GAIC,GACD,YAAY,UAAU,CAAC,CAAC,CAAE;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI;QACnB,IAAI,CAAC,OAAO,GAAG;IACjB;IAEA;;;;;;GAMC,GACD,IAAI,EAAE,EAAE,OAAO,EAAE;QACf,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK;YACzB,yEAAyE;YACzE,oCAAoC;YACpC,UAAU,OAAO,MAAM,CAAC,CAAC,GAAG,WAAW,IAAI,CAAC,OAAO;YACnD,MAAM,WAAW,QAAQ,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU;YAE9D,qEAAqE;YACrE,mCAAmC;YACnC,IAAI,UAAU;gBACZ,QAAQ,UAAU,GAAG,MAAM,OAAO,CAAC,YAAY,SAAS,KAAK,KAAK;oBAAC;iBAAS;YAC9E,OAAO;gBACL,QAAQ,UAAU,GAAG,EAAE;YACzB;YAEA,MAAM,SAAS,aAAa;YAC5B,OAAO,EAAE,CAAC,SAAS,IAAM,IAAI,CAAC,OAAO,CAAC;YACtC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI;QACvB;QAEA,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;IAC1B;IAEA;;;;;;GAMC,GACD,IAAI,EAAE,EAAE,OAAO,EAAE;QACf,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI;IACtB;IAEA;;;;;GAKC,GACD,IAAI,EAAE,EAAE;QACN,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;IAC5B;IAEA;;;;;GAKC,GACD,MAAM,EAAE,EAAE;QACR,IAAI,IAAI;YACN,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B;QAEA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,MAAQ,IAAI,CAAC,aAAa,CAAC;IACxD;IAEA;;;;;GAKC,GACD,cAAc,EAAE,EAAE;QAChB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK;YACzB;QACF;QAEA,MAAM,SAAS,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;QAChC,OAAO,KAAK;QACZ,IAAI,CAAC,OAAO,CAAC;IACf;IAEA;;;;;;GAMC,GACD,QAAQ,EAAE,EAAE;QACV,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IACtB;AACF"}},
    {"offset": {"line": 2538, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2542, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/winston/lib/winston.js"],"sourcesContent":["/**\n * winston.js: Top-level include defining Winston.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst logform = require('logform');\nconst { warn } = require('./winston/common');\n\n/**\n * Expose version. Use `require` method for `webpack` support.\n * @type {string}\n */\nexports.version = require('../package.json').version;\n/**\n * Include transports defined by default by winston\n * @type {Array}\n */\nexports.transports = require('./winston/transports');\n/**\n * Expose utility methods\n * @type {Object}\n */\nexports.config = require('./winston/config');\n/**\n * Hoist format-related functionality from logform.\n * @type {Object}\n */\nexports.addColors = logform.levels;\n/**\n * Hoist format-related functionality from logform.\n * @type {Object}\n */\nexports.format = logform.format;\n/**\n * Expose core Logging-related prototypes.\n * @type {function}\n */\nexports.createLogger = require('./winston/create-logger');\n/**\n * Expose core Logging-related prototypes.\n * @type {function}\n */\nexports.Logger = require('./winston/logger');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\nexports.ExceptionHandler = require('./winston/exception-handler');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\nexports.RejectionHandler = require('./winston/rejection-handler');\n/**\n * Expose core Logging-related prototypes.\n * @type {Container}\n */\nexports.Container = require('./winston/container');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\nexports.Transport = require('winston-transport');\n/**\n * We create and expose a default `Container` to `winston.loggers` so that the\n * programmer may manage multiple `winston.Logger` instances without any\n * additional overhead.\n * @example\n *   // some-file1.js\n *   const logger = require('winston').loggers.get('something');\n *\n *   // some-file2.js\n *   const logger = require('winston').loggers.get('something');\n */\nexports.loggers = new exports.Container();\n\n/**\n * We create and expose a 'defaultLogger' so that the programmer may do the\n * following without the need to create an instance of winston.Logger directly:\n * @example\n *   const winston = require('winston');\n *   winston.log('info', 'some message');\n *   winston.error('some error');\n */\nconst defaultLogger = exports.createLogger();\n\n// Pass through the target methods onto `winston.\nObject.keys(exports.config.npm.levels)\n  .concat([\n    'log',\n    'query',\n    'stream',\n    'add',\n    'remove',\n    'clear',\n    'profile',\n    'startTimer',\n    'handleExceptions',\n    'unhandleExceptions',\n    'handleRejections',\n    'unhandleRejections',\n    'configure',\n    'child'\n  ])\n  .forEach(\n    method => (exports[method] = (...args) => defaultLogger[method](...args))\n  );\n\n/**\n * Define getter / setter for the default logger level which need to be exposed\n * by winston.\n * @type {string}\n */\nObject.defineProperty(exports, 'level', {\n  get() {\n    return defaultLogger.level;\n  },\n  set(val) {\n    defaultLogger.level = val;\n  }\n});\n\n/**\n * Define getter for `exceptions` which replaces `handleExceptions` and\n * `unhandleExceptions`.\n * @type {Object}\n */\nObject.defineProperty(exports, 'exceptions', {\n  get() {\n    return defaultLogger.exceptions;\n  }\n});\n\n/**\n * Define getter for `rejections` which replaces `handleRejections` and\n * `unhandleRejections`.\n * @type {Object}\n */\nObject.defineProperty(exports, 'rejections', {\n  get() {\n    return defaultLogger.rejections;\n  }\n});\n\n/**\n * Define getters / setters for appropriate properties of the default logger\n * which need to be exposed by winston.\n * @type {Logger}\n */\n['exitOnError'].forEach(prop => {\n  Object.defineProperty(exports, prop, {\n    get() {\n      return defaultLogger[prop];\n    },\n    set(val) {\n      defaultLogger[prop] = val;\n    }\n  });\n});\n\n/**\n * The default transports and exceptionHandlers for the default winston logger.\n * @type {Object}\n */\nObject.defineProperty(exports, 'default', {\n  get() {\n    return {\n      exceptionHandlers: defaultLogger.exceptionHandlers,\n      rejectionHandlers: defaultLogger.rejectionHandlers,\n      transports: defaultLogger.transports\n    };\n  }\n});\n\n// Have friendlier breakage notices for properties that were exposed by default\n// on winston < 3.0.\nwarn.deprecated(exports, 'setLevels');\nwarn.forFunctions(exports, 'useFormat', ['cli']);\nwarn.forProperties(exports, 'useFormat', ['padLevels', 'stripColors']);\nwarn.forFunctions(exports, 'deprecated', [\n  'addRewriter',\n  'addFilter',\n  'clone',\n  'extend'\n]);\nwarn.forProperties(exports, 'deprecated', ['emitErrs', 'levelLength']);\n\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;AAEA,MAAM;AACN,MAAM,EAAE,IAAI,EAAE;AAEd;;;CAGC,GACD,QAAQ,OAAO,GAAG,4EAA2B,OAAO;AACpD;;;CAGC,GACD,QAAQ,UAAU;AAClB;;;CAGC,GACD,QAAQ,MAAM;AACd;;;CAGC,GACD,QAAQ,SAAS,GAAG,QAAQ,MAAM;AAClC;;;CAGC,GACD,QAAQ,MAAM,GAAG,QAAQ,MAAM;AAC/B;;;CAGC,GACD,QAAQ,YAAY;AACpB;;;CAGC,GACD,QAAQ,MAAM;AACd;;;CAGC,GACD,QAAQ,gBAAgB;AACxB;;;CAGC,GACD,QAAQ,gBAAgB;AACxB;;;CAGC,GACD,QAAQ,SAAS;AACjB;;;CAGC,GACD,QAAQ,SAAS;AACjB;;;;;;;;;;CAUC,GACD,QAAQ,OAAO,GAAG,IAAI,QAAQ,SAAS;AAEvC;;;;;;;CAOC,GACD,MAAM,gBAAgB,QAAQ,YAAY;AAE1C,iDAAiD;AACjD,OAAO,IAAI,CAAC,QAAQ,MAAM,CAAC,GAAG,CAAC,MAAM,EAClC,MAAM,CAAC;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD,EACA,OAAO,CACN,CAAA,SAAW,OAAO,CAAC,OAAO,GAAG,CAAC,GAAG,OAAS,aAAa,CAAC,OAAO,IAAI;AAGvE;;;;CAIC,GACD,OAAO,cAAc,CAAC,SAAS,SAAS;IACtC;QACE,OAAO,cAAc,KAAK;IAC5B;IACA,KAAI,GAAG;QACL,cAAc,KAAK,GAAG;IACxB;AACF;AAEA;;;;CAIC,GACD,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C;QACE,OAAO,cAAc,UAAU;IACjC;AACF;AAEA;;;;CAIC,GACD,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C;QACE,OAAO,cAAc,UAAU;IACjC;AACF;AAEA;;;;CAIC,GACD;IAAC;CAAc,CAAC,OAAO,CAAC,CAAA;IACtB,OAAO,cAAc,CAAC,SAAS,MAAM;QACnC;YACE,OAAO,aAAa,CAAC,KAAK;QAC5B;QACA,KAAI,GAAG;YACL,aAAa,CAAC,KAAK,GAAG;QACxB;IACF;AACF;AAEA;;;CAGC,GACD,OAAO,cAAc,CAAC,SAAS,WAAW;IACxC;QACE,OAAO;YACL,mBAAmB,cAAc,iBAAiB;YAClD,mBAAmB,cAAc,iBAAiB;YAClD,YAAY,cAAc,UAAU;QACtC;IACF;AACF;AAEA,+EAA+E;AAC/E,oBAAoB;AACpB,KAAK,UAAU,CAAC,SAAS;AACzB,KAAK,YAAY,CAAC,SAAS,aAAa;IAAC;CAAM;AAC/C,KAAK,aAAa,CAAC,SAAS,aAAa;IAAC;IAAa;CAAc;AACrE,KAAK,YAAY,CAAC,SAAS,cAAc;IACvC;IACA;IACA;IACA;CACD;AACD,KAAK,aAAa,CAAC,SAAS,cAAc;IAAC;IAAY;CAAc"}},
    {"offset": {"line": 2708, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}