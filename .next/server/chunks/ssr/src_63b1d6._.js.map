{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/pages/chat/chat-header.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Block, Service } from \"@/lib/types\";\nimport { CheckCircle, MoreVertical, Plus, Sidebar } from \"lucide-react\";\n\ntype ChatHeaderProps = {\n  service: Service | null;\n  currentBlock: Block | null;\n  onCreateNewBlock: () => void;\n  onDiscardBlock: () => void;\n  isSidebarOpen: boolean;\n  toggleSidebar: () => void;\n};\n\nexport default function ChatHeader({\n  service,\n  currentBlock,\n  onCreateNewBlock,\n  toggleSidebar,\n  isSidebarOpen,\n}: ChatHeaderProps) {\n  return (\n    <div className=\"flex items-center justify-between border-b p-3.5\">\n      <div className=\"flex items-center gap-3\">\n        <Button variant=\"ghost\" size=\"icon\" onClick={toggleSidebar}>\n          <Sidebar size={20} />\n        </Button>\n        <h2 className=\"font-medium\">{service?.name || \"Select a Service\"}</h2>\n        {currentBlock && (\n          <div className=\"ml-4 flex items-center text-sm\">\n            <span className=\"text-muted-foreground\">|</span>\n            <span className=\"ml-4 font-medium\">{currentBlock.title}</span>\n            {currentBlock.status === \"completed\" && (\n              <span className=\"ml-2 flex items-center gap-1 text-green-500\">\n                <CheckCircle size={14} /> Completed\n              </span>\n            )}\n          </div>\n        )}\n      </div>\n\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button variant=\"ghost\" size=\"icon\" disabled={!currentBlock}>\n            <MoreVertical size={16} />\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent align=\"end\">\n          <DropdownMenuItem onClick={onCreateNewBlock}>\n            <Plus size={14} className=\"mr-2\" /> New Block\n          </DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;AAqBe,SAAS,WAAW,EACjC,OAAO,EACP,YAAY,EACZ,gBAAgB,EAChB,aAAa,EACb,aAAa,EACG;IAChB,qBACE,wPAAC;QAAI,WAAU;;0BACb,wPAAC;gBAAI,WAAU;;kCACb,wPAAC,kIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;wBAAO,SAAS;kCAC3C,cAAA,wPAAC,8MAAA,CAAA,UAAO;4BAAC,MAAM;;;;;;;;;;;kCAEjB,wPAAC;wBAAG,WAAU;kCAAe,SAAS,QAAQ;;;;;;oBAC7C,8BACC,wPAAC;wBAAI,WAAU;;0CACb,wPAAC;gCAAK,WAAU;0CAAwB;;;;;;0CACxC,wPAAC;gCAAK,WAAU;0CAAoB,aAAa,KAAK;;;;;;4BACrD,aAAa,MAAM,KAAK,6BACvB,wPAAC;gCAAK,WAAU;;kDACd,wPAAC,2NAAA,CAAA,cAAW;wCAAC,MAAM;;;;;;oCAAM;;;;;;;;;;;;;;;;;;;0BAOnC,wPAAC,4IAAA,CAAA,eAAY;;kCACX,wPAAC,4IAAA,CAAA,sBAAmB;wBAAC,OAAO;kCAC1B,cAAA,wPAAC,kIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAQ,MAAK;4BAAO,UAAU,CAAC;sCAC7C,cAAA,wPAAC,0NAAA,CAAA,eAAY;gCAAC,MAAM;;;;;;;;;;;;;;;;kCAGxB,wPAAC,4IAAA,CAAA,sBAAmB;wBAAC,OAAM;kCACzB,cAAA,wPAAC,4IAAA,CAAA,mBAAgB;4BAAC,SAAS;;8CACzB,wPAAC,kMAAA,CAAA,OAAI;oCAAC,MAAM;oCAAI,WAAU;;;;;;gCAAS;;;;;;;;;;;;;;;;;;;;;;;;AAM/C"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;AAOA,MAAM,2BAAa,gNAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,wPAAC,2KAAoB,IAAI;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,wPAAC,2KAAoB,QAAQ;gBAAC,WAAU;0BACrC;;;;;;0BAEH,wPAAC;;;;;0BACD,wPAAC,2KAAoB,MAAM;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,2KAAoB,IAAI,CAAC,WAAW;AAE7D,MAAM,0BAAY,gNAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,wPAAC,2KAAoB,mBAAmB;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,wPAAC,2KAAoB,eAAe;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,2KAAoB,mBAAmB,CAAC,WAAW"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/common/date-picker.tsx"],"sourcesContent":["\"use client\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { useState } from \"react\";\n\ninterface ShadcnDatePickerProps {\n  startYear: number;\n  endYear: number;\n  selected: Date;\n  onSelect: (date: Date) => void;\n}\n\nconst DatePicker: React.FC<ShadcnDatePickerProps> = ({\n  startYear,\n  endYear,\n  selected,\n  onSelect,\n}) => {\n  const [error, setError] = useState<string | null>(null);\n\n  const handleMonthChange = (month: string) => {\n    const year = selected.getFullYear();\n    const day = selected.getDate();\n    const newDate = new Date(year, months.indexOf(month), day);\n\n    if (newDate.getMonth() !== months.indexOf(month)) {\n      setError(\"Invalid date selected\");\n    } else {\n      setError(null);\n      onSelect(newDate);\n    }\n  };\n\n  const handleYearChange = (year: string) => {\n    const month = selected.getMonth();\n    const day = selected.getDate();\n    const newDate = new Date(parseInt(year), month, day);\n\n    if (newDate.getFullYear() !== parseInt(year)) {\n      setError(\"Invalid date selected\");\n    } else {\n      setError(null);\n      onSelect(newDate);\n    }\n  };\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const years = Array.from(\n    { length: endYear - startYear + 1 },\n    (_, i) => startYear + i,\n  );\n  return (\n    <div className=\"grid max-w-[360px] grid-cols-2 gap-4 dark:text-white \">\n      <Select onValueChange={handleMonthChange}>\n        <SelectTrigger className=\"h-auto  shadow-sm focus:outline-0 focus:ring-0 focus:ring-offset-0\">\n          <SelectValue\n            placeholder={\n              <div className=\"flex flex-col items-start\">\n                <span className=\"text-[0.65rem] font-semibold uppercase text-muted-foreground dark:text-white\">\n                  Month\n                </span>\n                <span className=\"font-normal dark:text-white\">\n                  {months[selected.getMonth()] || \"-\"}\n                </span>\n              </div>\n            }\n          />\n        </SelectTrigger>\n        <SelectContent>\n          <ScrollArea className=\"h-48\">\n            {months.map((month, index) => (\n              <SelectItem key={index} value={month}>\n                {month}\n              </SelectItem>\n            ))}\n          </ScrollArea>\n        </SelectContent>\n      </Select>\n      <Select onValueChange={handleYearChange}>\n        <SelectTrigger className=\"h-auto shadow-sm focus:outline-0 focus:ring-0 focus:ring-offset-0\">\n          <SelectValue\n            placeholder={\n              <div className=\"flex flex-col items-start\">\n                <span className=\"text-[0.65rem] font-semibold uppercase text-muted-foreground dark:text-white\">\n                  Year\n                </span>\n                <span className=\"font-normal dark:text-white\">\n                  {selected.getFullYear() || \"-\"}\n                </span>\n              </div>\n            }\n          />\n        </SelectTrigger>\n        <SelectContent>\n          <ScrollArea className=\"h-48\">\n            {Array.from({ length: endYear - startYear + 1 }, (_, i) => (\n              <SelectItem\n                key={i + startYear}\n                value={(i + startYear).toString()}\n              >\n                {i + startYear}\n              </SelectItem>\n            ))}\n          </ScrollArea>\n        </SelectContent>\n      </Select>\n      {error && <div className=\"text-red-500\">{error}</div>}\n    </div>\n  );\n};\n\nexport default DatePicker;\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;AAkBA,MAAM,aAA8C,CAAC,EACnD,SAAS,EACT,OAAO,EACP,QAAQ,EACR,QAAQ,EACT;IACC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,oBAAoB,CAAC;QACzB,MAAM,OAAO,SAAS,WAAW;QACjC,MAAM,MAAM,SAAS,OAAO;QAC5B,MAAM,UAAU,IAAI,KAAK,MAAM,OAAO,OAAO,CAAC,QAAQ;QAEtD,IAAI,QAAQ,QAAQ,OAAO,OAAO,OAAO,CAAC,QAAQ;YAChD,SAAS;QACX,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,QAAQ,SAAS,QAAQ;QAC/B,MAAM,MAAM,SAAS,OAAO;QAC5B,MAAM,UAAU,IAAI,KAAK,SAAS,OAAO,OAAO;QAEhD,IAAI,QAAQ,WAAW,OAAO,SAAS,OAAO;YAC5C,SAAS;QACX,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;IAEA,MAAM,SAAS;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM,QAAQ,MAAM,IAAI,CACtB;QAAE,QAAQ,UAAU,YAAY;IAAE,GAClC,CAAC,GAAG,IAAM,YAAY;IAExB,qBACE,wPAAC;QAAI,WAAU;;0BACb,wPAAC,kIAAA,CAAA,SAAM;gBAAC,eAAe;;kCACrB,wPAAC,kIAAA,CAAA,gBAAa;wBAAC,WAAU;kCACvB,cAAA,wPAAC,kIAAA,CAAA,cAAW;4BACV,2BACE,wPAAC;gCAAI,WAAU;;kDACb,wPAAC;wCAAK,WAAU;kDAA+E;;;;;;kDAG/F,wPAAC;wCAAK,WAAU;kDACb,MAAM,CAAC,SAAS,QAAQ,GAAG,IAAI;;;;;;;;;;;;;;;;;;;;;;kCAM1C,wPAAC,kIAAA,CAAA,gBAAa;kCACZ,cAAA,wPAAC,0IAAA,CAAA,aAAU;4BAAC,WAAU;sCACnB,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,wPAAC,kIAAA,CAAA,aAAU;oCAAa,OAAO;8CAC5B;mCADc;;;;;;;;;;;;;;;;;;;;;0BAOzB,wPAAC,kIAAA,CAAA,SAAM;gBAAC,eAAe;;kCACrB,wPAAC,kIAAA,CAAA,gBAAa;wBAAC,WAAU;kCACvB,cAAA,wPAAC,kIAAA,CAAA,cAAW;4BACV,2BACE,wPAAC;gCAAI,WAAU;;kDACb,wPAAC;wCAAK,WAAU;kDAA+E;;;;;;kDAG/F,wPAAC;wCAAK,WAAU;kDACb,SAAS,WAAW,MAAM;;;;;;;;;;;;;;;;;;;;;;kCAMrC,wPAAC,kIAAA,CAAA,gBAAa;kCACZ,cAAA,wPAAC,0IAAA,CAAA,aAAU;4BAAC,WAAU;sCACnB,MAAM,IAAI,CAAC;gCAAE,QAAQ,UAAU,YAAY;4BAAE,GAAG,CAAC,GAAG,kBACnD,wPAAC,kIAAA,CAAA,aAAU;oCAET,OAAO,CAAC,IAAI,SAAS,EAAE,QAAQ;8CAE9B,IAAI;mCAHA,IAAI;;;;;;;;;;;;;;;;;;;;;YASlB,uBAAS,wPAAC;gBAAI,WAAU;0BAAgB;;;;;;;;;;;;AAG/C;uCAEe"}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;AAQA,MAAM,yBAAW,gNAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,wPAAC,qKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,wPAAC,qKAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,wPAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,qKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 684, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 689, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;;;;;;AAIA,MAAM,sBAAQ,gNAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,wPAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 713, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 718, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,gNAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,wPAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 745, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 750, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverAnchor = PopoverPrimitive.Anchor\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;AAOA,MAAM,UAAU,oKAAiB,IAAI;AAErC,MAAM,iBAAiB,oKAAiB,OAAO;AAE/C,MAAM,gBAAgB,oKAAiB,MAAM;AAE7C,MAAM,+BAAiB,gNAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,wPAAC,oKAAiB,MAAM;kBACtB,cAAA,wPAAC,oKAAiB,OAAO;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,geACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,oKAAiB,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 788, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 793, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-3.5 w-3.5 fill-primary\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;AAQA,MAAM,2BAAa,gNAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,wPAAC,2KAAoB,IAAI;QACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;AACA,WAAW,WAAW,GAAG,2KAAoB,IAAI,CAAC,WAAW;AAE7D,MAAM,+BAAiB,gNAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,wPAAC,2KAAoB,IAAI;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gMACA;QAED,GAAG,KAAK;kBAET,cAAA,wPAAC,2KAAoB,SAAS;YAAC,WAAU;sBACvC,cAAA,wPAAC,sMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;AACA,eAAe,WAAW,GAAG,2KAAoB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 848, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 853, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;;;;;;;AAIA,MAAM,yBAAW,gNAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,wPAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 876, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 881, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/pages/chat/file-preview.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { UploadedFile } from \"@/lib/types\";\nimport { Upload, X } from \"lucide-react\";\nimport Image from \"next/image\";\n\ntype FilePreviewProps = {\n  uploadedFiles: UploadedFile[];\n  onRemoveFile: (index: number) => void;\n};\n\nexport default function FilePreview({\n  uploadedFiles,\n  onRemoveFile,\n}: FilePreviewProps) {\n  if (uploadedFiles.length === 0) return null;\n\n  return (\n    <div className=\"mt-2 flex flex-wrap gap-2 py-2\">\n      {uploadedFiles.map((file, index) => (\n        <div\n          key={index}\n          className=\"bg-muted group relative flex items-center rounded-md p-2\"\n        >\n          {file.type.startsWith(\"image/\") ? (\n            <div className=\"mr-2 h-12 w-12 overflow-hidden rounded\">\n              <Image\n                src={file.url || \"/placeholder.svg\"}\n                alt={file.name}\n                className=\"h-full w-full object-cover\"\n                height={48}\n                width={48}\n                unoptimized\n              />\n            </div>\n          ) : (\n            <div className=\"bg-primary/10 mr-2 flex h-12 w-12 items-center justify-center rounded\">\n              <Upload className=\"text-primary h-6 w-6\" />\n            </div>\n          )}\n          <div className=\"min-w-0 flex-1\">\n            <p className=\"truncate text-sm font-medium\">{file.name}</p>\n          </div>\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"h-8 w-8 opacity-0 transition-opacity group-hover:opacity-100\"\n            onClick={() => onRemoveFile(index)}\n          >\n            <X className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;AAYe,SAAS,YAAY,EAClC,aAAa,EACb,YAAY,EACK;IACjB,IAAI,cAAc,MAAM,KAAK,GAAG,OAAO;IAEvC,qBACE,wPAAC;QAAI,WAAU;kBACZ,cAAc,GAAG,CAAC,CAAC,MAAM,sBACxB,wPAAC;gBAEC,WAAU;;oBAET,KAAK,IAAI,CAAC,UAAU,CAAC,0BACpB,wPAAC;wBAAI,WAAU;kCACb,cAAA,wPAAC,6HAAA,CAAA,UAAK;4BACJ,KAAK,KAAK,GAAG,IAAI;4BACjB,KAAK,KAAK,IAAI;4BACd,WAAU;4BACV,QAAQ;4BACR,OAAO;4BACP,WAAW;;;;;;;;;;6CAIf,wPAAC;wBAAI,WAAU;kCACb,cAAA,wPAAC,sMAAA,CAAA,SAAM;4BAAC,WAAU;;;;;;;;;;;kCAGtB,wPAAC;wBAAI,WAAU;kCACb,cAAA,wPAAC;4BAAE,WAAU;sCAAgC,KAAK,IAAI;;;;;;;;;;;kCAExD,wPAAC,kIAAA,CAAA,SAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,WAAU;wBACV,SAAS,IAAM,aAAa;kCAE5B,cAAA,wPAAC,4LAAA,CAAA,IAAC;4BAAC,WAAU;;;;;;;;;;;;eA5BV;;;;;;;;;;AAkCf"}},
    {"offset": {"line": 978, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 983, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/pages/chat/dynamic-input.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\"use client\";\n\nimport type React from \"react\";\n\nimport DatePicker from \"@/components/common/date-picker\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport type { Field, Service, UploadedFile } from \"@/lib/types\";\nimport { cn } from \"@/lib/utils\";\nimport { format } from \"date-fns\";\nimport { CalendarIcon, Loader2, Send, Upload } from \"lucide-react\";\nimport { useRef } from \"react\";\nimport FilePreview from \"./file-preview\";\n\ntype DynamicInputProps = {\n  services: Service[];\n  onSelectService: (serviceId: string) => void;\n  currentField: Field | undefined;\n  input: string;\n  setInput: (value: string) => void;\n  selectedDate: Date | undefined;\n  setSelectedDate: (date: Date | undefined) => void;\n  selectedOptions: string[];\n  setSelectedOptions: (\n    options: string[] | ((prev: string[]) => string[]),\n  ) => void;\n  uploadedFiles: UploadedFile[];\n  setUploadedFiles: (\n    files: UploadedFile[] | ((prev: UploadedFile[]) => UploadedFile[]),\n  ) => void;\n  sending: boolean;\n  onSend: () => void;\n  fileUploading: boolean;\n  onFileUpload: (files: FileList | null) => void;\n  onDrag: (e: React.DragEvent) => void;\n  dragActive: boolean;\n  service: any | null;\n  currentBlock: any | null;\n  createNewBlock: () => void;\n  allQuestionsAttempted?: boolean;\n};\n\nexport default function DynamicInput({\n  currentField,\n  input,\n  setInput,\n  selectedDate,\n  setSelectedDate,\n  selectedOptions,\n  setSelectedOptions,\n  uploadedFiles,\n  setUploadedFiles,\n  sending,\n  onSend,\n  fileUploading,\n  onFileUpload,\n  onDrag,\n  dragActive,\n  service,\n  currentBlock,\n  createNewBlock,\n  allQuestionsAttempted = false,\n}: DynamicInputProps) {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Handle checkbox change\n  const handleCheckboxChange = (option: string) => {\n    setSelectedOptions((prev: string[]) => {\n      if (prev.includes(option)) {\n        return prev.filter((item: string) => item !== option);\n      } else {\n        return [...prev, option];\n      }\n    });\n  };\n\n  // Remove a file from the uploaded files\n  const removeFile = (index: number) => {\n    setUploadedFiles((prev: UploadedFile[]) => {\n      return prev.filter((_, i) => i !== index);\n    });\n  };\n\n  // Check if the input is disabled\n  const isInputDisabled =\n    sending || !service || currentBlock?.status === \"completed\";\n\n  // Show submit button if all questions are attempted or questionnaire is complete\n  const showSubmitButton = allQuestionsAttempted;\n\n  if (!currentField) {\n    return (\n      <div className=\"flex flex-shrink-0 items-center gap-2\">\n        {/* <Input\n          placeholder=\"Ask anything...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n              e.preventDefault();\n              onSend();\n            }\n          }}\n          disabled={isInputDisabled}\n          className=\"flex-1\"\n        />\n        <Button\n          onClick={onSend}\n          disabled={isInputDisabled}\n          size=\"icon\"\n          className=\"h-10 w-10 flex-shrink-0 rounded-full\"\n        >\n          {sending ? (\n            <Loader2 className=\"h-4 w-4 animate-spin\" />\n          ) : (\n            <Send className=\"h-4 w-4\" />\n          )}\n        </Button> */}\n        {currentBlock?.status === \"completed\" ? (\n          <Button onClick={createNewBlock} className=\"m-3.5 w-full\">\n            Create new block\n          </Button>\n        ) : showSubmitButton ? (\n          <Button\n            onClick={onSend}\n            disabled={isInputDisabled}\n            className=\"m-3.5 w-full\"\n          >\n            Submit\n          </Button>\n        ) : // <div className=\"flex w-full gap-x-2 overflow-scroll scrollbar-hide\">\n        //   {services.map((s) => (\n        //     <Button\n        //       key={s.id}\n        //       variant={\"ghost\"}\n        //       className=\"w-fit justify-start text-sm\"\n        //       onClick={() => onSelectService(s.id)}\n        //     >\n        //       {s.icon ? (\n        //         <span className=\"mr-2\">{s.icon}</span>\n        //       ) : (\n        //         <Sparkles size={16} className=\"mr-2\" />\n        //       )}\n        //       {s.name}\n        //     </Button>\n        //   ))}\n        // </div>\n        null}\n      </div>\n    );\n  }\n\n  const renderFieldInput = () => {\n    switch (currentField.type) {\n      case \"text\":\n      case \"email\":\n        return (\n          <Input\n            placeholder={`Enter ${currentField.label.toLowerCase()}...`}\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            type={currentField.type}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" && !e.shiftKey) {\n                e.preventDefault();\n                onSend();\n              }\n            }}\n            disabled={sending}\n          />\n        );\n      case \"textarea\":\n        return (\n          <Textarea\n            placeholder={`Enter ${currentField.label.toLowerCase()}...`}\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            disabled={sending}\n            className=\"resize-none border-none outline-none focus:border-none focus-visible:ring-[0px] dark:bg-transparent\"\n          />\n        );\n      case \"number\":\n        return (\n          <Input\n            placeholder={`Enter ${currentField.label.toLowerCase()}...`}\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            type=\"number\"\n            min={0}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" && !e.shiftKey) {\n                e.preventDefault();\n                onSend();\n              }\n            }}\n            disabled={sending}\n          />\n        );\n      case \"date\":\n        return (\n          <Popover>\n            <PopoverTrigger asChild>\n              <Button\n                variant=\"outline\"\n                className={cn(\n                  \"w-full justify-start text-left font-normal\",\n                  !selectedDate && \"text-muted-foreground\",\n                )}\n                disabled={sending}\n              >\n                <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                {selectedDate\n                  ? format(selectedDate, \"PPP\")\n                  : `Select ${currentField.label.toLowerCase()}`}\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-auto p-0\">\n              <DatePicker\n                selected={selectedDate || new Date()}\n                onSelect={setSelectedDate}\n                startYear={1950}\n                endYear={2100}\n              />\n            </PopoverContent>\n          </Popover>\n        );\n      case \"dropdown\":\n        return (\n          <Select onValueChange={(value) => setInput(value)} disabled={sending}>\n            <SelectTrigger className=\"w-full\">\n              <SelectValue\n                placeholder={`Select ${currentField.label.toLowerCase()}`}\n              />\n            </SelectTrigger>\n            <SelectContent>\n              {currentField.options?.map((option) => (\n                <SelectItem key={option} value={option}>\n                  {option}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        );\n      case \"checkbox\":\n        return (\n          <div className=\"space-y-2\">\n            {currentField.options?.map((option) => (\n              <div key={option} className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id={`option-${option}`}\n                  checked={selectedOptions.includes(option)}\n                  onCheckedChange={() => handleCheckboxChange(option)}\n                  disabled={sending}\n                />\n                <Label htmlFor={`option-${option}`}>{option}</Label>\n              </div>\n            ))}\n          </div>\n        );\n      case \"radio\":\n        return (\n          <RadioGroup\n            onValueChange={(value) => setInput(value)}\n            disabled={sending}\n          >\n            <div className=\"space-y-2\">\n              {currentField.options?.map((option) => (\n                <div key={option} className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value={option} id={`radio-${option}`} />\n                  <Label htmlFor={`radio-${option}`}>{option}</Label>\n                </div>\n              ))}\n            </div>\n          </RadioGroup>\n        );\n      case \"file\":\n        return (\n          <div\n            className={`absolute left-0 top-0 w-full -translate-y-[100%] rounded-lg border-2 border-dashed p-4 text-center dark:bg-black/80 md:top-1/2 ${\n              dragActive\n                ? \"border-primary bg-primary/5\"\n                : \"border-muted-foreground/20\"\n            }`}\n            onDragEnter={onDrag}\n            onDragOver={onDrag}\n            onDragLeave={onDrag}\n            onDrop={onDrag}\n          >\n            <Button\n              variant=\"outline\"\n              onClick={() => fileInputRef.current?.click()}\n              disabled={sending || uploadedFiles.length > 0}\n              className=\"mb-2\"\n            >\n              {fileUploading ? (\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              ) : (\n                <Upload className=\"mr-2 h-4 w-4\" />\n              )}\n              {uploadedFiles.length > 0\n                ? \"File Selected\"\n                : `${currentField.label}`}\n            </Button>\n            <Input\n              ref={fileInputRef}\n              type=\"file\"\n              className=\"hidden\"\n              onChange={(e) => onFileUpload(e.target.files)}\n              accept=\"image/*\"\n            />\n            {uploadedFiles.length > 0 ? (\n              <FilePreview\n                uploadedFiles={uploadedFiles}\n                onRemoveFile={(index) => {\n                  removeFile(index);\n                }}\n              />\n            ) : (\n              <p className=\"mt-1 text-sm text-muted-foreground\">\n                Drag and drop a file here or click to browse\n              </p>\n            )}\n          </div>\n        );\n      default:\n        return (\n          <Input\n            placeholder=\"Type your message...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" && !e.shiftKey) {\n                e.preventDefault();\n                onSend();\n              }\n            }}\n            disabled={sending}\n          />\n        );\n    }\n  };\n\n  return (\n    <footer\n      className={cn(\n        \"relative grid max-w-2xl place-items-center px-3 max-md:py-3 md:absolute md:bottom-0 md:left-0 md:right-0 md:mx-auto md:h-32 md:bg-background md:shadow-lg xl:max-w-4xl\",\n      )}\n    >\n      <div className=\"flex w-full items-end gap-x-2\">\n        <div className=\"flex-1\">\n          {currentBlock?.status === \"completed\" ? (\n            <Button onClick={createNewBlock} className=\"w-full\">\n              Create new block\n            </Button>\n          ) : (\n            renderFieldInput()\n          )}\n        </div>\n\n        {currentField.type !== \"file\" && !showSubmitButton && (\n          <Button\n            onClick={onSend}\n            disabled={isInputDisabled}\n            size=\"icon\"\n            className=\"h-10 w-10 flex-shrink-0 rounded-full\"\n          >\n            {sending ? (\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\n            ) : (\n              <Send className=\"h-4 w-4\" />\n            )}\n          </Button>\n        )}\n      </div>\n\n      {(currentField.type === \"file\" || showSubmitButton) && (\n        <Button\n          onClick={onSend}\n          disabled={\n            sending ||\n            !service ||\n            currentBlock?.status === \"completed\" ||\n            (currentField.type === \"file\" && uploadedFiles.length === 0)\n          }\n        >\n          {sending ? (\n            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n          ) : (\n            <Send className=\"mr-2 h-4 w-4\" />\n          )}\n          {showSubmitButton ? \"Submit\" : \"Upload and Send\"}\n        </Button>\n      )}\n    </footer>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1482, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/lib/constants.ts"],"sourcesContent":["export const FURNITURE_SERVICE = {\n  name: \"Furniture Resale Prediction\",\n  description: \"Get an accurate resale prediction for your furniture items\",\n  icon: \"🪑\",\n  questionnaire: [\n    {\n      name: \"photo\",\n      label: \"Upload a photo of the furniture\",\n      type: \"file\",\n      required: true,\n    },\n    {\n      name: \"itemType\",\n      label: \"What type of furniture is it?\",\n      type: \"dropdown\",\n      required: true,\n      options: [\n        \"Chair\",\n        \"Table\",\n        \"Sofa\",\n        \"Bed\",\n        \"Dresser\",\n        \"Desk\",\n        \"Bookshelf\",\n        \"Cabinet\",\n        \"Other\",\n      ],\n    },\n    {\n      name: \"material\",\n      label: \"What is the primary material?\",\n      type: \"dropdown\",\n      required: true,\n      options: [\n        \"Wood\",\n        \"Metal\",\n        \"Glass\",\n        \"Plastic\",\n        \"Leather\",\n        \"Fabric\",\n        \"Stone\",\n        \"Composite\",\n        \"Other\",\n      ],\n    },\n    {\n      name: \"age\",\n      label: \"When was the item purchased?\",\n      type: \"date\", // Changed to date for specificity\n      required: true,\n    },\n    {\n      name: \"condition\",\n      label: \"What condition is the item in?\",\n      type: \"dropdown\",\n      required: true,\n      options: [\n        \"Brand New\",\n        \"Excellent\",\n        \"Good\",\n        \"Fair\",\n        \"Poor\",\n        \"Needs Restoration\",\n      ],\n    },\n    {\n      name: \"brand\",\n      label: \"What is the brand or manufacturer (if known)?\",\n      type: \"text\",\n      required: false,\n    },\n    {\n      name: \"original_price\",\n      label: \"Original Purchase Price ($)\",\n      type: \"number\",\n      required: true,\n    },\n    {\n      name: \"planned_resale_year\",\n      label: \"In which year are you planning to sell this item?\",\n      type: \"dropdown\", // Added a new question for planned resale year\n      required: true,\n      options: [\"2025\", \"2026\", \"2027\", \"2028\", \"2029\", \"2030\", \"Later\"],\n    },\n    {\n      name: \"description\",\n      label: \"Please provide any additional details about the item\",\n      type: \"textarea\",\n      required: false,\n    },\n  ],\n};\n\nexport const JEWELRY_SERVICE = {\n  name: \"Jewelry Resale Prediction\",\n  description: \"Get accurate resale value predictions for your jewelry items\",\n  icon: \"💍\",\n  questionnaire: [\n    {\n      name: \"photo\",\n      label: \"Upload a photo of the jewelry\",\n      type: \"file\",\n      required: true,\n    },\n    {\n      name: \"jewelry_type\",\n      label: \"What type of jewelry is it?\",\n      type: \"dropdown\",\n      required: true,\n      options: [\"Ring\", \"Necklace\", \"Bracelet\", \"Earrings\", \"Watch\", \"Other\"],\n    },\n    {\n      name: \"brand\",\n      label: \"What is the brand or manufacturer (if known)?\",\n      type: \"text\",\n      required: false,\n    },\n    {\n      name: \"metal_type\",\n      label: \"What is the primary metal type?\",\n      type: \"dropdown\",\n      required: true,\n      options: [\n        \"Gold\",\n        \"Silver\",\n        \"Platinum\",\n        \"White Gold\",\n        \"Rose Gold\",\n        \"Stainless Steel\",\n        \"Other\",\n      ],\n    },\n    {\n      name: \"metal_weight\",\n      label: \"What is the approximate weight of the jewelry (in grams)?\",\n      type: \"number\",\n      required: true,\n    },\n    {\n      name: \"age\",\n      label: \"When was the item purchased?\",\n      type: \"date\",\n      required: true,\n    },\n    {\n      name: \"condition\",\n      label: \"What condition is the item in?\",\n      type: \"dropdown\",\n      required: true,\n      options: [\"Brand New\", \"Excellent\", \"Good\", \"Fair\", \"Poor\"],\n    },\n    {\n      name: \"original_price\",\n      label: \"Original Purchase Price ($)\",\n      type: \"number\",\n      required: true,\n      hint: \"Note: Resale value may depend on the current market price of gold.\",\n    },\n    {\n      name: \"planned_resale_year\",\n      label: \"In which year are you planning to sell this item?\",\n      type: \"dropdown\",\n      required: true,\n      options: [\"2025\", \"2026\", \"2027\", \"2028\", \"2029\", \"2030\", \"Later\"],\n    },\n    {\n      name: \"description\",\n      label: \"Please provide any additional details about the item\",\n      type: \"textarea\",\n      required: false,\n    },\n  ],\n};\n\nexport const SERVICES = [FURNITURE_SERVICE, JEWELRY_SERVICE];\n\nexport enum ApplicationEnvironment {\n  DEVELOPMENT = \"development\",\n  PRODUCTION = \"production\",\n}\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,oBAAoB;IAC/B,MAAM;IACN,aAAa;IACb,MAAM;IACN,eAAe;QACb;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;QACZ;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;YACV,SAAS;gBACP;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;YACV,SAAS;gBACP;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;QACZ;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;YACV,SAAS;gBACP;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;QACZ;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;QACZ;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;YACV,SAAS;gBAAC;gBAAQ;gBAAQ;gBAAQ;gBAAQ;gBAAQ;gBAAQ;aAAQ;QACpE;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;QACZ;KACD;AACH;AAEO,MAAM,kBAAkB;IAC7B,MAAM;IACN,aAAa;IACb,MAAM;IACN,eAAe;QACb;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;QACZ;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;YACV,SAAS;gBAAC;gBAAQ;gBAAY;gBAAY;gBAAY;gBAAS;aAAQ;QACzE;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;QACZ;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;YACV,SAAS;gBACP;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;QACZ;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;QACZ;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;YACV,SAAS;gBAAC;gBAAa;gBAAa;gBAAQ;gBAAQ;aAAO;QAC7D;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;YACV,MAAM;QACR;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;YACV,SAAS;gBAAC;gBAAQ;gBAAQ;gBAAQ;gBAAQ;gBAAQ;gBAAQ;aAAQ;QACpE;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;QACZ;KACD;AACH;AAEO,MAAM,WAAW;IAAC;IAAmB;CAAgB;;UAEhD;;;GAAA,2BAAA"}},
    {"offset": {"line": 1698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1703, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/lib/env.ts"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\nexport const env = createEnv({\n  server: {\n    NODE_ENV: z.enum([\"development\", \"production\"]),\n    NEXTAUTH_SECRET: z.string().min(1),\n    APP_BASE_URL: z.string().url(),\n    MONGODB_URI: z.string().url(),\n    GOOGLE_CLIENT_ID: z.string().min(1),\n    GOOGLE_CLIENT_SECRET: z.string().min(1),\n    GEMINI_API_KEY: z.string().min(1),\n    CLOUDINARY_CLOUD_NAME: z.string().min(1),\n    CLOUDINARY_API_KEY: z.string().min(1),\n    CLOUDINARY_API_SECRET: z.string().min(1),\n    NEXTAUTH_URL: z.string().url(),\n    DATABASE_URL: z.string().url(),\n  },\n  client: {\n    NEXT_PUBLIC_NODE_ENV: z.enum([\"development\", \"production\"]),\n    NEXT_PUBLIC_APP_URL: z.string().url(),\n  },\n  runtimeEnv: {\n    NODE_ENV: process.env.NODE_ENV,\n    NEXTAUTH_SECRET: process.env.NEXTAUTH_SECRET,\n    NEXTAUTH_URL: process.env.NEXTAUTH_URL,\n    APP_BASE_URL: process.env.APP_BASE_URL,\n    MONGODB_URI: process.env.MONGODB_URI,\n    GOOGLE_CLIENT_ID: process.env.GOOGLE_CLIENT_ID,\n    GOOGLE_CLIENT_SECRET: process.env.GOOGLE_CLIENT_SECRET,\n    GEMINI_API_KEY: process.env.GEMINI_API_KEY,\n    CLOUDINARY_CLOUD_NAME: process.env.CLOUDINARY_CLOUD_NAME,\n    CLOUDINARY_API_KEY: process.env.CLOUDINARY_API_KEY,\n    CLOUDINARY_API_SECRET: process.env.CLOUDINARY_API_SECRET,\n    NEXT_PUBLIC_NODE_ENV: process.env.NEXT_PUBLIC_NODE_ENV,\n    NEXT_PUBLIC_APP_URL: process.env.NEXT_PUBLIC_APP_URL,\n    DATABASE_URL: process.env.DATABASE_URL,\n  },\n});\n"],"names":[],"mappings":";;;;;;;;AAGO,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,QAAQ;QACN,UAAU,kKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;YAAC;YAAe;SAAa;QAC9C,iBAAiB,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QAChC,cAAc,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,aAAa,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC3B,kBAAkB,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QACjC,sBAAsB,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QACrC,gBAAgB,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QAC/B,uBAAuB,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QACtC,oBAAoB,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QACnC,uBAAuB,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QACtC,cAAc,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,cAAc,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;IAC9B;IACA,QAAQ;QACN,sBAAsB,kKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;YAAC;YAAe;SAAa;QAC1D,qBAAqB,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;IACrC;IACA,YAAY;QACV,QAAQ;QACR,iBAAiB,QAAQ,GAAG,CAAC,eAAe;QAC5C,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,aAAa,QAAQ,GAAG,CAAC,WAAW;QACpC,kBAAkB,QAAQ,GAAG,CAAC,gBAAgB;QAC9C,sBAAsB,QAAQ,GAAG,CAAC,oBAAoB;QACtD,gBAAgB,QAAQ,GAAG,CAAC,cAAc;QAC1C,uBAAuB,QAAQ,GAAG,CAAC,qBAAqB;QACxD,oBAAoB,QAAQ,GAAG,CAAC,kBAAkB;QAClD,uBAAuB,QAAQ,GAAG,CAAC,qBAAqB;QACxD,oBAAoB;QACpB,mBAAmB;QACnB,cAAc,QAAQ,GAAG,CAAC,YAAY;IACxC;AACF"}},
    {"offset": {"line": 1753, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1758, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/lib/helpers/errors/client.ts"],"sourcesContent":["import { ApplicationEnvironment } from \"@/lib/constants\";\nimport { env } from \"@/lib/env\";\nimport { AxiosError } from \"axios\";\n\nimport { toast } from \"sonner\";\n\ninterface AxiosErrorResponse {\n  success: boolean;\n  message: string;\n}\n\nconst ClientSideErrorHandler = (error: unknown) => {\n  // Log the error for debugging purposes\n  if (env.NEXT_PUBLIC_NODE_ENV === ApplicationEnvironment.DEVELOPMENT) {\n    console.log(\"Client-side error:\", error);\n  }\n\n  if (error instanceof AxiosError) {\n    // Handle Axios errors including network errors and no response received\n    if (error.response) {\n      // Error from server with a response payload\n      const response: AxiosErrorResponse = error.response.data;\n      toast.error(response.message || \"An error occurred on the server\");\n    } else if (error.request) {\n      // Request made but no response received\n      toast.error(\"No response received from the server\");\n    } else {\n      // Something happened in setting up the request\n      toast.error(\"Network error occurred\");\n    }\n  } else if (typeof error === \"string\") {\n    // Handle errors as simple strings\n    toast.error(error);\n  } else if (error instanceof Error) {\n    // Handle generic error objects not caught by AxiosError\n    toast.error(error.message || \"An unexpected error occurred\");\n  } else {\n    // Fallback error message for any other cases\n    toast.error(\"An unexpected error occurred\");\n  }\n};\n\nexport default ClientSideErrorHandler;\n"],"names":[],"mappings":";;;;;;;;;;;;AAWA,MAAM,yBAAyB,CAAC;IAC9B,uCAAuC;IACvC,IAAI,iHAAA,CAAA,MAAG,CAAC,oBAAoB,KAAK,uHAAA,CAAA,yBAAsB,CAAC,WAAW,EAAE;QACnE,QAAQ,GAAG,CAAC,sBAAsB;IACpC;IAEA,IAAI,iBAAiB,8IAAA,CAAA,aAAU,EAAE;QAC/B,wEAAwE;QACxE,IAAI,MAAM,QAAQ,EAAE;YAClB,4CAA4C;YAC5C,MAAM,WAA+B,MAAM,QAAQ,CAAC,IAAI;YACxD,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC,SAAS,OAAO,IAAI;QAClC,OAAO,IAAI,MAAM,OAAO,EAAE;YACxB,wCAAwC;YACxC,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACd,OAAO;YACL,+CAA+C;YAC/C,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACd;IACF,OAAO,IAAI,OAAO,UAAU,UAAU;QACpC,kCAAkC;QAClC,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;IACd,OAAO,IAAI,iBAAiB,OAAO;QACjC,wDAAwD;QACxD,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO,IAAI;IAC/B,OAAO;QACL,6CAA6C;QAC7C,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;IACd;AACF;uCAEe"}},
    {"offset": {"line": 1800, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1805, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAIA,MAAM,qBAAO,gNAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,wPAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,gNAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,wPAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,gNAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,wPAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,gNAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,wPAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,gNAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,wPAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,gNAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,wPAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 1881, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1886, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/common/prediction-display.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport type { Prediction } from \"@/lib/types\";\nimport { BarChart3, Calendar, DollarSign, TrendingUp } from \"lucide-react\";\nimport Image from \"next/image\";\nimport {\n  CartesianGrid,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  type TooltipProps,\n} from \"recharts\";\n\n// Component to display prediction data\nconst PredictionDisplay = ({ prediction }: { prediction: Prediction }) => {\n  if (!prediction) {\n    console.log(\"No prediction data available\");\n    return null;\n  }\n\n  // Prepare data for the resale chart\n  const chartData = Object.entries(prediction.resale_in_year || {}).map(\n    ([year, value]) => {\n      // Extract numeric value from currency string (e.g., \"$10,000\" -> 10000)\n      const numericValue = Number.parseFloat(value.replace(/[^0-9.]/g, \"\"));\n      return {\n        year,\n        value: numericValue,\n        displayValue: value, // Keep the original formatted value for display\n      };\n    },\n  );\n\n  // Custom tooltip for the chart\n  const CustomTooltip = ({\n    active,\n    payload,\n    label,\n  }: TooltipProps<number, string>) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"rounded-lg border bg-background p-2 shadow-md\">\n          <div className=\"flex items-center\">\n            <Calendar className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n            <span className=\"font-medium\">{data.year}</span>\n          </div>\n          <div className=\"mt-1 text-lg font-bold text-primary\">\n            {data.displayValue}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"mt-6 rounded-lg border border-primary/20 p-4\">\n      <div className=\"mb-4 flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold text-primary\">\n          <BarChart3 className=\"mr-2 inline-block h-5 w-5\" />\n          Prediction Results\n        </h3>\n      </div>\n\n      {/* Top row: Image and Price */}\n      <div className=\"mb-6 grid grid-cols-1 gap-4 md:grid-cols-2\">\n        {/* Left column with image */}\n        <div className=\"overflow-hidden rounded-lg border bg-card shadow-sm\">\n          {prediction.image ? (\n            <Image\n              src={prediction.image || \"/placeholder.svg\"}\n              alt={prediction.chat_name || \"Prediction image\"}\n              width={400}\n              height={300}\n              className=\"h-auto w-full object-cover\"\n              unoptimized\n            />\n          ) : (\n            <div className=\"flex h-[200px] items-center justify-center bg-muted/20\">\n              <span className=\"text-muted-foreground\">No image available</span>\n            </div>\n          )}\n        </div>\n\n        {/* Right column with price */}\n        <Card className=\"overflow-hidden\">\n          <div className=\"absolute inset-0 bg-gradient-to-br from-primary/10 to-primary/5 opacity-50\"></div>\n          <CardHeader className=\"relative pb-2\">\n            <CardTitle className=\"flex items-center text-base\">\n              <DollarSign className=\"mr-1 h-4 w-4\" />\n              Estimated Price\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"relative\">\n            <p className=\"text-3xl font-bold text-primary\">\n              {prediction.estimated_price || \"Not available\"}\n            </p>\n\n            {prediction.price_variation &&\n              prediction.price_variation.length > 0 && (\n                <div className=\"mt-4 rounded-md bg-background/50 p-3 text-sm\">\n                  <p className=\"font-medium\">Price range:</p>\n                  <ul className=\"mt-2 space-y-1\">\n                    {prediction.price_variation.map((variation, index) => (\n                      <li key={index} className=\"flex items-center\">\n                        <span className=\"mr-2 h-1.5 w-1.5 rounded-full bg-primary\"></span>\n                        {variation}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Bottom row: Chart and User Inputs */}\n      <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n        {/* Resale Value Chart */}\n        {chartData.length > 0 && (\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"flex items-center text-base\">\n                <TrendingUp className=\"mr-1 h-4 w-4\" />\n                Resale Value Projection\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"mt-1 h-80\">\n              {/* Ensure the parent container has a defined height */}\n              <div className=\"relative h-full w-full\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart\n                    data={chartData}\n                    margin={{ top: 10, right: 10, left: 0, bottom: 10 }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" opacity={0.3} />\n                    <XAxis\n                      dataKey=\"year\"\n                      tick={{ fontSize: 12 }}\n                      tickLine={{ stroke: \"rgba(255, 255, 255, 0.2)\" }}\n                      axisLine={{ stroke: \"rgba(255, 255, 255, 0.2)\" }}\n                    />\n                    <YAxis\n                      tick={{ fontSize: 12 }}\n                      tickFormatter={(value) => `$${value.toLocaleString()}`}\n                      tickLine={{ stroke: \"rgba(255, 255, 255, 0.2)\" }}\n                      axisLine={{ stroke: \"rgba(255, 255, 255, 0.2)\" }}\n                    />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Line\n                      type=\"monotone\"\n                      dataKey=\"value\"\n                      stroke=\"hsl(var(--primary))\"\n                      strokeWidth={2}\n                      dot={{ fill: \"hsl(var(--primary))\", r: 4 }}\n                      activeDot={{ r: 6, fill: \"hsl(var(--primary))\" }}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* User Inputs */}\n        {prediction.user_inputs &&\n          Object.keys(prediction.user_inputs).length > 0 && (\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-base\">Input Parameters</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  {Object.entries(prediction.user_inputs)\n                    .filter(\n                      ([key, value]) =>\n                        value !== null &&\n                        value !== undefined &&\n                        value !== \"\" &&\n                        key !== \"image_url\" &&\n                        key !== \"additional_details\",\n                    )\n                    .map(([key, value]) => (\n                      <div key={key} className=\"rounded-md bg-muted/30 p-2\">\n                        <p className=\"text-xs text-muted-foreground\">\n                          {key.replace(/_/g, \" \")}\n                        </p>\n                        <p className=\"mt-1 truncate font-medium\">\n                          {typeof value === \"boolean\"\n                            ? value\n                              ? \"Yes\"\n                              : \"No\"\n                            : String(value)}\n                        </p>\n                      </div>\n                    ))}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default PredictionDisplay;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;;AAiBA,uCAAuC;AACvC,MAAM,oBAAoB,CAAC,EAAE,UAAU,EAA8B;IACnE,IAAI,CAAC,YAAY;QACf,QAAQ,GAAG,CAAC;QACZ,OAAO;IACT;IAEA,oCAAoC;IACpC,MAAM,YAAY,OAAO,OAAO,CAAC,WAAW,cAAc,IAAI,CAAC,GAAG,GAAG,CACnE,CAAC,CAAC,MAAM,MAAM;QACZ,wEAAwE;QACxE,MAAM,eAAe,OAAO,UAAU,CAAC,MAAM,OAAO,CAAC,YAAY;QACjE,OAAO;YACL;YACA,OAAO;YACP,cAAc;QAChB;IACF;IAGF,+BAA+B;IAC/B,MAAM,gBAAgB,CAAC,EACrB,MAAM,EACN,OAAO,EACP,KAAK,EACwB;QAC7B,IAAI,UAAU,WAAW,QAAQ,MAAM,EAAE;YACvC,MAAM,OAAO,OAAO,CAAC,EAAE,CAAC,OAAO;YAC/B,qBACE,wPAAC;gBAAI,WAAU;;kCACb,wPAAC;wBAAI,WAAU;;0CACb,wPAAC,0MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,wPAAC;gCAAK,WAAU;0CAAe,KAAK,IAAI;;;;;;;;;;;;kCAE1C,wPAAC;wBAAI,WAAU;kCACZ,KAAK,YAAY;;;;;;;;;;;;QAI1B;QACA,OAAO;IACT;IAEA,qBACE,wPAAC;QAAI,WAAU;;0BACb,wPAAC;gBAAI,WAAU;0BACb,cAAA,wPAAC;oBAAG,WAAU;;sCACZ,wPAAC,oNAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;wBAA8B;;;;;;;;;;;;0BAMvD,wPAAC;gBAAI,WAAU;;kCAEb,wPAAC;wBAAI,WAAU;kCACZ,WAAW,KAAK,iBACf,wPAAC,6HAAA,CAAA,UAAK;4BACJ,KAAK,WAAW,KAAK,IAAI;4BACzB,KAAK,WAAW,SAAS,IAAI;4BAC7B,OAAO;4BACP,QAAQ;4BACR,WAAU;4BACV,WAAW;;;;;iDAGb,wPAAC;4BAAI,WAAU;sCACb,cAAA,wPAAC;gCAAK,WAAU;0CAAwB;;;;;;;;;;;;;;;;kCAM9C,wPAAC,gIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,wPAAC;gCAAI,WAAU;;;;;;0CACf,wPAAC,gIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,wPAAC,gIAAA,CAAA,YAAS;oCAAC,WAAU;;sDACnB,wPAAC,kNAAA,CAAA,aAAU;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;0CAI3C,wPAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;;kDACrB,wPAAC;wCAAE,WAAU;kDACV,WAAW,eAAe,IAAI;;;;;;oCAGhC,WAAW,eAAe,IACzB,WAAW,eAAe,CAAC,MAAM,GAAG,mBAClC,wPAAC;wCAAI,WAAU;;0DACb,wPAAC;gDAAE,WAAU;0DAAc;;;;;;0DAC3B,wPAAC;gDAAG,WAAU;0DACX,WAAW,eAAe,CAAC,GAAG,CAAC,CAAC,WAAW,sBAC1C,wPAAC;wDAAe,WAAU;;0EACxB,wPAAC;gEAAK,WAAU;;;;;;4DACf;;uDAFM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAazB,wPAAC;gBAAI,WAAU;;oBAEZ,UAAU,MAAM,GAAG,mBAClB,wPAAC,gIAAA,CAAA,OAAI;;0CACH,wPAAC,gIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,wPAAC,gIAAA,CAAA,YAAS;oCAAC,WAAU;;sDACnB,wPAAC,kNAAA,CAAA,aAAU;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;0CAI3C,wPAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;0CAErB,cAAA,wPAAC;oCAAI,WAAU;8CACb,cAAA,wPAAC,mKAAA,CAAA,sBAAmB;wCAAC,OAAM;wCAAO,QAAO;kDACvC,cAAA,wPAAC,qJAAA,CAAA,YAAS;4CACR,MAAM;4CACN,QAAQ;gDAAE,KAAK;gDAAI,OAAO;gDAAI,MAAM;gDAAG,QAAQ;4CAAG;;8DAElD,wPAAC,6JAAA,CAAA,gBAAa;oDAAC,iBAAgB;oDAAM,SAAS;;;;;;8DAC9C,wPAAC,qJAAA,CAAA,QAAK;oDACJ,SAAQ;oDACR,MAAM;wDAAE,UAAU;oDAAG;oDACrB,UAAU;wDAAE,QAAQ;oDAA2B;oDAC/C,UAAU;wDAAE,QAAQ;oDAA2B;;;;;;8DAEjD,wPAAC,qJAAA,CAAA,QAAK;oDACJ,MAAM;wDAAE,UAAU;oDAAG;oDACrB,eAAe,CAAC,QAAU,CAAC,CAAC,EAAE,MAAM,cAAc,GAAG,CAAC;oDACtD,UAAU;wDAAE,QAAQ;oDAA2B;oDAC/C,UAAU;wDAAE,QAAQ;oDAA2B;;;;;;8DAEjD,wPAAC,uJAAA,CAAA,UAAO;oDAAC,uBAAS,wPAAC;;;;;;;;;;8DACnB,wPAAC,oJAAA,CAAA,OAAI;oDACH,MAAK;oDACL,SAAQ;oDACR,QAAO;oDACP,aAAa;oDACb,KAAK;wDAAE,MAAM;wDAAuB,GAAG;oDAAE;oDACzC,WAAW;wDAAE,GAAG;wDAAG,MAAM;oDAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAU5D,WAAW,WAAW,IACrB,OAAO,IAAI,CAAC,WAAW,WAAW,EAAE,MAAM,GAAG,mBAC3C,wPAAC,gIAAA,CAAA,OAAI;;0CACH,wPAAC,gIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,wPAAC,gIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAY;;;;;;;;;;;0CAEnC,wPAAC,gIAAA,CAAA,cAAW;0CACV,cAAA,wPAAC;oCAAI,WAAU;8CACZ,OAAO,OAAO,CAAC,WAAW,WAAW,EACnC,MAAM,CACL,CAAC,CAAC,KAAK,MAAM,GACX,UAAU,QACV,UAAU,aACV,UAAU,MACV,QAAQ,eACR,QAAQ,sBAEX,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,iBAChB,wPAAC;4CAAc,WAAU;;8DACvB,wPAAC;oDAAE,WAAU;8DACV,IAAI,OAAO,CAAC,MAAM;;;;;;8DAErB,wPAAC;oDAAE,WAAU;8DACV,OAAO,UAAU,YACd,QACE,QACA,OACF,OAAO;;;;;;;2CATL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBhC;uCAEe"}},
    {"offset": {"line": 2357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2362, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/pages/chat/message-list.tsx"],"sourcesContent":["\"use client\";\n\nimport type React from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport ClientSideErrorHandler from \"@/lib/helpers/errors/client\";\nimport type { Block, Message, Service, UploadedFile } from \"@/lib/types\";\n\nimport PredictionDisplay from \"@/components/common/prediction-display\";\nimport { ArrowDown, Pin, PinOff, Sparkles, Upload } from \"lucide-react\";\nimport Image from \"next/image\";\nimport { useEffect, useRef, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\ntype MessageListProps = {\n  messages: Message[];\n  service: Service | null;\n  blocks?: Block[];\n  currentBlock: Block | null;\n  messagesEndRef: React.RefObject<HTMLDivElement>;\n  services: Service[];\n  onSelectService: (serviceId: string) => void;\n  files: UploadedFile[];\n};\n\nexport default function MessageList({\n  messages,\n  service,\n  blocks = [],\n  currentBlock,\n  messagesEndRef,\n  services,\n  onSelectService,\n  files,\n}: MessageListProps) {\n  // const messagesEndRef = useRef<HTMLDivElement>(null);\n  const currentBlockRef = useRef<HTMLDivElement>(null);\n  const [localBlocks, setLocalBlocks] = useState<Block[]>(blocks);\n  const [prevCurrentBlockId, setPrevCurrentBlockId] = useState<string | null>(\n    null,\n  );\n\n  // Update local blocks when blocks prop changes\n  useEffect(() => {\n    setLocalBlocks(blocks);\n  }, [blocks]);\n\n  // Update local blocks when messages change\n  useEffect(() => {\n    if (currentBlock && messages.length > 0) {\n      // Update the current block in the local blocks state\n      setLocalBlocks((prevBlocks) => {\n        // Check if the current block exists in prevBlocks\n        const blockExists = prevBlocks.some(\n          (block) => block.id === currentBlock.id,\n        );\n\n        if (blockExists) {\n          // Update existing block\n          return prevBlocks.map((block) =>\n            block.id === currentBlock.id ? { ...block, messages } : block,\n          );\n        } else {\n          // Add the new block if it doesn't exist\n          return [...prevBlocks, { ...currentBlock, messages }];\n        }\n      });\n    }\n  }, [messages, currentBlock]);\n\n  // Scroll to current block when it changes\n  useEffect(() => {\n    // Only scroll if the current block ID has changed\n    if (currentBlock?.id !== prevCurrentBlockId) {\n      if (currentBlockRef.current) {\n        // Use a small timeout to ensure the DOM has updated\n        setTimeout(() => {\n          currentBlockRef.current?.scrollIntoView({ behavior: \"smooth\" });\n        }, 100);\n      }\n      setPrevCurrentBlockId(currentBlock?.id || null);\n    }\n  }, [currentBlock, prevCurrentBlockId]);\n\n  // Scroll to bottom of messages whenever messages change\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [messages, messagesEndRef]);\n\n  const scrollToCurrentBlock = () => {\n    if (currentBlockRef.current) {\n      currentBlockRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  const pinBlock = async (blockId: string, isPinned: boolean) => {\n    try {\n      const response = await fetch(`/api/blocks/${blockId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ isPinned }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to update block\");\n      }\n\n      // Update local blocks state to reflect the pin status change\n      setLocalBlocks((prevBlocks) =>\n        prevBlocks.map((block) =>\n          block.id === blockId ? { ...block, isPinned } : block,\n        ),\n      );\n    } catch (error) {\n      ClientSideErrorHandler(error);\n    }\n  };\n\n  if (!service) {\n    return (\n      <div className=\"flex h-full flex-col items-center justify-center px-6 text-center\">\n        <Sparkles size={48} className=\"mb-4 text-primary\" />\n        <h2 className=\"mb-2 text-2xl font-bold\">Welcome to Service Chat</h2>\n        <p className=\"max-w-md text-muted-foreground\">\n          Select a service from the sidebar to start a new chat or continue an\n          existing one.\n        </p>\n\n        <div className=\"mx-auto mt-6 flex max-w-md gap-x-2 overflow-x-scroll scrollbar-hide max-sm:flex-col\">\n          {services.map((s) => (\n            <Button\n              key={s.id}\n              variant={\"ghost\"}\n              className=\"flex h-40 flex-col items-center justify-center text-sm\"\n              onClick={() => onSelectService(s.id)}\n            >\n              {s.icon ? (\n                <span className=\"mr-2 text-7xl\">{s.icon}</span>\n              ) : (\n                <Sparkles size={16} className=\"mr-2\" />\n              )}\n              {s.name}\n            </Button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  // If we have blocks, display all of them\n  if (localBlocks.length > 0) {\n    return (\n      <div className=\"relative mx-auto max-w-2xl flex-1 xl:max-w-4xl\">\n        <ScrollArea className=\"p-4 max-md:h-[75svh] md:h-[70svh]\">\n          <div className=\"space-y-8\">\n            {localBlocks\n              .sort(\n                (a, b) =>\n                  new Date(a.createdAt).getTime() -\n                  new Date(b.createdAt).getTime(),\n              )\n              .map((block, blockIndex) => (\n                <section\n                  key={block.id}\n                  className={`relative rounded-lg border p-4 ${\n                    block.id === currentBlock?.id\n                      ? \"border-primary\"\n                      : \"border-muted\"\n                  }`}\n                  ref={\n                    block.id === currentBlock?.id ? currentBlockRef : undefined\n                  }\n                  id={`block-${block.id}`}\n                >\n                  <header className=\"sticky left-0 top-2 z-10 mb-4 flex w-full flex-col items-center gap-4 rounded-md bg-secondary-foreground p-2 text-white shadow-lg dark:bg-secondary\">\n                    <section className=\"flex w-full items-center justify-between gap-2\">\n                      <h3 className=\"text-sm font-medium\">{block.title}</h3>\n                      <div className=\"flex items-center gap-3 text-xs text-muted-foreground\">\n                        <span>\n                          {block.status === \"completed\" && \"Completed\"}\n                        </span>\n                        <span>\n                          {block.status === \"in_progress\" && \"Active\"}\n                        </span>\n                        {block.isPinned ? (\n                          <Button\n                            variant={\"ghost\"}\n                            title=\"Unpin\"\n                            className=\"text-xs\"\n                            onClick={() => pinBlock(block.id, false)}\n                          >\n                            <PinOff className=\"h-4 w-4\" /> Remove From Saved\n                          </Button>\n                        ) : (\n                          <Button\n                            variant={\"ghost\"}\n                            title=\"Pin\"\n                            className=\"text-xs\"\n                            onClick={() => pinBlock(block.id, true)}\n                          >\n                            <Pin className=\"h-4 w-4\" /> Save\n                          </Button>\n                        )}\n                      </div>\n                    </section>\n                  </header>\n\n                  <main className=\"mt-16 space-y-4\">\n                    {/* Selected Image Section */}\n                    {block.status === \"completed\" &&\n                      block.prediction?.image && (\n                        <div className=\"mb-4\">\n                          <Image\n                            src={block.prediction.image || \"/placeholder.svg\"}\n                            alt={block.prediction.chat_name || \"Selected Image\"}\n                            className=\"h-auto max-h-[400px] w-full rounded-md object-contain\"\n                            height={200}\n                            width={350}\n                            unoptimized\n                          />\n                        </div>\n                      )}\n                    {block.status === \"in_progress\" &&\n                      files.length > 0 &&\n                      currentBlock?.id === block.id && (\n                        <div className=\"mb-4\">\n                          <Image\n                            src={files?.[0]?.url || \"/placeholder.svg\"}\n                            alt={files?.[0]?.name || \"Selected Image\"}\n                            className=\"h-auto max-h-[400px] w-full rounded-md object-contain\"\n                            height={200}\n                            width={350}\n                            unoptimized\n                          />\n                        </div>\n                      )}\n                    {(block.messages || [])\n                      .filter((m) => m.role !== \"system\")\n                      .map((message, index) => (\n                        <div\n                          key={`message-${blockIndex}-${index}`}\n                          className={`flex ${message.role === \"user\" ? \"justify-end\" : \"justify-start\"}`}\n                        >\n                          <div\n                            className={`max-w-[80%] rounded-lg p-3 ${\n                              message.role === \"user\"\n                                ? \"bg-primary text-primary-foreground\"\n                                : \"bg-secondary-foreground dark:bg-muted/50\"\n                            }`}\n                          >\n                            {message.role === \"assistant\" ? (\n                              <div className=\"prose prose-invert max-w-none\">\n                                <ReactMarkdown>{message.content}</ReactMarkdown>\n                              </div>\n                            ) : (\n                              <div className=\"whitespace-pre-wrap\">\n                                {message.content}\n                              </div>\n                            )}\n\n                            {/* Display file if present */}\n                            {message.fileData &&\n                              message.fileData.type.startsWith(\"image/\") && (\n                                <div className=\"mt-2 overflow-hidden rounded-md\">\n                                  <Image\n                                    src={\n                                      message.fileData.url || \"/placeholder.svg\"\n                                    }\n                                    alt={message.fileData.name}\n                                    className=\"h-auto max-h-[200px] max-w-full object-contain\"\n                                    height={200}\n                                    width={350}\n                                    unoptimized\n                                  />\n                                </div>\n                              )}\n\n                            {/* Display non-image file */}\n                            {message.fileData &&\n                              !message.fileData.type.startsWith(\"image/\") && (\n                                <div className=\"mt-2 flex items-center rounded bg-background/50 p-2\">\n                                  <Upload className=\"mr-2 h-4 w-4\" />\n                                  <span className=\"truncate text-sm\">\n                                    {message.fileData.name}\n                                  </span>\n                                </div>\n                              )}\n                          </div>\n                        </div>\n                      ))}\n                  </main>\n                  {/* Display prediction if present */}\n                  {block.prediction && (\n                    <footer className=\"relative\">\n                      <PredictionDisplay prediction={block.prediction} />\n                    </footer>\n                  )}\n                </section>\n              ))}\n          </div>\n          <div ref={messagesEndRef} className=\"pb-20\" />{\" \"}\n          {/* Added padding at the bottom for better scrolling */}\n        </ScrollArea>\n\n        {/* Scroll to current block button */}\n        {localBlocks.length > 1 && currentBlock && (\n          <Button\n            onClick={scrollToCurrentBlock}\n            className=\"absolute bottom-4 right-4 rounded-full shadow-md md:bottom-16\"\n            size=\"icon\"\n          >\n            <ArrowDown className=\"h-4 w-4\" />\n          </Button>\n        )}\n      </div>\n    );\n  }\n\n  // Fallback for when there are no blocks but we have messages\n  if (messages.length > 0) {\n    return (\n      <div className=\"relative flex-1\">\n        <ScrollArea className=\"h-[75svh] p-4\">\n          <div className=\"space-y-4\">\n            {messages\n              .filter((m) => m.role !== \"system\")\n              .map((message, index) => (\n                <div\n                  key={`message-${index}`}\n                  className={`flex ${message.role === \"user\" ? \"justify-end\" : \"justify-start\"}`}\n                >\n                  <div\n                    className={`max-w-[80%] rounded-lg p-3 ${\n                      message.role === \"user\"\n                        ? \"bg-primary text-primary-foreground\"\n                        : \"bg-muted\"\n                    }`}\n                  >\n                    {message.role === \"assistant\" ? (\n                      <div className=\"prose prose-invert max-w-none\">\n                        <ReactMarkdown>{message.content}</ReactMarkdown>\n                      </div>\n                    ) : (\n                      <div className=\"whitespace-pre-wrap\">\n                        {message.content}\n                      </div>\n                    )}\n\n                    {/* Display file if present */}\n                    {message.fileData &&\n                      message.fileData.type.startsWith(\"image/\") && (\n                        <div className=\"mt-2 overflow-hidden rounded-md\">\n                          <Image\n                            src={message.fileData.url || \"/placeholder.svg\"}\n                            alt={message.fileData.name}\n                            className=\"h-auto max-h-[200px] max-w-full object-contain\"\n                            height={200}\n                            width={350}\n                            unoptimized\n                          />\n                        </div>\n                      )}\n\n                    {/* Display non-image file */}\n                    {message.fileData &&\n                      !message.fileData.type.startsWith(\"image/\") && (\n                        <div className=\"mt-2 flex items-center rounded bg-background/50 p-2\">\n                          <Upload className=\"mr-2 h-4 w-4\" />\n                          <span className=\"truncate text-sm\">\n                            {message.fileData.name}\n                          </span>\n                        </div>\n                      )}\n                  </div>\n                </div>\n              ))}\n          </div>\n          <div ref={messagesEndRef} className=\"pb-20\" />\n        </ScrollArea>\n      </div>\n    );\n  }\n\n  // Empty state\n  return (\n    <div className=\"flex h-full flex-col items-center justify-center text-center\">\n      <Sparkles size={48} className=\"mb-4 text-primary\" />\n      <h2 className=\"mb-2 text-2xl font-bold\">Start a New Conversation</h2>\n      <p className=\"max-w-md text-muted-foreground\">\n        Begin by sending a message or question related to {service.name}.\n      </p>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3001, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3006, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;;AAQA,MAAM,SAAS,mKAAgB,IAAI;AAEnC,MAAM,gBAAgB,mKAAgB,OAAO;AAE7C,MAAM,eAAe,mKAAgB,MAAM;AAE3C,MAAM,cAAc,mKAAgB,KAAK;AAEzC,MAAM,8BAAgB,gNAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,wPAAC,mKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,gNAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,wPAAC;;0BACC,wPAAC;;;;;0BACD,wPAAC,mKAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,wPAAC,mKAAgB,KAAK;wBAAC,WAAU;;0CAC/B,wPAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,wPAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,wPAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,wPAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,gNAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,wPAAC,mKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,gNAAM,UAAU,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,wPAAC,mKAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,mKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 3133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3138, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/pages/chat/sidebar.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport ClientSideErrorHandler from \"@/lib/helpers/errors/client\";\nimport type { Block, Chat, Service } from \"@/lib/types\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  MessageSquare,\n  MoreVertical,\n  Plus,\n  Search,\n  SidebarIcon,\n  Sparkles,\n  User,\n} from \"lucide-react\";\nimport { useSession } from \"next-auth/react\";\nimport { useState } from \"react\";\n\ntype SidebarProps = {\n  isOpen: boolean;\n  onOpenChange: () => void;\n  services: Service[];\n  chats: Chat[];\n  setChats: (chats: any) => void;\n  chatsByDate: Record<string, Chat[]>;\n  setChatsByDate: (chatsByDate: any) => void;\n  currentService: Service | null;\n  currentChatId: string | null;\n  currentBlock: { id: string; status?: string } | null;\n  blocks: Block[];\n  onSelectChat: (chat: Chat) => void;\n  onSelectBlock: (block: Block) => void;\n  onNewChat: (serviceId: string) => void;\n};\n\nexport default function Sidebar({\n  isOpen,\n  onOpenChange,\n  services,\n  chatsByDate,\n  setChatsByDate,\n  currentService,\n  currentChatId,\n  // currentBlock,\n  // blocks,\n  // onSelectService,\n  onSelectChat,\n  // onSelectBlock,\n  onNewChat,\n}: SidebarProps) {\n  const { data: session } = useSession();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const [isRenameDialogOpen, setIsRenameDialogOpen] = useState(false);\n  const [chatToRename, setChatToRename] = useState<Chat | null>(null);\n  const [newChatTitle, setNewChatTitle] = useState(\"\");\n\n  // Filter chats by search query\n  const filteredChatsByDate = () => {\n    if (!searchQuery.trim()) return chatsByDate;\n\n    const filtered: Record<string, Chat[]> = {};\n\n    Object.entries(chatsByDate).forEach(([date, chats]) => {\n      const matchingChats = chats.filter((chat) =>\n        chat.title.toLowerCase().includes(searchQuery.toLowerCase()),\n      );\n\n      if (matchingChats.length > 0) {\n        filtered[date] = matchingChats;\n      }\n    });\n\n    return filtered;\n  };\n\n  const handleRenameChat = async () => {\n    if (!chatToRename) return;\n\n    try {\n      const response = await fetch(`/api/chats/${chatToRename.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ title: newChatTitle }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to rename chat\");\n      }\n\n      // Update chat title in state\n      setChatsByDate((prev: any) => {\n        const updatedChatsByDate = { ...prev };\n\n        // Update the chat title in all date categories\n        Object.keys(updatedChatsByDate).forEach((date) => {\n          updatedChatsByDate[date] = updatedChatsByDate[date].map(\n            (chat: Chat) =>\n              chat.id === chatToRename.id\n                ? { ...chat, title: newChatTitle }\n                : chat,\n          );\n        });\n\n        return updatedChatsByDate;\n      });\n\n      // Close the dialog and reset state\n      setIsRenameDialogOpen(false);\n      setChatToRename(null);\n      setNewChatTitle(\"\");\n    } catch (error) {\n      ClientSideErrorHandler(error);\n    }\n  };\n  return (\n    <aside\n      className={cn(\n        \"flex w-64 flex-col border-r bg-muted/10 transition-all duration-200\",\n        isOpen\n          ? \"w-screen translate-x-0 md:w-[30%] lg:w-[25%] xl:w-[20%]\"\n          : \"w-0 -translate-x-48\",\n      )}\n    >\n      {/* New Chat Button */}\n      <div className=\"border-b p-3.5\">\n        <Button\n          onClick={() => onNewChat(currentService?.id || \"\")}\n          className=\"flex w-full items-center gap-2\"\n          variant=\"outline\"\n          disabled={!currentService}\n        >\n          <Plus size={16} />\n          <span>New Chat</span>\n        </Button>\n      </div>\n\n      {/* Services Section */}\n      {/* <div className=\"border-b p-3\">\n        <h3 className=\"mb-2 text-sm font-medium\">Services</h3>\n        <ScrollArea className=\"h-[120px]\">\n          <div className=\"space-y-1\">\n            {services.map((s) => (\n              <Button\n                key={s.id}\n                variant={currentService?.id === s.id ? \"secondary\" : \"ghost\"}\n                className=\"w-full justify-start truncate text-sm\"\n                onClick={() => onNewChat(s.id)}\n              >\n                {s.icon ? <span>{s.icon}</span> : <Sparkles size={16} />}\n                {s.name.replace(\" Prediction\", \"\")}\n              </Button>\n            ))}\n          </div>\n        </ScrollArea>\n      </div> */}\n      <div className=\"border-b p-3\">\n        <h3 className=\"mb-2 text-sm font-medium\">Services</h3>\n        <ScrollArea className=\"h-[120px]\">\n          <div className=\"space-y-2\">\n            {services.map((s) => (\n              <Button\n                key={s.id}\n                variant={currentService?.id === s.id ? \"secondary\" : \"outline\"}\n                className={cn(\n                  \"w-full justify-start truncate text-sm font-semibold transition-all\",\n                  currentService?.id === s.id\n                    ? \"bg-primary text-primary-foreground shadow-md hover:bg-primary/80\"\n                    : \"bg-muted/20 hover:bg-muted/30\",\n                )}\n                onClick={() => onNewChat(s.id)}\n              >\n                {s.icon ? (\n                  <span className=\"mr-2\">{s.icon}</span>\n                ) : (\n                  <Sparkles size={16} className=\"mr-2\" />\n                )}\n                <span className=\"truncate\">\n                  {s.name.replace(\" Prediction\", \"\")}\n                </span>\n              </Button>\n            ))}\n          </div>\n        </ScrollArea>\n      </div>\n\n      {/* Search */}\n      <div className=\"border-b p-3\">\n        <div className=\"relative\">\n          <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n          <Input\n            placeholder=\"Search chats...\"\n            className=\"pl-8\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {/* Chat History */}\n      <ScrollArea className=\"h-full\">\n        <div className=\"space-y-6 p-3\">\n          {Object.entries(filteredChatsByDate()).length > 0 ? (\n            Object.entries(filteredChatsByDate()).map(([date, dateChats]) => (\n              <div key={date}>\n                <h3 className=\"mb-2 text-xs font-medium text-muted-foreground\">\n                  {date}\n                </h3>\n                <div className=\"space-y-1\">\n                  {dateChats.map((chat) => (\n                    <div key={chat.id} className=\"group relative\">\n                      <Button\n                        variant={\n                          currentChatId === chat.id ? \"secondary\" : \"ghost\"\n                        }\n                        className=\"w-full justify-start text-sm\"\n                        onClick={() => onSelectChat(chat)}\n                      >\n                        <MessageSquare size={16} />\n                        <span className=\"mr-1 truncate\">{chat.title}</span>\n                        <DropdownMenu>\n                          <DropdownMenuTrigger\n                            asChild\n                            onClick={(e) => e.stopPropagation()}\n                          >\n                            <span className=\"absolute right-0 top-0 z-10 grid h-full w-auto place-items-center rounded-r-md p-1 text-white/70 opacity-0 hover:bg-black hover:text-white group-hover:opacity-100\">\n                              <MoreVertical size={14} />\n                            </span>\n                          </DropdownMenuTrigger>\n                          <DropdownMenuContent align=\"end\">\n                            <DropdownMenuItem\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                setChatToRename(chat);\n                                setNewChatTitle(chat.title);\n                                setIsRenameDialogOpen(true);\n                              }}\n                            >\n                              Rename\n                            </DropdownMenuItem>\n                          </DropdownMenuContent>\n                        </DropdownMenu>\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"py-4 text-center text-muted-foreground\">\n              No chat history found\n            </div>\n          )}\n        </div>\n      </ScrollArea>\n\n      {/* User Section */}\n      <div className=\"flex flex-shrink-0 items-center border-y px-3 py-3.5\">\n        <div className=\"mr-2 flex h-8 w-8 items-center justify-center rounded-full bg-primary/10\">\n          <User size={16} />\n        </div>\n        <div className=\"min-w-0 flex-1\">\n          <p className=\"truncate text-sm font-medium\">\n            {session?.user?.name || \"User\"}\n          </p>\n        </div>\n        <Button variant=\"ghost\" size=\"icon\" onClick={onOpenChange}>\n          <SidebarIcon size={16} />\n        </Button>\n      </div>\n\n      {/* Rename Dialog */}\n      <Dialog open={isRenameDialogOpen} onOpenChange={setIsRenameDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Rename Chat</DialogTitle>\n          </DialogHeader>\n          <div className=\"grid gap-4 py-4\">\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"name\">Name</Label>\n              <Input\n                id=\"name\"\n                value={newChatTitle}\n                onChange={(e) => setNewChatTitle(e.target.value)}\n                autoFocus\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                setIsRenameDialogOpen(false);\n                setChatToRename(null);\n              }}\n            >\n              Cancel\n            </Button>\n            <Button onClick={handleRenameChat} disabled={!newChatTitle.trim()}>\n              Save\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </aside>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3646, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3651, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/hooks/use-mobile.ts"],"sourcesContent":["import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,oBAAoB;AAEnB,SAAS;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,gNAAM,QAAQ,CAAsB;IAEpE,gNAAM,SAAS,CAAC;QACd,MAAM,MAAM,OAAO,UAAU,CAAC,CAAC,YAAY,EAAE,oBAAoB,EAAE,GAAG,CAAC;QACvE,MAAM,WAAW;YACf,YAAY,OAAO,UAAU,GAAG;QAClC;QACA,IAAI,gBAAgB,CAAC,UAAU;QAC/B,YAAY,OAAO,UAAU,GAAG;QAChC,OAAO,IAAM,IAAI,mBAAmB,CAAC,UAAU;IACjD,GAAG,EAAE;IAEL,OAAO,CAAC,CAAC;AACX"}},
    {"offset": {"line": 3671, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3676, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/common/chat-interface.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\"use client\";\nimport ChatHeader from \"@/components/pages/chat/chat-header\";\nimport DynamicInput from \"@/components/pages/chat/dynamic-input\";\nimport MessageList from \"@/components/pages/chat/message-list\";\nimport Sidebar from \"@/components/pages/chat/sidebar\";\nimport { useIsMobile } from \"@/hooks/use-mobile\";\nimport ClientSideErrorHandler from \"@/lib/helpers/errors/client\";\nimport type { Block, Chat, Message, Service, UploadedFile } from \"@/lib/types\";\nimport { cn } from \"@/lib/utils\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport { Loader2 } from \"lucide-react\";\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport type React from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\ntype ChatInterfaceProps = {\n  userId: string;\n};\n\nexport default function ChatInterface({ userId }: ChatInterfaceProps) {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n\n  const [services, setServices] = useState<Service[]>([]);\n  const [service, setService] = useState<Service | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState(\"\");\n  const [chatId, setChatId] = useState<string | null>(null);\n  const [sending, setSending] = useState(false);\n  const [chats, setChats] = useState<Chat[]>([]);\n  const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([]);\n  const [uploading, setUploading] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [questionnaireComplete, setQuestionnaireComplete] = useState(false);\n  // const [formData, setFormData] = useState<Record<string, any>>({});\n  const [blocks, setBlocks] = useState<Block[]>([]);\n  const [currentBlock, setCurrentBlock] = useState<Block | null>(null);\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(undefined);\n  const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\n  const isMobile = useIsMobile();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [dragActive, setDragActive] = useState(false);\n  const chatContainerRef = useRef<HTMLDivElement>(null);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const [chatsByDate, setChatsByDate] = useState<Record<string, Chat[]>>({});\n  const [isNewChat, setIsNewChat] = useState(true);\n  const [selectedServiceId, setSelectedServiceId] = useState<string | null>(\n    null,\n  );\n\n  useEffect(() => {\n    if (isMobile) {\n      setIsSidebarOpen(false);\n    } else {\n      setIsSidebarOpen(true);\n    }\n  }, [isMobile]);\n\n  // Load an existing chat\n  const loadExistingChat = useCallback(async (chatId: string) => {\n    try {\n      setLoading(true);\n\n      const response = await fetch(`/api/chats/${chatId}`);\n      const data = await response.json();\n\n      if (data.success) {\n        setChatId(chatId);\n\n        // Ensure blocks is an array before setting it\n        const blocksData = Array.isArray(data.chat.blocks)\n          ? data.chat.blocks\n          : [];\n        setBlocks(blocksData);\n\n        // Set service\n        if (data.chat?.service) {\n          setService(data.chat.service);\n        }\n\n        // Make sure blocks is defined and is an array before filtering\n\n        if (blocksData.length > 0) {\n          // Sort by createdAt in descending order to get the most recent\n          const sortedBlocks = [...blocksData].sort(\n            (a, b) =>\n              new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime(),\n          );\n\n          const mostRecentBlock = sortedBlocks[0];\n          setCurrentBlock(mostRecentBlock);\n\n          // Make sure messages is defined and is an array\n          const blockMessages = Array.isArray(mostRecentBlock.messages)\n            ? mostRecentBlock.messages\n            : [];\n\n          setMessages(blockMessages);\n\n          setUploadedFiles(\n            blockMessages\n              .filter((m: { fileData: UploadedFile }) => m.fileData)\n              .map((m: { fileData: UploadedFile }) => m.fileData),\n          );\n\n          // Check if the block is complete\n          if (mostRecentBlock.status === \"completed\") {\n            setQuestionnaireComplete(true);\n          } else {\n            // If not complete, try to determine what question we're on\n            const userMessages = blockMessages.filter(\n              (m: { role: string }) => m.role === \"user\",\n            ).length;\n            setCurrentQuestionIndex(\n              Math.min(\n                userMessages,\n                data.chat.service?.questionnaire?.length || 0,\n              ),\n            );\n\n            // If we've already answered all questions but block isn't complete\n            if (\n              userMessages >= (data.chat.service?.questionnaire?.length || 0)\n            ) {\n              setQuestionnaireComplete(true);\n            }\n          }\n        }\n      }\n    } catch (error) {\n      ClientSideErrorHandler(error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Fetch services and chat history on component mount\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        setLoading(true);\n\n        // Fetch services\n        const servicesResponse = await fetch(`/api/services`);\n        const servicesData = await servicesResponse.json();\n\n        if (servicesData.success) {\n          setServices(servicesData.services);\n        }\n\n        // Fetch chat history\n        const chatsResponse = await fetch(`/api/chats/me`);\n        const chatsData = await chatsResponse.json();\n\n        if (chatsData.success) {\n          setChats(chatsData.chats);\n\n          // Organize chats by date\n          const chatsByDateObj: Record<string, Chat[]> = {};\n\n          // Last 7 days\n          const last7Days = new Date();\n          last7Days.setDate(last7Days.getDate() - 7);\n\n          // Last 30 days\n          const last30Days = new Date();\n          last30Days.setDate(last30Days.getDate() - 30);\n\n          chatsData.chats.forEach((chat: Chat) => {\n            const chatDate = new Date(chat.createdAt);\n\n            if (chatDate > last7Days) {\n              if (!chatsByDateObj[\"Previous 7 Days\"]) {\n                chatsByDateObj[\"Previous 7 Days\"] = [];\n              }\n              chatsByDateObj[\"Previous 7 Days\"].push(chat);\n            } else if (chatDate > last30Days) {\n              if (!chatsByDateObj[\"Previous 30 Days\"]) {\n                chatsByDateObj[\"Previous 30 Days\"] = [];\n              }\n              chatsByDateObj[\"Previous 30 Days\"].push(chat);\n            } else {\n              // Group by month\n              const monthYear = chatDate.toLocaleString(\"default\", {\n                month: \"long\",\n                year: \"numeric\",\n              });\n              if (!chatsByDateObj[monthYear]) {\n                chatsByDateObj[monthYear] = [];\n              }\n              chatsByDateObj[monthYear].push(chat);\n            }\n          });\n\n          setChatsByDate(chatsByDateObj);\n        }\n\n        // Check for serviceId in URL\n        const serviceId = searchParams.get(\"serviceId\");\n        const chatIdParam = searchParams.get(\"chatId\");\n\n        if (serviceId) {\n          setSelectedServiceId(serviceId);\n\n          // Find the service\n          const selectedService = servicesData.services.find(\n            (s: Service) => s.id === serviceId,\n          );\n          if (selectedService) {\n            setService(selectedService);\n            setIsNewChat(true);\n\n            // If there's also a chatId, load that chat\n            if (chatIdParam) {\n              await loadExistingChat(chatIdParam);\n              setIsNewChat(false);\n            } else {\n              // Initialize with welcome message\n              setMessages([\n                {\n                  role: \"assistant\",\n                  content: `Welcome to ${selectedService.name}! How can I help you today?`,\n                  timestamp: new Date(),\n                },\n              ]);\n            }\n          }\n        }\n      } catch (error) {\n        ClientSideErrorHandler(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchInitialData();\n  }, [userId, searchParams, loadExistingChat]);\n\n  // Select a chat\n  const selectChat = async (chat: Chat) => {\n    await loadExistingChat(chat.id);\n    setIsNewChat(false);\n\n    // Set the service based on the chat's serviceId\n    const chatService = services.find((s) => s.id === chat.serviceId);\n    setService(chatService || null);\n\n    // Update URL without redirect\n    const params = new URLSearchParams();\n    params.set(\"serviceId\", chat.serviceId);\n    params.set(\"chatId\", chat.id);\n    router.push(`?${params.toString()}`, { scroll: false });\n  };\n\n  // Select a block\n  const selectBlock = (block: Block) => {\n    setCurrentBlock(block);\n    setMessages(block.messages || []);\n  };\n\n  // Create a new block in the current chat\n  const createNewBlock = async () => {\n    if (!chatId) return;\n\n    try {\n      const response = await fetch(`/api/chats/${chatId}/block`, {\n        method: \"POST\",\n      });\n      const data = await response.json();\n\n      if (data.success) {\n        // Update the block with messages array if it doesn't exist\n        const newBlock = {\n          ...data.block,\n          messages: data.block.messages || [],\n        };\n\n        // Set current block first to trigger focus in MessageList\n        setCurrentBlock(newBlock);\n\n        // Then update blocks array - add the new block at the beginning\n        setBlocks((prev) => [newBlock, ...prev]);\n\n        setMessages(newBlock.messages);\n        setCurrentQuestionIndex(0);\n        setQuestionnaireComplete(false);\n        setUploadedFiles([]);\n        // setFormData({});\n\n        // Add first question message\n        if (service?.questionnaire && service.questionnaire.length > 0) {\n          const firstQuestion = service.questionnaire[0];\n          const assistantMessage: Message = {\n            role: \"assistant\",\n            content: `${firstQuestion.label}${firstQuestion.required ? \" (Required)\" : \"\"}`,\n            timestamp: new Date(),\n          };\n\n          // Save the message to the block\n          const success = await saveMessageToBlock(\n            data.block.id,\n            assistantMessage,\n          );\n\n          if (success) {\n            // Update local messages\n            setMessages([assistantMessage]);\n\n            // Update the block in the blocks array\n            setBlocks((prev) =>\n              prev.map((b) =>\n                b.id === data.block.id\n                  ? { ...b, messages: [assistantMessage] }\n                  : b,\n              ),\n            );\n\n            // Update current block\n            setCurrentBlock((prev) =>\n              prev && prev.id === data.block.id\n                ? { ...prev, messages: [assistantMessage] }\n                : prev,\n            );\n          }\n        } else {\n          // Generic welcome message if no questionnaire\n          const welcomeMessage: Message = {\n            role: \"assistant\",\n            content: \"How can I help you with your next request?\",\n            timestamp: new Date(),\n          };\n\n          // Save the message to the block\n          const success = await saveMessageToBlock(\n            data.block.id,\n            welcomeMessage,\n          );\n\n          if (success) {\n            // Update local messages\n            setMessages([welcomeMessage]);\n\n            // Update the block in the blocks array\n            setBlocks((prev) =>\n              prev.map((b) =>\n                b.id === data.block.id\n                  ? { ...b, messages: [welcomeMessage] }\n                  : b,\n              ),\n            );\n\n            // Update current block\n            setCurrentBlock((prev) =>\n              prev && prev.id === data.block.id\n                ? { ...prev, messages: [welcomeMessage] }\n                : prev,\n            );\n          }\n        }\n\n        // Force scroll to the new block after a short delay\n        setTimeout(() => {\n          if (messagesEndRef?.current) {\n            messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n          }\n        }, 200);\n      }\n    } catch (error) {\n      ClientSideErrorHandler(error);\n    }\n  };\n\n  // Update block status\n  const updateBlockStatus = async (\n    blockId: string,\n    status: \"completed\" | \"in_progress\",\n  ) => {\n    if (!chatId) return;\n\n    try {\n      const response = await fetch(`/api/chats/${chatId}/block/${blockId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ status }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        // Update blocks list and trigger a re-render\n        const updatedBlocks = blocks.map((block) => {\n          if (block.id === blockId) {\n            // Preserve all existing properties including prediction\n            return { ...block, status };\n          }\n          return block;\n        });\n\n        // Update the blocks state\n        setBlocks(updatedBlocks);\n\n        // If the current block was updated, also update currentBlock state\n        if (currentBlock && currentBlock.id === blockId) {\n          setCurrentBlock({ ...currentBlock, status });\n        }\n      }\n    } catch (error) {\n      ClientSideErrorHandler(error);\n    }\n  };\n\n  // Save message to block\n  const saveMessageToBlock = async (blockId: string, message: Message) => {\n    if (!chatId || !blockId) return false;\n\n    try {\n      const response = await fetch(\n        `/api/chats/${chatId}/block/${blockId}/message`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            message: {\n              role: message.role,\n              content: message.content,\n              timestamp: message.timestamp,\n              fileData: message.fileData,\n            },\n          }),\n        },\n      );\n\n      const data = await response.json();\n\n      if (!data.success) {\n        console.error(\"Failed to save message to block\");\n        return false;\n      }\n\n      // If the API returns the updated block, update our local state\n      if (data.block) {\n        // Update the current block if it's the one we just modified\n        if (currentBlock && currentBlock.id === blockId) {\n          setCurrentBlock(data.block);\n        }\n\n        // Update the block in the blocks array\n        setBlocks((prev) =>\n          prev.map((b) => (b.id === blockId ? data.block : b)),\n        );\n      }\n\n      return data.success as boolean;\n    } catch (error) {\n      ClientSideErrorHandler(error);\n      return false;\n    }\n  };\n\n  // Create a new chat\n  const createNewChat = async (serviceId: string) => {\n    if (!serviceId || !userId) return;\n\n    setUploadedFiles([]);\n\n    try {\n      const response = await fetch(\"/api/chats\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          serviceId,\n          userId,\n          title: `New Chat`,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setChatId(data.chat.id);\n\n        // Ensure the block has a messages array\n        const newBlock = {\n          ...data.block,\n          status: \"in_progress\",\n          messages: data.block.messages || [],\n        };\n\n        // Set current block first to trigger focus\n        setCurrentBlock(newBlock);\n\n        // Then update blocks array\n        setBlocks([newBlock]);\n\n        // Add to chats list\n        const newChat = {\n          id: data.chat.id,\n          title: data.chat.title,\n          createdAt: new Date().toISOString(),\n          serviceId,\n          blocks: [newBlock],\n        };\n\n        setChats((prev) => [newChat, ...prev]);\n\n        // Add to chatsByDate\n        setChatsByDate((prev) => {\n          const newChatsByDate = { ...prev };\n          if (!newChatsByDate[\"Previous 7 Days\"]) {\n            newChatsByDate[\"Previous 7 Days\"] = [];\n          }\n          newChatsByDate[\"Previous 7 Days\"] = [\n            newChat,\n            ...newChatsByDate[\"Previous 7 Days\"],\n          ];\n          return newChatsByDate;\n        });\n\n        // Update URL without redirect\n        const params = new URLSearchParams();\n        params.set(\"serviceId\", serviceId);\n        params.set(\"chatId\", data.chat.id);\n        router.push(`?${params.toString()}`, { scroll: false });\n\n        setIsNewChat(false);\n\n        // Set the service immediately\n        const selectedService = services.find((s) => s.id === serviceId);\n        setService(selectedService || null);\n\n        // Ask the first question if there's a questionnaire\n        if (\n          selectedService?.questionnaire &&\n          selectedService.questionnaire.length > 0\n        ) {\n          const firstQuestion = selectedService.questionnaire[0];\n          const assistantMessage: Message = {\n            role: \"assistant\",\n            content: `${firstQuestion.label}${firstQuestion.required ? \" (Required)\" : \"\"}`,\n            timestamp: new Date(),\n          };\n\n          // Save the message to the block\n          const success = await saveMessageToBlock(\n            data.block.id,\n            assistantMessage,\n          );\n\n          if (success) {\n            // Update local messages\n            setMessages([assistantMessage]);\n\n            // Update the block in the blocks array\n            setBlocks((prev) =>\n              prev.map((b) =>\n                b.id === data.block.id\n                  ? { ...b, messages: [assistantMessage] }\n                  : b,\n              ),\n            );\n\n            // Update current block\n            setCurrentBlock((prev) =>\n              prev && prev.id === data.block.id\n                ? { ...prev, messages: [assistantMessage] }\n                : prev,\n            );\n          }\n        } else {\n          // Generic welcome message if no questionnaire\n          const welcomeMessage: Message = {\n            role: \"assistant\",\n            content: `Welcome to ${selectedService?.name || \"the chat\"}! How can I help you today?`,\n            timestamp: new Date(),\n          };\n\n          // Save the message to the block\n          const success = await saveMessageToBlock(\n            data.block.id,\n            welcomeMessage,\n          );\n\n          if (success) {\n            // Update local messages\n            setMessages([welcomeMessage]);\n\n            // Update the block in the blocks array\n            setBlocks((prev) =>\n              prev.map((b) =>\n                b.id === data.block.id\n                  ? { ...b, messages: [welcomeMessage] }\n                  : b,\n              ),\n            );\n\n            // Update current block\n            setCurrentBlock((prev) =>\n              prev && prev.id === data.block.id\n                ? { ...prev, messages: [welcomeMessage] }\n                : prev,\n            );\n          }\n        }\n      }\n    } catch (error) {\n      ClientSideErrorHandler(error);\n    }\n  };\n\n  // Send message\n  const sendMessage = async () => {\n    // Ensure we have content to send\n    const hasContent =\n      input.trim() ||\n      uploadedFiles.length > 0 ||\n      selectedDate ||\n      selectedOptions.length > 0;\n\n    if (!hasContent && !questionnaireComplete) {\n      return;\n    }\n\n    try {\n      setSending(true);\n\n      // Get current field\n      const currentField = service?.questionnaire?.[currentQuestionIndex];\n\n      // Prepare message content based on field type\n      let messageContent = \"\";\n\n      if (currentField) {\n        switch (currentField.type) {\n          case \"text\":\n          case \"email\":\n          case \"textarea\":\n          case \"number\":\n            messageContent = input.trim();\n            break;\n          case \"date\":\n            messageContent = selectedDate ? format(selectedDate, \"PPP\") : \"\";\n            break;\n          case \"dropdown\":\n            messageContent = input.trim();\n            break;\n          case \"checkbox\":\n            messageContent =\n              selectedOptions.length > 0 ? selectedOptions.join(\", \") : \"\";\n            break;\n          case \"radio\":\n            messageContent = input.trim();\n            break;\n          case \"file\":\n            messageContent = uploadedFiles.length ? uploadedFiles[0].name : \"\";\n            break;\n          default:\n            messageContent = input.trim();\n        }\n      } else {\n        messageContent = input.trim();\n      }\n\n      // Only set \"No input provided\" if messageContent is still empty\n      if (!messageContent) {\n        // if all questionnaire are attempted then type a custom message otherwise type \"No input provided\"\n        if (currentQuestionIndex === service?.questionnaire?.length) {\n          messageContent = \"Please predict\";\n        } else {\n          messageContent = \"No input provided\";\n        }\n      }\n\n      // Add user message to UI immediately\n      const userMessage: Message = {\n        role: \"user\",\n        content: messageContent,\n        timestamp: new Date(),\n      };\n\n      // If it's a file, add file data to the message\n      if (currentField?.type === \"file\" && uploadedFiles.length) {\n        userMessage.fileData = {\n          url: uploadedFiles[0].url,\n          name: uploadedFiles[0].name,\n          type: uploadedFiles[0].type,\n        };\n      }\n\n      // Update UI with user message\n      setMessages((prev) => [...prev.filter((m) => !m.isPreview), userMessage]);\n\n      // If this is a new chat, create it first\n      if (isNewChat && selectedServiceId) {\n        await createNewChat(selectedServiceId);\n        setIsNewChat(false);\n      } else if (currentBlock) {\n        // Save user message to existing block\n        const success = await saveMessageToBlock(currentBlock.id, userMessage);\n\n        if (success && currentBlock) {\n          // Update the current block with the new message\n          const updatedMessages = [\n            ...(currentBlock.messages || []),\n            userMessage,\n          ];\n\n          // Update the current block\n          setCurrentBlock((prev) =>\n            prev ? { ...prev, messages: updatedMessages } : prev,\n          );\n\n          // Update the block in the blocks array\n          setBlocks((prev) =>\n            prev.map((b) =>\n              b.id === currentBlock.id\n                ? { ...b, messages: updatedMessages }\n                : b,\n            ),\n          );\n        }\n      }\n\n      // Reset inputs\n      setInput(\"\");\n      setSelectedDate(undefined);\n      setSelectedOptions([]);\n\n      // Keep file reference for API call but clear UI\n      const fileUrl = uploadedFiles.length ? uploadedFiles[0].url : null;\n      const fileName = uploadedFiles.length ? uploadedFiles[0].name : null;\n      const fileType = uploadedFiles.length ? uploadedFiles[0].type : null;\n\n      // Process questionnaire\n      if (\n        service?.questionnaire &&\n        currentQuestionIndex < service.questionnaire.length\n      ) {\n        const currentField = service.questionnaire[currentQuestionIndex];\n\n        // Save answer to form data\n        let fieldValue: any = messageContent;\n\n        // Format the value based on field type\n        if (currentField.type === \"number\") {\n          fieldValue = Number.parseFloat(messageContent);\n        } else if (currentField.type === \"checkbox\") {\n          fieldValue = selectedOptions;\n        } else if (currentField.type === \"date\") {\n          fieldValue = selectedDate ? selectedDate.toISOString() : null;\n        } else if (currentField.type === \"file\") {\n          fieldValue = fileUrl;\n        }\n\n        // setFormData((prev) => ({\n        //   ...prev,\n        //   [currentField.name]: fieldValue,\n        // }));\n\n        // Move to next question\n        const nextIndex = currentQuestionIndex + 1;\n        setCurrentQuestionIndex(nextIndex);\n\n        if (nextIndex < service.questionnaire.length) {\n          // Ask next question\n          const nextQuestion = service.questionnaire[nextIndex];\n          const assistantMessage: Message = {\n            role: \"assistant\",\n            content: `${nextQuestion.label}${nextQuestion.required ? \" (Required)\" : \"\"}`,\n            timestamp: new Date(),\n          };\n\n          // Save assistant message to block\n          if (currentBlock) {\n            const success = await saveMessageToBlock(\n              currentBlock.id,\n              assistantMessage,\n            );\n\n            if (success) {\n              // Update UI with assistant message\n              setMessages((prev) => [...prev, assistantMessage]);\n\n              // Update the current block with the new message\n              if (currentBlock) {\n                const updatedMessages = [\n                  ...(currentBlock.messages || []),\n                  assistantMessage,\n                ];\n\n                // Update the current block\n                setCurrentBlock((prev) =>\n                  prev ? { ...prev, messages: updatedMessages } : prev,\n                );\n\n                // Update the block in the blocks array\n                setBlocks((prev) =>\n                  prev.map((b) =>\n                    b.id === currentBlock.id\n                      ? { ...b, messages: updatedMessages }\n                      : b,\n                  ),\n                );\n              }\n            }\n          }\n\n          setSending(false);\n          return;\n        } else {\n          // All questions answered, mark as ready for submission\n          setQuestionnaireComplete(true);\n\n          // Show completion message\n          const completionMessage: Message = {\n            role: \"assistant\",\n            content:\n              \"Thank you for providing all the information! Click submit to process your request.\",\n            timestamp: new Date(),\n          };\n\n          // Save completion message to block\n          if (currentBlock) {\n            const success = await saveMessageToBlock(\n              currentBlock.id,\n              completionMessage,\n            );\n\n            if (success) {\n              // Update UI with completion message\n              setMessages((prev) => [...prev, completionMessage]);\n\n              // Update the current block with the new message\n              if (currentBlock) {\n                const updatedMessages = [\n                  ...(currentBlock.messages || []),\n                  completionMessage,\n                ];\n\n                // Update the current block\n                setCurrentBlock((prev) =>\n                  prev ? { ...prev, messages: updatedMessages } : prev,\n                );\n\n                // Update the block in the blocks array\n                setBlocks((prev) =>\n                  prev.map((b) =>\n                    b.id === currentBlock.id\n                      ? { ...b, messages: updatedMessages }\n                      : b,\n                  ),\n                );\n              }\n            }\n          }\n\n          setSending(false);\n          return;\n        }\n      }\n\n      // If questionnaire is complete, send to prediction API\n      if (questionnaireComplete) {\n        // Show loading message\n        const loadingMessage: Message = {\n          role: \"assistant\",\n          content: \"Processing your request...\",\n          timestamp: new Date(),\n        };\n\n        // Update UI with loading message\n        setMessages((prev) => [...prev, loadingMessage]);\n\n        // Update the current block with the loading message\n        if (currentBlock) {\n          const updatedMessages = [\n            ...(currentBlock.messages || []),\n            loadingMessage,\n          ];\n\n          // Update the current block\n          setCurrentBlock((prev) =>\n            prev ? { ...prev, messages: updatedMessages } : prev,\n          );\n\n          // Update the block in the blocks array\n          setBlocks((prev) =>\n            prev.map((b) =>\n              b.id === currentBlock.id\n                ? { ...b, messages: updatedMessages }\n                : b,\n            ),\n          );\n        }\n\n        // Generate prediction\n        try {\n          const predictionResponse = await axios.post(\"/api/predict\", {\n            // itemDetails: formData,\n            context: messages,\n            images: fileUrl ? [fileUrl] : [], // Keep this for backward compatibility\n            imageUrls: fileUrl ? [fileUrl] : [], // Add this line to use the secure_url directly\n            blockId: currentBlock?.id,\n            chatId,\n          });\n\n          if (predictionResponse.data.success) {\n            const predictionMessage: Message = {\n              role: \"assistant\",\n              content: predictionResponse.data.prediction?.text || \"\",\n              timestamp: new Date(),\n            };\n\n            // Save prediction message to block\n            if (currentBlock) {\n              const success = await saveMessageToBlock(\n                currentBlock.id,\n                predictionMessage,\n              );\n\n              if (success) {\n                // Update UI with prediction message (replace loading message)\n                setMessages((prev) => [\n                  ...prev.slice(0, -1),\n                  predictionMessage,\n                ]);\n\n                // Update the current block with the prediction message (replace loading message)\n                if (currentBlock) {\n                  const updatedMessages = [\n                    ...(currentBlock.messages || []).slice(0, -1),\n                    predictionMessage,\n                  ];\n\n                  // Get the prediction data\n                  const predictionData =\n                    predictionResponse.data.prediction?.json || null;\n\n                  // Update the current block with both messages and prediction\n                  setCurrentBlock((prev) =>\n                    prev\n                      ? {\n                          ...prev,\n                          messages: updatedMessages,\n                          prediction: predictionData,\n                        }\n                      : prev,\n                  );\n\n                  // Update the block in the blocks array with both messages and prediction\n                  setBlocks((prev) =>\n                    prev.map((b) =>\n                      b.id === currentBlock.id\n                        ? {\n                            ...b,\n                            messages: updatedMessages,\n                            prediction: predictionData,\n                          }\n                        : b,\n                    ),\n                  );\n\n                  // Mark block as completed - this is where we need to ensure the UI updates\n                  await updateBlockStatus(currentBlock.id, \"completed\");\n\n                  // Force a re-render of the blocks with the updated status and prediction\n                  setBlocks((prev) =>\n                    prev.map((b) =>\n                      b.id === currentBlock.id\n                        ? {\n                            ...b,\n                            status: \"completed\",\n                            prediction: predictionData,\n                          }\n                        : b,\n                    ),\n                  );\n                }\n              }\n            }\n\n            setSending(false);\n          }\n        } catch (error) {\n          ClientSideErrorHandler(error);\n          const errorMessage: Message = {\n            role: \"assistant\",\n            content:\n              \"Sorry, I encountered an error while processing your request. Please try again.\",\n            timestamp: new Date(),\n          };\n\n          // Save error message to block\n          if (currentBlock) {\n            const success = await saveMessageToBlock(\n              currentBlock.id,\n              errorMessage,\n            );\n\n            if (success) {\n              // Update UI with error message (replace loading message)\n              setMessages((prev) => [...prev.slice(0, -1), errorMessage]);\n\n              // Update the current block with the error message (replace loading message)\n              if (currentBlock) {\n                const updatedMessages = [\n                  ...(currentBlock.messages || []).slice(0, -1),\n                  errorMessage,\n                ];\n\n                // Update the current block\n                setCurrentBlock((prev) =>\n                  prev ? { ...prev, messages: updatedMessages } : prev,\n                );\n\n                // Update the block in the blocks array\n                setBlocks((prev) =>\n                  prev.map((b) =>\n                    b.id === currentBlock.id\n                      ? { ...b, messages: updatedMessages }\n                      : b,\n                  ),\n                );\n              }\n            }\n          }\n\n          setSending(false);\n        }\n\n        return;\n      }\n\n      // Handle generic message (not part of questionnaire)\n      if (!service?.questionnaire || service.questionnaire.length === 0) {\n        // Show typing indicator\n        const typingMessage: Message = {\n          role: \"assistant\",\n          content: \"Thinking...\",\n          timestamp: new Date(),\n        };\n\n        // Update UI with typing message\n        setMessages((prev) => [...prev, typingMessage]);\n\n        // Update the current block with the typing message\n        if (currentBlock) {\n          const updatedMessages = [\n            ...(currentBlock.messages || []),\n            typingMessage,\n          ];\n\n          // Update the current block\n          setCurrentBlock((prev) =>\n            prev ? { ...prev, messages: updatedMessages } : prev,\n          );\n\n          // Update the block in the blocks array\n          setBlocks((prev) =>\n            prev.map((b) =>\n              b.id === currentBlock.id\n                ? { ...b, messages: updatedMessages }\n                : b,\n            ),\n          );\n        }\n\n        // Send to API\n        try {\n          const response = await fetch(`/api/chats/${chatId}/message`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              message: messageContent,\n              blockId: currentBlock?.id,\n              fileUrl,\n              fileName,\n              fileType,\n            }),\n          });\n\n          const data = await response.json();\n\n          if (data.success) {\n            // Update messages with the latest from the server\n            if (data.block && Array.isArray(data.block.messages)) {\n              // Update UI with the server response\n              setMessages(data.block.messages);\n\n              // Update current block in state\n              setCurrentBlock(data.block);\n\n              // Update blocks array while preserving status\n              setBlocks((prev) =>\n                prev.map((b) =>\n                  b.id === data.block.id\n                    ? { ...data.block, status: b.status || \"in_progress\" }\n                    : b,\n                ),\n              );\n            }\n          }\n        } catch (error) {\n          ClientSideErrorHandler(error);\n\n          // Remove typing indicator and show error\n          setMessages((prev) => {\n            const filtered = prev.filter((m) => m.content !== \"Thinking...\");\n            return [\n              ...filtered,\n              {\n                role: \"assistant\",\n                content: \"Sorry, I encountered an error. Please try again.\",\n                timestamp: new Date(),\n              },\n            ];\n          });\n\n          // Update the current block by removing the typing message and adding an error message\n          if (currentBlock) {\n            const filteredMessages = (currentBlock.messages || []).filter(\n              (m) => m.content !== \"Thinking...\",\n            );\n\n            const errorMessage = {\n              role: \"assistant\" as const,\n              content: \"Sorry, I encountered an error. Please try again.\",\n              timestamp: new Date(),\n            };\n\n            const updatedMessages = [...filteredMessages, errorMessage];\n\n            // Update the current block\n            setCurrentBlock((prev) =>\n              prev ? { ...prev, messages: updatedMessages } : prev,\n            );\n\n            // Update the block in the blocks array\n            setBlocks((prev) =>\n              prev.map((b) =>\n                b.id === currentBlock.id\n                  ? { ...b, messages: updatedMessages }\n                  : b,\n              ),\n            );\n          }\n        }\n      }\n    } catch (error) {\n      ClientSideErrorHandler(error);\n    } finally {\n      setSending(false);\n    }\n  };\n\n  // Handle file upload\n  const handleFileUpload = async (files: FileList | null) => {\n    if (!files || files.length === 0) return;\n\n    try {\n      setUploading(true);\n\n      // Only process the first file\n      const file = files[0];\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      const response = await fetch(\"/api/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        const newFile = {\n          url: data.result.secure_url,\n          name: file.name,\n          type: file.type,\n        };\n\n        setUploadedFiles([newFile]);\n\n        // If it's a file field, immediately show the file in the chat\n        if (currentField?.type === \"file\") {\n          // Create a temporary message to show the file\n          const filePreviewMessage: Message = {\n            role: \"user\",\n            content: \"Selected file:\",\n            fileData: newFile,\n            timestamp: new Date(),\n            isPreview: true, // Mark as preview so we can replace it when actually sending\n          };\n\n          setMessages((prev) => {\n            // Filter out any previous preview messages\n            const filteredMessages = prev.filter((m) => !m.isPreview);\n            return [...filteredMessages, filePreviewMessage];\n          });\n        }\n      }\n    } catch (error) {\n      ClientSideErrorHandler(error);\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  // Handle drag events\n  const handleDrag = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    } else if (\n      e.type === \"drop\" &&\n      e.dataTransfer.files &&\n      e.dataTransfer.files.length > 0\n    ) {\n      setDragActive(false);\n      handleFileUpload(e.dataTransfer.files);\n    }\n  };\n\n  // Get current field for input type\n  const currentField = service?.questionnaire?.[currentQuestionIndex];\n\n  if (loading) {\n    return (\n      <div className=\"flex h-[calc(100vh-4rem)] items-center justify-center\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n      </div>\n    );\n  }\n\n  return (\n    <main className=\"flex h-[92svh] w-full overflow-hidden md:overflow-auto\">\n      {/* Sidebar */}\n      <Sidebar\n        isOpen={isSidebarOpen}\n        onOpenChange={() => setIsSidebarOpen((prev) => !prev)}\n        services={services}\n        chats={chats}\n        setChats={setChats}\n        chatsByDate={chatsByDate}\n        setChatsByDate={setChatsByDate}\n        currentService={service}\n        currentChatId={chatId}\n        currentBlock={currentBlock}\n        blocks={blocks}\n        onSelectChat={selectChat}\n        onSelectBlock={selectBlock}\n        onNewChat={createNewChat}\n      />\n\n      {/* Main Chat Area */}\n      <section\n        className={cn(\n          \"relative flex flex-1 flex-col transition-all duration-200\",\n          isSidebarOpen\n            ? \"pointer-events-none w-0 opacity-0 md:pointer-events-auto md:w-[70%] md:opacity-100 lg:w-[75%] xl:w-[80%]\"\n            : \"w-full\",\n        )}\n        ref={chatContainerRef}\n        onDragEnter={handleDrag}\n        onDragOver={handleDrag}\n        onDragLeave={handleDrag}\n        onDrop={handleDrag}\n      >\n        {/* Header */}\n        <ChatHeader\n          isSidebarOpen={isSidebarOpen}\n          toggleSidebar={() => setIsSidebarOpen((prev) => !prev)}\n          service={service}\n          currentBlock={currentBlock}\n          onCreateNewBlock={createNewBlock}\n          onDiscardBlock={() => {}}\n        />\n\n        {/* Messages */}\n        <MessageList\n          files={uploadedFiles}\n          messages={messages}\n          service={service}\n          blocks={blocks}\n          currentBlock={currentBlock}\n          messagesEndRef={messagesEndRef}\n          services={services}\n          onSelectService={createNewChat}\n        />\n\n        {/* Input Area */}\n        {/* Dynamic Input based on field type */}\n        <DynamicInput\n          services={services}\n          onSelectService={createNewChat}\n          currentField={currentField}\n          input={input}\n          setInput={setInput}\n          selectedDate={selectedDate}\n          setSelectedDate={setSelectedDate}\n          selectedOptions={selectedOptions}\n          setSelectedOptions={setSelectedOptions}\n          uploadedFiles={uploadedFiles}\n          setUploadedFiles={setUploadedFiles}\n          sending={sending}\n          onSend={sendMessage}\n          fileUploading={uploading}\n          onFileUpload={handleFileUpload}\n          onDrag={handleDrag}\n          dragActive={dragActive}\n          service={service}\n          currentBlock={currentBlock}\n          createNewBlock={createNewBlock}\n          allQuestionsAttempted={\n            service?.questionnaire &&\n            currentQuestionIndex >= service.questionnaire.length\n          }\n        />\n      </section>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4828, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}